
==================== Tidy Core ====================
2021-05-14 17:30:34.683068949 UTC

Result size of Tidy Core
  = {terms: 1,541, types: 77,526, coercions: 176,078, joins: 0/52}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.ARec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~15 :: "a15" ~ "a15"
$d~15 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel :: IsLabel "a15" (Label "a15")
$dIsLabel = $fIsLabelsLabel $d~15

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~16 :: 'S 'Z ~ 'S 'Z
$d~16 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~17 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~17 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~18 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~18 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~19 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~19 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~20 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~20 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~21 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~22 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~23 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~24 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~25 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~26 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~27
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~27 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~28 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~29
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~29 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~30 :: "a14" ~ "a14"
$d~30 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel1 :: IsLabel "a14" (Label "a14")
$dIsLabel1 = $fIsLabelsLabel $d~30

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~31 :: 'S 'Z ~ 'S 'Z
$d~31 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~32 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~32 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~33 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~33 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~34 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~34 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~35 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~35 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~36 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~37 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~38 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~39 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~40 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~41
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~41 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~42
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~42 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~43
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~43 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~44 :: "a13" ~ "a13"
$d~44 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel2 :: IsLabel "a13" (Label "a13")
$dIsLabel2 = $fIsLabelsLabel $d~44

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~45 :: 'S 'Z ~ 'S 'Z
$d~45 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~46 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~46 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~47 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~47 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~48 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~48 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~49 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~49 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~50 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~51 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~52 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~53 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~54
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~54 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~55
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~55 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~56
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~56 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~57 :: "a12" ~ "a12"
$d~57 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel3 :: IsLabel "a12" (Label "a12")
$dIsLabel3 = $fIsLabelsLabel $d~57

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~58 :: 'S 'Z ~ 'S 'Z
$d~58 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~59 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~59 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~60 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~60 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~61 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~61 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~62 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~62 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~63 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~64 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~65
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~65 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~66
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~66 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~67
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~67 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~68
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~68 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~69 :: "a11" ~ "a11"
$d~69 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel4 :: IsLabel "a11" (Label "a11")
$dIsLabel4 = $fIsLabelsLabel $d~69

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~70 :: 'S 'Z ~ 'S 'Z
$d~70 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~71 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~71 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~72 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~72 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~73 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~73 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~74 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~74 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~75
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~75 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~76
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~76 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~77
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~77 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~78
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~78 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~79
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~79 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~80 :: "a10" ~ "a10"
$d~80 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel5 :: IsLabel "a10" (Label "a10")
$dIsLabel5 = $fIsLabelsLabel $d~80

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~81 :: 'S 'Z ~ 'S 'Z
$d~81 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~82 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~82 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~83 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~83 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~84 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~84 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~85 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~85 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~86
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~86 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~87
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~87 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~88
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~88 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~89 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~90 :: "a9" ~ "a9"
$d~90 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel6 :: IsLabel "a9" (Label "a9")
$dIsLabel6 = $fIsLabelsLabel $d~90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~91 :: 'S 'Z ~ 'S 'Z
$d~91 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~92 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~92 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~93 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~93 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~94 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~94 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~95 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~95 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~96
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~96 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~97 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~98 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~99 :: "a8" ~ "a8"
$d~99 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel7 :: IsLabel "a8" (Label "a8")
$dIsLabel7 = $fIsLabelsLabel $d~99

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~100 :: 'S 'Z ~ 'S 'Z
$d~100 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~101 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~101 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~102 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~102 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~103 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~103 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~104 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~104 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~105
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~105 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~106
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~106 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~107 :: "a7" ~ "a7"
$d~107 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel8 :: IsLabel "a7" (Label "a7")
$dIsLabel8 = $fIsLabelsLabel $d~107

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~108 :: 'S 'Z ~ 'S 'Z
$d~108 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~109 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~109 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~110 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~110 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~111 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~111 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~112 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~112 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~113
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~113 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~114 :: "a6" ~ "a6"
$d~114 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel9 :: IsLabel "a6" (Label "a6")
$dIsLabel9 = $fIsLabelsLabel $d~114

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~115 :: 'S 'Z ~ 'S 'Z
$d~115 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~116 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~116 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~117 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~117 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~118 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~118 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~119 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~119 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~120 :: "a5" ~ "a5"
$d~120 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel10 :: IsLabel "a5" (Label "a5")
$dIsLabel10 = $fIsLabelsLabel $d~120

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~121 :: 'S 'Z ~ 'S 'Z
$d~121 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~122 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~122 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~123 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~123 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~124 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~124 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~125 :: "a4" ~ "a4"
$d~125 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel11 :: IsLabel "a4" (Label "a4")
$dIsLabel11 = $fIsLabelsLabel $d~125

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~126 :: 'S 'Z ~ 'S 'Z
$d~126 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~127 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~127 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~128 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~128 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~129 :: "a3" ~ "a3"
$d~129 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel12 :: IsLabel "a3" (Label "a3")
$dIsLabel12 = $fIsLabelsLabel $d~129

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~130 :: 'S 'Z ~ 'S 'Z
$d~130 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~131 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~131 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~132 :: "a2" ~ "a2"
$d~132 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel13 :: IsLabel "a2" (Label "a2")
$dIsLabel13 = $fIsLabelsLabel $d~132

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
$dNatToInt :: NatToInt ('S 'Z)
$dNatToInt = $fNatToIntS $fNatToIntZ

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dNatToInt1 :: NatToInt ('S ('S 'Z))
$dNatToInt1 = $fNatToIntS $dNatToInt

-- RHS size: {terms: 2, types: 3, coercions: 0, joins: 0/0}
$dNatToInt2 :: NatToInt ('S ('S ('S 'Z)))
$dNatToInt2 = $fNatToIntS $dNatToInt1

-- RHS size: {terms: 2, types: 4, coercions: 0, joins: 0/0}
$dNatToInt3 :: NatToInt ('S ('S ('S ('S 'Z))))
$dNatToInt3 = $fNatToIntS $dNatToInt2

-- RHS size: {terms: 2, types: 5, coercions: 0, joins: 0/0}
$dNatToInt4 :: NatToInt ('S ('S ('S ('S ('S 'Z)))))
$dNatToInt4 = $fNatToIntS $dNatToInt3

-- RHS size: {terms: 2, types: 6, coercions: 0, joins: 0/0}
$dNatToInt5 :: NatToInt ('S ('S ('S ('S ('S ('S 'Z))))))
$dNatToInt5 = $fNatToIntS $dNatToInt4

-- RHS size: {terms: 2, types: 7, coercions: 0, joins: 0/0}
$dNatToInt6 :: NatToInt ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dNatToInt6 = $fNatToIntS $dNatToInt5

-- RHS size: {terms: 2, types: 8, coercions: 0, joins: 0/0}
$dNatToInt7 :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dNatToInt7 = $fNatToIntS $dNatToInt6

-- RHS size: {terms: 2, types: 9, coercions: 0, joins: 0/0}
$dNatToInt8
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dNatToInt8 = $fNatToIntS $dNatToInt7

-- RHS size: {terms: 2, types: 10, coercions: 0, joins: 0/0}
$dNatToInt9
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dNatToInt9 = $fNatToIntS $dNatToInt8

-- RHS size: {terms: 2, types: 11, coercions: 0, joins: 0/0}
$dNatToInt10
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dNatToInt10 = $fNatToIntS $dNatToInt9

-- RHS size: {terms: 2, types: 12, coercions: 0, joins: 0/0}
$dNatToInt11
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dNatToInt11 = $fNatToIntS $dNatToInt10

-- RHS size: {terms: 2, types: 13, coercions: 0, joins: 0/0}
$dNatToInt12
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dNatToInt12 = $fNatToIntS $dNatToInt11

-- RHS size: {terms: 2, types: 14, coercions: 0, joins: 0/0}
$dNatToInt13
  :: NatToInt
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dNatToInt13 = $fNatToIntS $dNatToInt12

-- RHS size: {terms: 2, types: 15, coercions: 0, joins: 0/0}
$dNatToInt14
  :: NatToInt
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dNatToInt14 = $fNatToIntS $dNatToInt13

-- RHS size: {terms: 2, types: 16, coercions: 0, joins: 0/0}
$dNatToInt15
  :: NatToInt
       ('S
          ('S
             ('S
                ('S
                   ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))))
$dNatToInt15 = $fNatToIntS $dNatToInt14

-- RHS size: {terms: 162,
              types: 6,652,
              coercions: 3,024,
              joins: 0/0}
mkToARec :: Int -> ARec ElField Fields
mkToARec
  = \ (i :: Int) ->
      break<48>(i)
      toARec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<47>(i)
         case break<16>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
         { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
         case break<46>(i)
              case break<17>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
              { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
              case break<45>(i)
                   case break<18>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                   { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                   case break<44>(i)
                        case break<19>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                        { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                        case break<43>(i)
                             case break<20>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                             { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                             case break<42>(i)
                                  case break<21>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                                  { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                                  case break<41>(i)
                                       case break<22>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                       of dt6
                                       { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                       case break<40>(i)
                                            case break<23>(i)
                                                 $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                            of dt7
                                            { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                            case break<39>(i)
                                                 case break<24>(i)
                                                      $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                                 of dt8
                                                 { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                                 case break<38>(i)
                                                      case break<25>(i)
                                                           $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                      of dt9
                                                      { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                      case break<37>(i)
                                                           case break<26>(i)
                                                                $WField
                                                                  ($dKnownSymbol5 `cast` <Co:7>) i
                                                           of dt10
                                                           { Field @ ipv50 @ ipv51 ipv52 ipv53
                                                                   ipv54 ->
                                                           case break<36>(i)
                                                                case break<27>(i)
                                                                     $WField
                                                                       ($dKnownSymbol4
                                                                        `cast` <Co:7>)
                                                                       i
                                                                of dt11
                                                                { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                        ipv59 ->
                                                                case break<35>(i)
                                                                     case break<28>(i)
                                                                          $WField
                                                                            ($dKnownSymbol3
                                                                             `cast` <Co:7>)
                                                                            i
                                                                     of dt12
                                                                     { Field @ ipv60 @ ipv61 ipv62
                                                                             ipv63 ipv64 ->
                                                                     case break<34>(i)
                                                                          case break<29>(i)
                                                                               $WField
                                                                                 ($dKnownSymbol2
                                                                                  `cast` <Co:7>)
                                                                                 i
                                                                          of dt13
                                                                          { Field @ ipv65 @ ipv66
                                                                                  ipv67 ipv68
                                                                                  ipv69 ->
                                                                          case break<33>(i)
                                                                               case break<30>(i)
                                                                                    $WField
                                                                                      ($dKnownSymbol1
                                                                                       `cast` <Co:7>)
                                                                                      i
                                                                               of dt14
                                                                               { Field @ ipv70
                                                                                       @ ipv71 ipv72
                                                                                       ipv73
                                                                                       ipv74 ->
                                                                               case break<32>()
                                                                                    case break<31>()
                                                                                         Field
                                                                                           @~ <Co:6>
                                                                                           ($dKnownSymbol
                                                                                            `cast` <Co:7>)
                                                                                           (I# 99#)
                                                                                    of dt15
                                                                                    { Field @ ipv75
                                                                                            @ ipv76
                                                                                            ipv77
                                                                                            ipv78
                                                                                            ipv79 ->
                                                                                    :&
                                                                                      @~ <Co:14>
                                                                                      dt15
                                                                                      (RNil
                                                                                         @~ <Co:4>)
                                                                                    }
                                                                               of dt15
                                                                               { :& @ ipv75 @ ipv76
                                                                                    ipv77 ipv78
                                                                                    ipv79 ->
                                                                               :&
                                                                                 @~ <Co:24>
                                                                                 dt14
                                                                                 dt15
                                                                               }
                                                                               }
                                                                          of dt14
                                                                          { :& @ ipv70 @ ipv71 ipv72
                                                                               ipv73 ipv74 ->
                                                                          :& @~ <Co:34> dt13 dt14
                                                                          }
                                                                          }
                                                                     of dt13
                                                                     { :& @ ipv65 @ ipv66 ipv67
                                                                          ipv68 ipv69 ->
                                                                     :& @~ <Co:44> dt12 dt13
                                                                     }
                                                                     }
                                                                of dt12
                                                                { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                     ipv64 ->
                                                                :& @~ <Co:54> dt11 dt12
                                                                }
                                                                }
                                                           of dt11
                                                           { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                           :& @~ <Co:64> dt10 dt11
                                                           }
                                                           }
                                                      of dt10
                                                      { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                      :& @~ <Co:74> dt9 dt10
                                                      }
                                                      }
                                                 of dt9
                                                 { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                 :& @~ <Co:84> dt8 dt9
                                                 }
                                                 }
                                            of dt8
                                            { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                            :& @~ <Co:94> dt7 dt8
                                            }
                                            }
                                       of dt7
                                       { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                       :& @~ <Co:104> dt6 dt7
                                       }
                                       }
                                  of dt6
                                  { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                  :& @~ <Co:114> dt5 dt6
                                  }
                                  }
                             of dt5
                             { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                             :& @~ <Co:124> dt4 dt5
                             }
                             }
                        of dt4
                        { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                        :& @~ <Co:134> dt3 dt4
                        }
                        }
                   of dt3
                   { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                   :& @~ <Co:144> dt2 dt3
                   }
                   }
              of dt2
              { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
              :& @~ <Co:154> dt1 dt2
              }
              }
         of dt1
         { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
         :& @~ <Co:164> dt dt1
         }
         })

-- RHS size: {terms: 69,
              types: 1,637,
              coercions: 1,596,
              joins: 0/0}
mkARec :: Int -> ARec ElField Fields
mkARec
  = \ (i :: Int) ->
      break<81>(i)
      arec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<80>(i)
         &:
           (break<49>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i)
           (break<79>(i)
            &:
              (break<50>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i)
              (break<78>(i)
               &:
                 (break<51>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i)
                 (break<77>(i)
                  &:
                    (break<52>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i)
                    (break<76>(i)
                     &:
                       (break<53>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i)
                       (break<75>(i)
                        &:
                          (break<54>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i)
                          (break<74>(i)
                           &:
                             (break<55>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i)
                             (break<73>(i)
                              &:
                                (break<56>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i)
                                (break<72>(i)
                                 &:
                                   (break<57>(i) $WField ($dKnownSymbol7 `cast` <Co:7>) i)
                                   (break<71>(i)
                                    &:
                                      (break<58>(i) $WField ($dKnownSymbol6 `cast` <Co:7>) i)
                                      (break<70>(i)
                                       &:
                                         (break<59>(i) $WField ($dKnownSymbol5 `cast` <Co:7>) i)
                                         (break<69>(i)
                                          &:
                                            (break<60>(i) $WField ($dKnownSymbol4 `cast` <Co:7>) i)
                                            (break<68>(i)
                                             &:
                                               (break<61>(i)
                                                $WField ($dKnownSymbol3 `cast` <Co:7>) i)
                                               (break<67>(i)
                                                &:
                                                  (break<62>(i)
                                                   $WField ($dKnownSymbol2 `cast` <Co:7>) i)
                                                  (break<66>(i)
                                                   &:
                                                     (break<63>(i)
                                                      $WField ($dKnownSymbol1 `cast` <Co:7>) i)
                                                     (break<65>()
                                                      &:
                                                        (break<64>()
                                                         Field
                                                           @~ <Co:6>
                                                           ($dKnownSymbol `cast` <Co:7>)
                                                           (I# 99#))
                                                        arnil))))))))))))))))

-- RHS size: {terms: 4, types: 499, coercions: 339, joins: 0/0}
$dRecElem
  :: RecElem
       ARec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaARectt'::S
      ($d~130 `cast` <Co:339>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 361, coercions: 528, joins: 0/0}
$dRecElem1
  :: RecElem
       ARec ("a2" ::: Int) ("a2" ::: Int) Fields Fields ('S ('S 'Z))
$dRecElem1
  = $fRecElemaARectt'::S
      ($d~131 `cast` <Co:528>) $dNatToInt $dRecElem

-- RHS size: {terms: 4, types: 466, coercions: 317, joins: 0/0}
$dRecElem2
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem2
  = $fRecElemaARectt'::S
      ($d~126 `cast` <Co:317>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 339, coercions: 495, joins: 0/0}
$dRecElem3
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem3
  = $fRecElemaARectt'::S
      ($d~127 `cast` <Co:495>) $dNatToInt $dRecElem2

-- RHS size: {terms: 4, types: 362, coercions: 684, joins: 0/0}
$dRecElem4
  :: RecElem
       ARec ("a3" ::: Int) ("a3" ::: Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem4
  = $fRecElemaARectt'::S
      ($d~128 `cast` <Co:684>) $dNatToInt1 $dRecElem3

-- RHS size: {terms: 4, types: 433, coercions: 295, joins: 0/0}
$dRecElem5
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem5
  = $fRecElemaARectt'::S
      ($d~121 `cast` <Co:295>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 317, coercions: 462, joins: 0/0}
$dRecElem6
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem6
  = $fRecElemaARectt'::S
      ($d~122 `cast` <Co:462>) $dNatToInt $dRecElem5

-- RHS size: {terms: 4, types: 340, coercions: 640, joins: 0/0}
$dRecElem7
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem7
  = $fRecElemaARectt'::S
      ($d~123 `cast` <Co:640>) $dNatToInt1 $dRecElem6

-- RHS size: {terms: 4, types: 363, coercions: 829, joins: 0/0}
$dRecElem8
  :: RecElem
       ARec
       ("a4" ::: Int)
       ("a4" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S 'Z))))
$dRecElem8
  = $fRecElemaARectt'::S
      ($d~124 `cast` <Co:829>) $dNatToInt2 $dRecElem7

-- RHS size: {terms: 4, types: 400, coercions: 273, joins: 0/0}
$dRecElem9
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem9
  = $fRecElemaARectt'::S
      ($d~115 `cast` <Co:273>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 295, coercions: 429, joins: 0/0}
$dRecElem10
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem10
  = $fRecElemaARectt'::S
      ($d~116 `cast` <Co:429>) $dNatToInt $dRecElem9

-- RHS size: {terms: 4, types: 318, coercions: 596, joins: 0/0}
$dRecElem11
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem11
  = $fRecElemaARectt'::S
      ($d~117 `cast` <Co:596>) $dNatToInt1 $dRecElem10

-- RHS size: {terms: 4, types: 341, coercions: 774, joins: 0/0}
$dRecElem12
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem12
  = $fRecElemaARectt'::S
      ($d~118 `cast` <Co:774>) $dNatToInt2 $dRecElem11

-- RHS size: {terms: 4, types: 364, coercions: 963, joins: 0/0}
$dRecElem13
  :: RecElem
       ARec
       ("a5" ::: Int)
       ("a5" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem13
  = $fRecElemaARectt'::S
      ($d~119 `cast` <Co:963>) $dNatToInt3 $dRecElem12

-- RHS size: {terms: 4, types: 367, coercions: 251, joins: 0/0}
$dRecElem14
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem14
  = $fRecElemaARectt'::S
      ($d~108 `cast` <Co:251>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 273, coercions: 396, joins: 0/0}
$dRecElem15
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem15
  = $fRecElemaARectt'::S
      ($d~109 `cast` <Co:396>) $dNatToInt $dRecElem14

-- RHS size: {terms: 4, types: 296, coercions: 552, joins: 0/0}
$dRecElem16
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem16
  = $fRecElemaARectt'::S
      ($d~110 `cast` <Co:552>) $dNatToInt1 $dRecElem15

-- RHS size: {terms: 4, types: 319, coercions: 719, joins: 0/0}
$dRecElem17
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem17
  = $fRecElemaARectt'::S
      ($d~111 `cast` <Co:719>) $dNatToInt2 $dRecElem16

-- RHS size: {terms: 4, types: 342, coercions: 897, joins: 0/0}
$dRecElem18
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem18
  = $fRecElemaARectt'::S
      ($d~112 `cast` <Co:897>) $dNatToInt3 $dRecElem17

-- RHS size: {terms: 4, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem19
  :: RecElem
       ARec
       ("a6" ::: Int)
       ("a6" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem19
  = $fRecElemaARectt'::S
      ($d~113 `cast` <Co:1086>) $dNatToInt4 $dRecElem18

-- RHS size: {terms: 4, types: 334, coercions: 229, joins: 0/0}
$dRecElem20
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem20
  = $fRecElemaARectt'::S
      ($d~100 `cast` <Co:229>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 251, coercions: 363, joins: 0/0}
$dRecElem21
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem21
  = $fRecElemaARectt'::S
      ($d~101 `cast` <Co:363>) $dNatToInt $dRecElem20

-- RHS size: {terms: 4, types: 274, coercions: 508, joins: 0/0}
$dRecElem22
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem22
  = $fRecElemaARectt'::S
      ($d~102 `cast` <Co:508>) $dNatToInt1 $dRecElem21

-- RHS size: {terms: 4, types: 297, coercions: 664, joins: 0/0}
$dRecElem23
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem23
  = $fRecElemaARectt'::S
      ($d~103 `cast` <Co:664>) $dNatToInt2 $dRecElem22

-- RHS size: {terms: 4, types: 320, coercions: 831, joins: 0/0}
$dRecElem24
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem24
  = $fRecElemaARectt'::S
      ($d~104 `cast` <Co:831>) $dNatToInt3 $dRecElem23

-- RHS size: {terms: 4, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem25
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem25
  = $fRecElemaARectt'::S
      ($d~105 `cast` <Co:1009>) $dNatToInt4 $dRecElem24

-- RHS size: {terms: 4, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem26
  :: RecElem
       ARec
       ("a7" ::: Int)
       ("a7" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem26
  = $fRecElemaARectt'::S
      ($d~106 `cast` <Co:1198>) $dNatToInt5 $dRecElem25

-- RHS size: {terms: 4, types: 301, coercions: 207, joins: 0/0}
$dRecElem27
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem27
  = $fRecElemaARectt'::S
      ($d~91 `cast` <Co:207>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 229, coercions: 330, joins: 0/0}
$dRecElem28
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem28
  = $fRecElemaARectt'::S
      ($d~92 `cast` <Co:330>) $dNatToInt $dRecElem27

-- RHS size: {terms: 4, types: 252, coercions: 464, joins: 0/0}
$dRecElem29
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem29
  = $fRecElemaARectt'::S
      ($d~93 `cast` <Co:464>) $dNatToInt1 $dRecElem28

-- RHS size: {terms: 4, types: 275, coercions: 609, joins: 0/0}
$dRecElem30
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem30
  = $fRecElemaARectt'::S
      ($d~94 `cast` <Co:609>) $dNatToInt2 $dRecElem29

-- RHS size: {terms: 4, types: 298, coercions: 765, joins: 0/0}
$dRecElem31
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem31
  = $fRecElemaARectt'::S
      ($d~95 `cast` <Co:765>) $dNatToInt3 $dRecElem30

-- RHS size: {terms: 4, types: 321, coercions: 932, joins: 0/0}
$dRecElem32
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem32
  = $fRecElemaARectt'::S
      ($d~96 `cast` <Co:932>) $dNatToInt4 $dRecElem31

-- RHS size: {terms: 4, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem33
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem33
  = $fRecElemaARectt'::S
      ($d~97 `cast` <Co:1110>) $dNatToInt5 $dRecElem32

-- RHS size: {terms: 4, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem34
  :: RecElem
       ARec
       ("a8" ::: Int)
       ("a8" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem34
  = $fRecElemaARectt'::S
      ($d~98 `cast` <Co:1299>) $dNatToInt6 $dRecElem33

-- RHS size: {terms: 4, types: 268, coercions: 185, joins: 0/0}
$dRecElem35
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem35
  = $fRecElemaARectt'::S
      ($d~81 `cast` <Co:185>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 207, coercions: 297, joins: 0/0}
$dRecElem36
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem36
  = $fRecElemaARectt'::S
      ($d~82 `cast` <Co:297>) $dNatToInt $dRecElem35

-- RHS size: {terms: 4, types: 230, coercions: 420, joins: 0/0}
$dRecElem37
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem37
  = $fRecElemaARectt'::S
      ($d~83 `cast` <Co:420>) $dNatToInt1 $dRecElem36

-- RHS size: {terms: 4, types: 253, coercions: 554, joins: 0/0}
$dRecElem38
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem38
  = $fRecElemaARectt'::S
      ($d~84 `cast` <Co:554>) $dNatToInt2 $dRecElem37

-- RHS size: {terms: 4, types: 276, coercions: 699, joins: 0/0}
$dRecElem39
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem39
  = $fRecElemaARectt'::S
      ($d~85 `cast` <Co:699>) $dNatToInt3 $dRecElem38

-- RHS size: {terms: 4, types: 299, coercions: 855, joins: 0/0}
$dRecElem40
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem40
  = $fRecElemaARectt'::S
      ($d~86 `cast` <Co:855>) $dNatToInt4 $dRecElem39

-- RHS size: {terms: 4, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem41
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem41
  = $fRecElemaARectt'::S
      ($d~87 `cast` <Co:1022>) $dNatToInt5 $dRecElem40

-- RHS size: {terms: 4, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem42
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem42
  = $fRecElemaARectt'::S
      ($d~88 `cast` <Co:1200>) $dNatToInt6 $dRecElem41

-- RHS size: {terms: 4, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem43
  :: RecElem
       ARec
       ("a9" ::: Int)
       ("a9" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem43
  = $fRecElemaARectt'::S
      ($d~89 `cast` <Co:1389>) $dNatToInt7 $dRecElem42

-- RHS size: {terms: 4, types: 235, coercions: 163, joins: 0/0}
$dRecElem44
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem44
  = $fRecElemaARectt'::S
      ($d~70 `cast` <Co:163>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 185, coercions: 264, joins: 0/0}
$dRecElem45
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem45
  = $fRecElemaARectt'::S
      ($d~71 `cast` <Co:264>) $dNatToInt $dRecElem44

-- RHS size: {terms: 4, types: 208, coercions: 376, joins: 0/0}
$dRecElem46
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem46
  = $fRecElemaARectt'::S
      ($d~72 `cast` <Co:376>) $dNatToInt1 $dRecElem45

-- RHS size: {terms: 4, types: 231, coercions: 499, joins: 0/0}
$dRecElem47
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem47
  = $fRecElemaARectt'::S
      ($d~73 `cast` <Co:499>) $dNatToInt2 $dRecElem46

-- RHS size: {terms: 4, types: 254, coercions: 633, joins: 0/0}
$dRecElem48
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem48
  = $fRecElemaARectt'::S
      ($d~74 `cast` <Co:633>) $dNatToInt3 $dRecElem47

-- RHS size: {terms: 4, types: 277, coercions: 778, joins: 0/0}
$dRecElem49
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem49
  = $fRecElemaARectt'::S
      ($d~75 `cast` <Co:778>) $dNatToInt4 $dRecElem48

-- RHS size: {terms: 4, types: 300, coercions: 934, joins: 0/0}
$dRecElem50
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem50
  = $fRecElemaARectt'::S
      ($d~76 `cast` <Co:934>) $dNatToInt5 $dRecElem49

-- RHS size: {terms: 4, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem51
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem51
  = $fRecElemaARectt'::S
      ($d~77 `cast` <Co:1101>) $dNatToInt6 $dRecElem50

-- RHS size: {terms: 4, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem52
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem52
  = $fRecElemaARectt'::S
      ($d~78 `cast` <Co:1279>) $dNatToInt7 $dRecElem51

-- RHS size: {terms: 4, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem53
  :: RecElem
       ARec
       ("a10" ::: Int)
       ("a10" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem53
  = $fRecElemaARectt'::S
      ($d~79 `cast` <Co:1468>) $dNatToInt8 $dRecElem52

-- RHS size: {terms: 4, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaARectt'::S
      ($d~58 `cast` <Co:141>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaARectt'::S
      ($d~59 `cast` <Co:231>) $dNatToInt $dRecElem54

-- RHS size: {terms: 4, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaARectt'::S
      ($d~60 `cast` <Co:332>) $dNatToInt1 $dRecElem55

-- RHS size: {terms: 4, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaARectt'::S
      ($d~61 `cast` <Co:444>) $dNatToInt2 $dRecElem56

-- RHS size: {terms: 4, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaARectt'::S
      ($d~62 `cast` <Co:567>) $dNatToInt3 $dRecElem57

-- RHS size: {terms: 4, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaARectt'::S
      ($d~63 `cast` <Co:701>) $dNatToInt4 $dRecElem58

-- RHS size: {terms: 4, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaARectt'::S
      ($d~64 `cast` <Co:846>) $dNatToInt5 $dRecElem59

-- RHS size: {terms: 4, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaARectt'::S
      ($d~65 `cast` <Co:1002>) $dNatToInt6 $dRecElem60

-- RHS size: {terms: 4, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaARectt'::S
      ($d~66 `cast` <Co:1169>) $dNatToInt7 $dRecElem61

-- RHS size: {terms: 4, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaARectt'::S
      ($d~67 `cast` <Co:1347>) $dNatToInt8 $dRecElem62

-- RHS size: {terms: 4, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       ARec
       ("a11" ::: Int)
       ("a11" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaARectt'::S
      ($d~68 `cast` <Co:1536>) $dNatToInt9 $dRecElem63

-- RHS size: {terms: 4, types: 169, coercions: 119, joins: 0/0}
$dRecElem65
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaARectt'::S
      ($d~45 `cast` <Co:119>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 141, coercions: 198, joins: 0/0}
$dRecElem66
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaARectt'::S
      ($d~46 `cast` <Co:198>) $dNatToInt $dRecElem65

-- RHS size: {terms: 4, types: 164, coercions: 288, joins: 0/0}
$dRecElem67
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaARectt'::S
      ($d~47 `cast` <Co:288>) $dNatToInt1 $dRecElem66

-- RHS size: {terms: 4, types: 187, coercions: 389, joins: 0/0}
$dRecElem68
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaARectt'::S
      ($d~48 `cast` <Co:389>) $dNatToInt2 $dRecElem67

-- RHS size: {terms: 4, types: 210, coercions: 501, joins: 0/0}
$dRecElem69
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaARectt'::S
      ($d~49 `cast` <Co:501>) $dNatToInt3 $dRecElem68

-- RHS size: {terms: 4, types: 233, coercions: 624, joins: 0/0}
$dRecElem70
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaARectt'::S
      ($d~50 `cast` <Co:624>) $dNatToInt4 $dRecElem69

-- RHS size: {terms: 4, types: 256, coercions: 758, joins: 0/0}
$dRecElem71
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaARectt'::S
      ($d~51 `cast` <Co:758>) $dNatToInt5 $dRecElem70

-- RHS size: {terms: 4, types: 279, coercions: 903, joins: 0/0}
$dRecElem72
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaARectt'::S
      ($d~52 `cast` <Co:903>) $dNatToInt6 $dRecElem71

-- RHS size: {terms: 4, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem73
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaARectt'::S
      ($d~53 `cast` <Co:1059>) $dNatToInt7 $dRecElem72

-- RHS size: {terms: 4, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem74
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaARectt'::S
      ($d~54 `cast` <Co:1226>) $dNatToInt8 $dRecElem73

-- RHS size: {terms: 4, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem75
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem75
  = $fRecElemaARectt'::S
      ($d~55 `cast` <Co:1404>) $dNatToInt9 $dRecElem74

-- RHS size: {terms: 4, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem76
  :: RecElem
       ARec
       ("a12" ::: Int)
       ("a12" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem76
  = $fRecElemaARectt'::S
      ($d~56 `cast` <Co:1593>) $dNatToInt10 $dRecElem75

-- RHS size: {terms: 4, types: 136, coercions: 97, joins: 0/0}
$dRecElem77
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem77
  = $fRecElemaARectt'::S
      ($d~31 `cast` <Co:97>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 119, coercions: 165, joins: 0/0}
$dRecElem78
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem78
  = $fRecElemaARectt'::S
      ($d~32 `cast` <Co:165>) $dNatToInt $dRecElem77

-- RHS size: {terms: 4, types: 142, coercions: 244, joins: 0/0}
$dRecElem79
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem79
  = $fRecElemaARectt'::S
      ($d~33 `cast` <Co:244>) $dNatToInt1 $dRecElem78

-- RHS size: {terms: 4, types: 165, coercions: 334, joins: 0/0}
$dRecElem80
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem80
  = $fRecElemaARectt'::S
      ($d~34 `cast` <Co:334>) $dNatToInt2 $dRecElem79

-- RHS size: {terms: 4, types: 188, coercions: 435, joins: 0/0}
$dRecElem81
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem81
  = $fRecElemaARectt'::S
      ($d~35 `cast` <Co:435>) $dNatToInt3 $dRecElem80

-- RHS size: {terms: 4, types: 211, coercions: 547, joins: 0/0}
$dRecElem82
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem82
  = $fRecElemaARectt'::S
      ($d~36 `cast` <Co:547>) $dNatToInt4 $dRecElem81

-- RHS size: {terms: 4, types: 234, coercions: 670, joins: 0/0}
$dRecElem83
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem83
  = $fRecElemaARectt'::S
      ($d~37 `cast` <Co:670>) $dNatToInt5 $dRecElem82

-- RHS size: {terms: 4, types: 257, coercions: 804, joins: 0/0}
$dRecElem84
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem84
  = $fRecElemaARectt'::S
      ($d~38 `cast` <Co:804>) $dNatToInt6 $dRecElem83

-- RHS size: {terms: 4, types: 280, coercions: 949, joins: 0/0}
$dRecElem85
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem85
  = $fRecElemaARectt'::S
      ($d~39 `cast` <Co:949>) $dNatToInt7 $dRecElem84

-- RHS size: {terms: 4, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem86
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem86
  = $fRecElemaARectt'::S
      ($d~40 `cast` <Co:1105>) $dNatToInt8 $dRecElem85

-- RHS size: {terms: 4, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem87
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem87
  = $fRecElemaARectt'::S
      ($d~41 `cast` <Co:1272>) $dNatToInt9 $dRecElem86

-- RHS size: {terms: 4, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem88
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem88
  = $fRecElemaARectt'::S
      ($d~42 `cast` <Co:1450>) $dNatToInt10 $dRecElem87

-- RHS size: {terms: 4, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem89
  :: RecElem
       ARec
       ("a13" ::: Int)
       ("a13" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem89
  = $fRecElemaARectt'::S
      ($d~43 `cast` <Co:1639>) $dNatToInt11 $dRecElem88

-- RHS size: {terms: 4, types: 103, coercions: 75, joins: 0/0}
$dRecElem90
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem90
  = $fRecElemaARectt'::S
      ($d~16 `cast` <Co:75>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 97, coercions: 132, joins: 0/0}
$dRecElem91
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem91
  = $fRecElemaARectt'::S
      ($d~17 `cast` <Co:132>) $dNatToInt $dRecElem90

-- RHS size: {terms: 4, types: 120, coercions: 200, joins: 0/0}
$dRecElem92
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem92
  = $fRecElemaARectt'::S
      ($d~18 `cast` <Co:200>) $dNatToInt1 $dRecElem91

-- RHS size: {terms: 4, types: 143, coercions: 279, joins: 0/0}
$dRecElem93
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem93
  = $fRecElemaARectt'::S
      ($d~19 `cast` <Co:279>) $dNatToInt2 $dRecElem92

-- RHS size: {terms: 4, types: 166, coercions: 369, joins: 0/0}
$dRecElem94
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem94
  = $fRecElemaARectt'::S
      ($d~20 `cast` <Co:369>) $dNatToInt3 $dRecElem93

-- RHS size: {terms: 4, types: 189, coercions: 470, joins: 0/0}
$dRecElem95
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem95
  = $fRecElemaARectt'::S
      ($d~21 `cast` <Co:470>) $dNatToInt4 $dRecElem94

-- RHS size: {terms: 4, types: 212, coercions: 582, joins: 0/0}
$dRecElem96
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem96
  = $fRecElemaARectt'::S
      ($d~22 `cast` <Co:582>) $dNatToInt5 $dRecElem95

-- RHS size: {terms: 4, types: 235, coercions: 705, joins: 0/0}
$dRecElem97
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem97
  = $fRecElemaARectt'::S
      ($d~23 `cast` <Co:705>) $dNatToInt6 $dRecElem96

-- RHS size: {terms: 4, types: 258, coercions: 839, joins: 0/0}
$dRecElem98
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem98
  = $fRecElemaARectt'::S
      ($d~24 `cast` <Co:839>) $dNatToInt7 $dRecElem97

-- RHS size: {terms: 4, types: 281, coercions: 984, joins: 0/0}
$dRecElem99
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem99
  = $fRecElemaARectt'::S
      ($d~25 `cast` <Co:984>) $dNatToInt8 $dRecElem98

-- RHS size: {terms: 4, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem100
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem100
  = $fRecElemaARectt'::S
      ($d~26 `cast` <Co:1140>) $dNatToInt9 $dRecElem99

-- RHS size: {terms: 4, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem101
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem101
  = $fRecElemaARectt'::S
      ($d~27 `cast` <Co:1307>) $dNatToInt10 $dRecElem100

-- RHS size: {terms: 4, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem102
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem102
  = $fRecElemaARectt'::S
      ($d~28 `cast` <Co:1485>) $dNatToInt11 $dRecElem101

-- RHS size: {terms: 4, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem103
  :: RecElem
       ARec
       ("a14" ::: Int)
       ("a14" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem103
  = $fRecElemaARectt'::S
      ($d~29 `cast` <Co:1674>) $dNatToInt12 $dRecElem102

-- RHS size: {terms: 4, types: 70, coercions: 53, joins: 0/0}
$dRecElem104
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem104
  = $fRecElemaARectt'::S
      ($d~ `cast` <Co:53>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 75, coercions: 99, joins: 0/0}
$dRecElem105
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem105
  = $fRecElemaARectt'::S
      ($d~1 `cast` <Co:99>) $dNatToInt $dRecElem104

-- RHS size: {terms: 4, types: 98, coercions: 156, joins: 0/0}
$dRecElem106
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem106
  = $fRecElemaARectt'::S
      ($d~2 `cast` <Co:156>) $dNatToInt1 $dRecElem105

-- RHS size: {terms: 4, types: 121, coercions: 224, joins: 0/0}
$dRecElem107
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem107
  = $fRecElemaARectt'::S
      ($d~3 `cast` <Co:224>) $dNatToInt2 $dRecElem106

-- RHS size: {terms: 4, types: 144, coercions: 303, joins: 0/0}
$dRecElem108
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem108
  = $fRecElemaARectt'::S
      ($d~4 `cast` <Co:303>) $dNatToInt3 $dRecElem107

-- RHS size: {terms: 4, types: 167, coercions: 393, joins: 0/0}
$dRecElem109
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem109
  = $fRecElemaARectt'::S
      ($d~5 `cast` <Co:393>) $dNatToInt4 $dRecElem108

-- RHS size: {terms: 4, types: 190, coercions: 494, joins: 0/0}
$dRecElem110
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem110
  = $fRecElemaARectt'::S
      ($d~6 `cast` <Co:494>) $dNatToInt5 $dRecElem109

-- RHS size: {terms: 4, types: 213, coercions: 606, joins: 0/0}
$dRecElem111
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem111
  = $fRecElemaARectt'::S
      ($d~7 `cast` <Co:606>) $dNatToInt6 $dRecElem110

-- RHS size: {terms: 4, types: 236, coercions: 729, joins: 0/0}
$dRecElem112
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem112
  = $fRecElemaARectt'::S
      ($d~8 `cast` <Co:729>) $dNatToInt7 $dRecElem111

-- RHS size: {terms: 4, types: 259, coercions: 863, joins: 0/0}
$dRecElem113
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem113
  = $fRecElemaARectt'::S
      ($d~9 `cast` <Co:863>) $dNatToInt8 $dRecElem112

-- RHS size: {terms: 4, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem114
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem114
  = $fRecElemaARectt'::S
      ($d~10 `cast` <Co:1008>) $dNatToInt9 $dRecElem113

-- RHS size: {terms: 4, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem115
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem115
  = $fRecElemaARectt'::S
      ($d~11 `cast` <Co:1164>) $dNatToInt10 $dRecElem114

-- RHS size: {terms: 4, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem116
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem116
  = $fRecElemaARectt'::S
      ($d~12 `cast` <Co:1331>) $dNatToInt11 $dRecElem115

-- RHS size: {terms: 4, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem117
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem117
  = $fRecElemaARectt'::S
      ($d~13 `cast` <Co:1509>) $dNatToInt12 $dRecElem116

-- RHS size: {terms: 4, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem118
  :: RecElem
       ARec
       ("a15" ::: Int)
       ("a15" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem118
  = $fRecElemaARectt'::S
      ($d~14 `cast` <Co:1698>) $dNatToInt13 $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~133 :: 'S 'Z ~ 'S 'Z
$d~133 = Eq# @~ <Co:2>

-- RHS size: {terms: 4, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem ARec ("a1" ::: Int) ("a1" ::: Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaARectt'::S
      ($d~133 `cast` <Co:361>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~134 :: "a1" ~ "a1"
$d~134 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel14 :: IsLabel "a1" (Label "a1")
$dIsLabel14 = $fIsLabelsLabel $d~134

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~135 :: "a0" ~ "a0"
$d~135 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel15 :: IsLabel "a0" (Label "a0")
$dIsLabel15 = $fIsLabelsLabel $d~135

-- RHS size: {terms: 277,
              types: 3,562,
              coercions: 86,162,
              joins: 0/52}
sumARec :: ARec ElField Fields -> Int
sumARec
  = \ (str :: ARec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (l :: Symbol) (us :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem
                record
                (l ::: FieldType l us)
                (l ::: FieldType l us)
                us
                us
                (RIndex (l ::: FieldType l us) us)) =>
             Label l -> record ElField us -> FieldType l us
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (l :: Symbol))
              (@ (us :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem
                      record
                      (l ::: FieldType l us)
                      (l ::: FieldType l us)
                      us
                      us
                      (RIndex (l ::: FieldType l us) us))
              (eta :: Label l)
              (eta1 :: record ElField us) ->
              let {
                $d~136 :: FieldType l us ~ FieldType l us
                $d~136 = Eq# @~ <Co:5> } in
              let {
                $d~137 :: FieldType l us ~ FieldType l us
                $d~137 = Eq# @~ <Co:5> } in
              let {
                $d(%,,%)
                  :: (RecElem
                        record
                        (l ::: FieldType l us)
                        (l ::: FieldType l us)
                        us
                        us
                        (RIndex (l ::: FieldType l us) us),
                      FieldType l us ~ FieldType l us, FieldType l us ~ FieldType l us)
                $d(%,,%) = ($dRecElem120, $d~137, $d~136) } in
              break<0>(eta1,eta) rvalf $d(%,,%) irred eta eta1 } in
      break<15>(str,get)
      + $fNumInt
        (break<14>(str,get)
         + $fNumInt
           (break<13>(str,get)
            + $fNumInt
              (break<12>(str,get)
               + $fNumInt
                 (break<11>(str,get)
                  + $fNumInt
                    (break<10>(str,get)
                     + $fNumInt
                       (break<9>(str,get)
                        + $fNumInt
                          (break<8>(str,get)
                           + $fNumInt
                             (break<7>(str,get)
                              + $fNumInt
                                (break<6>(str,get)
                                 + $fNumInt
                                   (break<5>(str,get)
                                    + $fNumInt
                                      (break<4>(str,get)
                                       + $fNumInt
                                         (break<3>(str,get)
                                          + $fNumInt
                                            (break<2>(str,get)
                                             + $fNumInt
                                               (break<1>(str,get)
                                                + $fNumInt
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a0" ::: FieldType "a0" Fields)
                                                                Fields),
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields,
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields)
                                                     $d(%,,%)
                                                       = ($fRecElemaARectt'::Z `cast` <Co:744>,
                                                          $d~137, $d~136) } in
                                                   (break<0>(str,$dIsLabel15)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel15 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:177>)
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a1" ::: FieldType "a1" Fields)
                                                                Fields),
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields,
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields)
                                                     $d(%,,%)
                                                       = ($dRecElem119 `cast` <Co:1425>, $d~137,
                                                          $d~136) } in
                                                   (break<0>(str,$dIsLabel14)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel14 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:345>))
                                               (let {
                                                  $d~136
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~136 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d~137
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~137 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d(%,,%)
                                                    :: (RecElem
                                                          ARec
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          Fields
                                                          Fields
                                                          (RIndex
                                                             ("a2" ::: FieldType "a2" Fields)
                                                             Fields),
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields,
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields)
                                                  $d(%,,%)
                                                    = ($dRecElem1 `cast` <Co:2062>, $d~137,
                                                       $d~136) } in
                                                (break<0>(str,$dIsLabel13)
                                                 rvalf
                                                   $d(%,,%)
                                                   (C:(%%) `cast` <Co:7>)
                                                   ($dIsLabel13 `cast` <Co:4>)
                                                   str)
                                                `cast` <Co:502>))
                                            (let {
                                               $d~136
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~136 = Eq# @~ <Co:5> } in
                                             let {
                                               $d~137
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~137 = Eq# @~ <Co:5> } in
                                             let {
                                               $d(%,,%)
                                                 :: (RecElem
                                                       ARec
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       Fields
                                                       Fields
                                                       (RIndex
                                                          ("a3" ::: FieldType "a3" Fields) Fields),
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields,
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields)
                                               $d(%,,%)
                                                 = ($dRecElem4 `cast` <Co:2655>, $d~137,
                                                    $d~136) } in
                                             (break<0>(str,$dIsLabel12)
                                              rvalf
                                                $d(%,,%)
                                                (C:(%%) `cast` <Co:7>)
                                                ($dIsLabel12 `cast` <Co:4>)
                                                str)
                                             `cast` <Co:648>))
                                         (let {
                                            $d~136 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~136 = Eq# @~ <Co:5> } in
                                          let {
                                            $d~137 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~137 = Eq# @~ <Co:5> } in
                                          let {
                                            $d(%,,%)
                                              :: (RecElem
                                                    ARec
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    Fields
                                                    Fields
                                                    (RIndex
                                                       ("a4" ::: FieldType "a4" Fields) Fields),
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields,
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields)
                                            $d(%,,%)
                                              = ($dRecElem8 `cast` <Co:3204>, $d~137, $d~136) } in
                                          (break<0>(str,$dIsLabel11)
                                           rvalf
                                             $d(%,,%)
                                             (C:(%%) `cast` <Co:7>)
                                             ($dIsLabel11 `cast` <Co:4>)
                                             str)
                                          `cast` <Co:783>))
                                      (let {
                                         $d~136 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~136 = Eq# @~ <Co:5> } in
                                       let {
                                         $d~137 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~137 = Eq# @~ <Co:5> } in
                                       let {
                                         $d(%,,%)
                                           :: (RecElem
                                                 ARec
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 Fields
                                                 Fields
                                                 (RIndex ("a5" ::: FieldType "a5" Fields) Fields),
                                               FieldType "a5" Fields ~ FieldType "a5" Fields,
                                               FieldType "a5" Fields ~ FieldType "a5" Fields)
                                         $d(%,,%)
                                           = ($dRecElem13 `cast` <Co:3709>, $d~137, $d~136) } in
                                       (break<0>(str,$dIsLabel10)
                                        rvalf
                                          $d(%,,%)
                                          (C:(%%) `cast` <Co:7>)
                                          ($dIsLabel10 `cast` <Co:4>)
                                          str)
                                       `cast` <Co:907>))
                                   (let {
                                      $d~136 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~136 = Eq# @~ <Co:5> } in
                                    let {
                                      $d~137 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~137 = Eq# @~ <Co:5> } in
                                    let {
                                      $d(%,,%)
                                        :: (RecElem
                                              ARec
                                              ("a6" ::: FieldType "a6" Fields)
                                              ("a6" ::: FieldType "a6" Fields)
                                              Fields
                                              Fields
                                              (RIndex ("a6" ::: FieldType "a6" Fields) Fields),
                                            FieldType "a6" Fields ~ FieldType "a6" Fields,
                                            FieldType "a6" Fields ~ FieldType "a6" Fields)
                                      $d(%,,%) = ($dRecElem19 `cast` <Co:4170>, $d~137, $d~136) } in
                                    (break<0>(str,$dIsLabel9)
                                     rvalf
                                       $d(%,,%)
                                       (C:(%%) `cast` <Co:7>)
                                       ($dIsLabel9 `cast` <Co:4>)
                                       str)
                                    `cast` <Co:1020>))
                                (let {
                                   $d~136 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~136 = Eq# @~ <Co:5> } in
                                 let {
                                   $d~137 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~137 = Eq# @~ <Co:5> } in
                                 let {
                                   $d(%,,%)
                                     :: (RecElem
                                           ARec
                                           ("a7" ::: FieldType "a7" Fields)
                                           ("a7" ::: FieldType "a7" Fields)
                                           Fields
                                           Fields
                                           (RIndex ("a7" ::: FieldType "a7" Fields) Fields),
                                         FieldType "a7" Fields ~ FieldType "a7" Fields,
                                         FieldType "a7" Fields ~ FieldType "a7" Fields)
                                   $d(%,,%) = ($dRecElem26 `cast` <Co:4587>, $d~137, $d~136) } in
                                 (break<0>(str,$dIsLabel8)
                                  rvalf
                                    $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel8 `cast` <Co:4>) str)
                                 `cast` <Co:1122>))
                             (let {
                                $d~136 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~136 = Eq# @~ <Co:5> } in
                              let {
                                $d~137 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~137 = Eq# @~ <Co:5> } in
                              let {
                                $d(%,,%)
                                  :: (RecElem
                                        ARec
                                        ("a8" ::: FieldType "a8" Fields)
                                        ("a8" ::: FieldType "a8" Fields)
                                        Fields
                                        Fields
                                        (RIndex ("a8" ::: FieldType "a8" Fields) Fields),
                                      FieldType "a8" Fields ~ FieldType "a8" Fields,
                                      FieldType "a8" Fields ~ FieldType "a8" Fields)
                                $d(%,,%) = ($dRecElem34 `cast` <Co:4960>, $d~137, $d~136) } in
                              (break<0>(str,$dIsLabel7)
                               rvalf
                                 $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel7 `cast` <Co:4>) str)
                              `cast` <Co:1213>))
                          (let {
                             $d~136 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~136 = Eq# @~ <Co:5> } in
                           let {
                             $d~137 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~137 = Eq# @~ <Co:5> } in
                           let {
                             $d(%,,%)
                               :: (RecElem
                                     ARec
                                     ("a9" ::: FieldType "a9" Fields)
                                     ("a9" ::: FieldType "a9" Fields)
                                     Fields
                                     Fields
                                     (RIndex ("a9" ::: FieldType "a9" Fields) Fields),
                                   FieldType "a9" Fields ~ FieldType "a9" Fields,
                                   FieldType "a9" Fields ~ FieldType "a9" Fields)
                             $d(%,,%) = ($dRecElem43 `cast` <Co:5289>, $d~137, $d~136) } in
                           (break<0>(str,$dIsLabel6)
                            rvalf
                              $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel6 `cast` <Co:4>) str)
                           `cast` <Co:1293>))
                       (let {
                          $d~136 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~136 = Eq# @~ <Co:5> } in
                        let {
                          $d~137 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~137 = Eq# @~ <Co:5> } in
                        let {
                          $d(%,,%)
                            :: (RecElem
                                  ARec
                                  ("a10" ::: FieldType "a10" Fields)
                                  ("a10" ::: FieldType "a10" Fields)
                                  Fields
                                  Fields
                                  (RIndex ("a10" ::: FieldType "a10" Fields) Fields),
                                FieldType "a10" Fields ~ FieldType "a10" Fields,
                                FieldType "a10" Fields ~ FieldType "a10" Fields)
                          $d(%,,%) = ($dRecElem53 `cast` <Co:5574>, $d~137, $d~136) } in
                        (break<0>(str,$dIsLabel5)
                         rvalf
                           $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel5 `cast` <Co:4>) str)
                        `cast` <Co:1362>))
                    (let {
                       $d~136 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~136 = Eq# @~ <Co:5> } in
                     let {
                       $d~137 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~137 = Eq# @~ <Co:5> } in
                     let {
                       $d(%,,%)
                         :: (RecElem
                               ARec
                               ("a11" ::: FieldType "a11" Fields)
                               ("a11" ::: FieldType "a11" Fields)
                               Fields
                               Fields
                               (RIndex ("a11" ::: FieldType "a11" Fields) Fields),
                             FieldType "a11" Fields ~ FieldType "a11" Fields,
                             FieldType "a11" Fields ~ FieldType "a11" Fields)
                       $d(%,,%) = ($dRecElem64 `cast` <Co:5815>, $d~137, $d~136) } in
                     (break<0>(str,$dIsLabel4)
                      rvalf
                        $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel4 `cast` <Co:4>) str)
                     `cast` <Co:1420>))
                 (let {
                    $d~136 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~136 = Eq# @~ <Co:5> } in
                  let {
                    $d~137 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~137 = Eq# @~ <Co:5> } in
                  let {
                    $d(%,,%)
                      :: (RecElem
                            ARec
                            ("a12" ::: FieldType "a12" Fields)
                            ("a12" ::: FieldType "a12" Fields)
                            Fields
                            Fields
                            (RIndex ("a12" ::: FieldType "a12" Fields) Fields),
                          FieldType "a12" Fields ~ FieldType "a12" Fields,
                          FieldType "a12" Fields ~ FieldType "a12" Fields)
                    $d(%,,%) = ($dRecElem76 `cast` <Co:6012>, $d~137, $d~136) } in
                  (break<0>(str,$dIsLabel3)
                   rvalf
                     $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel3 `cast` <Co:4>) str)
                  `cast` <Co:1467>))
              (let {
                 $d~136 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~136 = Eq# @~ <Co:5> } in
               let {
                 $d~137 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~137 = Eq# @~ <Co:5> } in
               let {
                 $d(%,,%)
                   :: (RecElem
                         ARec
                         ("a13" ::: FieldType "a13" Fields)
                         ("a13" ::: FieldType "a13" Fields)
                         Fields
                         Fields
                         (RIndex ("a13" ::: FieldType "a13" Fields) Fields),
                       FieldType "a13" Fields ~ FieldType "a13" Fields,
                       FieldType "a13" Fields ~ FieldType "a13" Fields)
                 $d(%,,%) = ($dRecElem89 `cast` <Co:6165>, $d~137, $d~136) } in
               (break<0>(str,$dIsLabel2)
                rvalf
                  $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel2 `cast` <Co:4>) str)
               `cast` <Co:1503>))
           (let {
              $d~136 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~136 = Eq# @~ <Co:5> } in
            let {
              $d~137 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~137 = Eq# @~ <Co:5> } in
            let {
              $d(%,,%)
                :: (RecElem
                      ARec
                      ("a14" ::: FieldType "a14" Fields)
                      ("a14" ::: FieldType "a14" Fields)
                      Fields
                      Fields
                      (RIndex ("a14" ::: FieldType "a14" Fields) Fields),
                    FieldType "a14" Fields ~ FieldType "a14" Fields,
                    FieldType "a14" Fields ~ FieldType "a14" Fields)
              $d(%,,%) = ($dRecElem103 `cast` <Co:6274>, $d~137, $d~136) } in
            (break<0>(str,$dIsLabel1)
             rvalf
               $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel1 `cast` <Co:4>) str)
            `cast` <Co:1528>))
        (let {
           $d~136 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~136 = Eq# @~ <Co:5> } in
         let {
           $d~137 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~137 = Eq# @~ <Co:5> } in
         let {
           $d(%,,%)
             :: (RecElem
                   ARec
                   ("a15" ::: FieldType "a15" Fields)
                   ("a15" ::: FieldType "a15" Fields)
                   Fields
                   Fields
                   (RIndex ("a15" ::: FieldType "a15" Fields) Fields),
                 FieldType "a15" Fields ~ FieldType "a15" Fields,
                 FieldType "a15" Fields ~ FieldType "a15" Fields)
           $d(%,,%) = ($dRecElem118 `cast` <Co:6339>, $d~137, $d~136) } in
         (break<0>(str,$dIsLabel)
          rvalf
            $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel `cast` <Co:4>) str)
         `cast` <Co:1542>)



==================== Tidy Core ====================
2021-05-14 17:30:36.309490199 UTC

Result size of Tidy Core
  = {terms: 1,541, types: 77,526, coercions: 176,078, joins: 0/52}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.ARec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~15 :: "a15" ~ "a15"
$d~15 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel :: IsLabel "a15" (Label "a15")
$dIsLabel = $fIsLabelsLabel $d~15

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~16 :: 'S 'Z ~ 'S 'Z
$d~16 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~17 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~17 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~18 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~18 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~19 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~19 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~20 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~20 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~21 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~22 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~23 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~24 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~25 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~26 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~27
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~27 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~28 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~29
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~29 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~30 :: "a14" ~ "a14"
$d~30 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel1 :: IsLabel "a14" (Label "a14")
$dIsLabel1 = $fIsLabelsLabel $d~30

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~31 :: 'S 'Z ~ 'S 'Z
$d~31 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~32 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~32 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~33 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~33 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~34 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~34 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~35 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~35 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~36 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~37 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~38 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~39 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~40 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~41
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~41 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~42
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~42 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~43
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~43 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~44 :: "a13" ~ "a13"
$d~44 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel2 :: IsLabel "a13" (Label "a13")
$dIsLabel2 = $fIsLabelsLabel $d~44

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~45 :: 'S 'Z ~ 'S 'Z
$d~45 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~46 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~46 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~47 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~47 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~48 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~48 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~49 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~49 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~50 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~51 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~52 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~53 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~54
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~54 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~55
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~55 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~56
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~56 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~57 :: "a12" ~ "a12"
$d~57 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel3 :: IsLabel "a12" (Label "a12")
$dIsLabel3 = $fIsLabelsLabel $d~57

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~58 :: 'S 'Z ~ 'S 'Z
$d~58 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~59 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~59 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~60 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~60 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~61 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~61 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~62 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~62 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~63 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~64 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~65
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~65 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~66
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~66 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~67
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~67 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~68
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~68 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~69 :: "a11" ~ "a11"
$d~69 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel4 :: IsLabel "a11" (Label "a11")
$dIsLabel4 = $fIsLabelsLabel $d~69

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~70 :: 'S 'Z ~ 'S 'Z
$d~70 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~71 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~71 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~72 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~72 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~73 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~73 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~74 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~74 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~75
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~75 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~76
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~76 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~77
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~77 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~78
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~78 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~79
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~79 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~80 :: "a10" ~ "a10"
$d~80 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel5 :: IsLabel "a10" (Label "a10")
$dIsLabel5 = $fIsLabelsLabel $d~80

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~81 :: 'S 'Z ~ 'S 'Z
$d~81 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~82 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~82 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~83 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~83 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~84 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~84 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~85 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~85 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~86
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~86 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~87
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~87 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~88
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~88 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~89 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~90 :: "a9" ~ "a9"
$d~90 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel6 :: IsLabel "a9" (Label "a9")
$dIsLabel6 = $fIsLabelsLabel $d~90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~91 :: 'S 'Z ~ 'S 'Z
$d~91 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~92 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~92 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~93 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~93 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~94 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~94 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~95 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~95 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~96
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~96 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~97 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~98 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~99 :: "a8" ~ "a8"
$d~99 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel7 :: IsLabel "a8" (Label "a8")
$dIsLabel7 = $fIsLabelsLabel $d~99

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~100 :: 'S 'Z ~ 'S 'Z
$d~100 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~101 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~101 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~102 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~102 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~103 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~103 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~104 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~104 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~105
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~105 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~106
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~106 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~107 :: "a7" ~ "a7"
$d~107 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel8 :: IsLabel "a7" (Label "a7")
$dIsLabel8 = $fIsLabelsLabel $d~107

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~108 :: 'S 'Z ~ 'S 'Z
$d~108 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~109 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~109 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~110 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~110 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~111 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~111 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~112 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~112 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~113
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~113 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~114 :: "a6" ~ "a6"
$d~114 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel9 :: IsLabel "a6" (Label "a6")
$dIsLabel9 = $fIsLabelsLabel $d~114

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~115 :: 'S 'Z ~ 'S 'Z
$d~115 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~116 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~116 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~117 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~117 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~118 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~118 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~119 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~119 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~120 :: "a5" ~ "a5"
$d~120 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel10 :: IsLabel "a5" (Label "a5")
$dIsLabel10 = $fIsLabelsLabel $d~120

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~121 :: 'S 'Z ~ 'S 'Z
$d~121 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~122 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~122 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~123 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~123 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~124 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~124 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~125 :: "a4" ~ "a4"
$d~125 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel11 :: IsLabel "a4" (Label "a4")
$dIsLabel11 = $fIsLabelsLabel $d~125

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~126 :: 'S 'Z ~ 'S 'Z
$d~126 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~127 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~127 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~128 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~128 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~129 :: "a3" ~ "a3"
$d~129 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel12 :: IsLabel "a3" (Label "a3")
$dIsLabel12 = $fIsLabelsLabel $d~129

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~130 :: 'S 'Z ~ 'S 'Z
$d~130 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~131 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~131 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~132 :: "a2" ~ "a2"
$d~132 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel13 :: IsLabel "a2" (Label "a2")
$dIsLabel13 = $fIsLabelsLabel $d~132

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
$dNatToInt :: NatToInt ('S 'Z)
$dNatToInt = $fNatToIntS $fNatToIntZ

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dNatToInt1 :: NatToInt ('S ('S 'Z))
$dNatToInt1 = $fNatToIntS $dNatToInt

-- RHS size: {terms: 2, types: 3, coercions: 0, joins: 0/0}
$dNatToInt2 :: NatToInt ('S ('S ('S 'Z)))
$dNatToInt2 = $fNatToIntS $dNatToInt1

-- RHS size: {terms: 2, types: 4, coercions: 0, joins: 0/0}
$dNatToInt3 :: NatToInt ('S ('S ('S ('S 'Z))))
$dNatToInt3 = $fNatToIntS $dNatToInt2

-- RHS size: {terms: 2, types: 5, coercions: 0, joins: 0/0}
$dNatToInt4 :: NatToInt ('S ('S ('S ('S ('S 'Z)))))
$dNatToInt4 = $fNatToIntS $dNatToInt3

-- RHS size: {terms: 2, types: 6, coercions: 0, joins: 0/0}
$dNatToInt5 :: NatToInt ('S ('S ('S ('S ('S ('S 'Z))))))
$dNatToInt5 = $fNatToIntS $dNatToInt4

-- RHS size: {terms: 2, types: 7, coercions: 0, joins: 0/0}
$dNatToInt6 :: NatToInt ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dNatToInt6 = $fNatToIntS $dNatToInt5

-- RHS size: {terms: 2, types: 8, coercions: 0, joins: 0/0}
$dNatToInt7 :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dNatToInt7 = $fNatToIntS $dNatToInt6

-- RHS size: {terms: 2, types: 9, coercions: 0, joins: 0/0}
$dNatToInt8
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dNatToInt8 = $fNatToIntS $dNatToInt7

-- RHS size: {terms: 2, types: 10, coercions: 0, joins: 0/0}
$dNatToInt9
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dNatToInt9 = $fNatToIntS $dNatToInt8

-- RHS size: {terms: 2, types: 11, coercions: 0, joins: 0/0}
$dNatToInt10
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dNatToInt10 = $fNatToIntS $dNatToInt9

-- RHS size: {terms: 2, types: 12, coercions: 0, joins: 0/0}
$dNatToInt11
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dNatToInt11 = $fNatToIntS $dNatToInt10

-- RHS size: {terms: 2, types: 13, coercions: 0, joins: 0/0}
$dNatToInt12
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dNatToInt12 = $fNatToIntS $dNatToInt11

-- RHS size: {terms: 2, types: 14, coercions: 0, joins: 0/0}
$dNatToInt13
  :: NatToInt
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dNatToInt13 = $fNatToIntS $dNatToInt12

-- RHS size: {terms: 2, types: 15, coercions: 0, joins: 0/0}
$dNatToInt14
  :: NatToInt
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dNatToInt14 = $fNatToIntS $dNatToInt13

-- RHS size: {terms: 2, types: 16, coercions: 0, joins: 0/0}
$dNatToInt15
  :: NatToInt
       ('S
          ('S
             ('S
                ('S
                   ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))))
$dNatToInt15 = $fNatToIntS $dNatToInt14

-- RHS size: {terms: 162,
              types: 6,652,
              coercions: 3,024,
              joins: 0/0}
mkToARec :: Int -> ARec ElField Fields
mkToARec
  = \ (i :: Int) ->
      break<48>(i)
      toARec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<47>(i)
         case break<16>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
         { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
         case break<46>(i)
              case break<17>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
              { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
              case break<45>(i)
                   case break<18>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                   { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                   case break<44>(i)
                        case break<19>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                        { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                        case break<43>(i)
                             case break<20>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                             { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                             case break<42>(i)
                                  case break<21>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                                  { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                                  case break<41>(i)
                                       case break<22>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                       of dt6
                                       { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                       case break<40>(i)
                                            case break<23>(i)
                                                 $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                            of dt7
                                            { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                            case break<39>(i)
                                                 case break<24>(i)
                                                      $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                                 of dt8
                                                 { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                                 case break<38>(i)
                                                      case break<25>(i)
                                                           $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                      of dt9
                                                      { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                      case break<37>(i)
                                                           case break<26>(i)
                                                                $WField
                                                                  ($dKnownSymbol5 `cast` <Co:7>) i
                                                           of dt10
                                                           { Field @ ipv50 @ ipv51 ipv52 ipv53
                                                                   ipv54 ->
                                                           case break<36>(i)
                                                                case break<27>(i)
                                                                     $WField
                                                                       ($dKnownSymbol4
                                                                        `cast` <Co:7>)
                                                                       i
                                                                of dt11
                                                                { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                        ipv59 ->
                                                                case break<35>(i)
                                                                     case break<28>(i)
                                                                          $WField
                                                                            ($dKnownSymbol3
                                                                             `cast` <Co:7>)
                                                                            i
                                                                     of dt12
                                                                     { Field @ ipv60 @ ipv61 ipv62
                                                                             ipv63 ipv64 ->
                                                                     case break<34>(i)
                                                                          case break<29>(i)
                                                                               $WField
                                                                                 ($dKnownSymbol2
                                                                                  `cast` <Co:7>)
                                                                                 i
                                                                          of dt13
                                                                          { Field @ ipv65 @ ipv66
                                                                                  ipv67 ipv68
                                                                                  ipv69 ->
                                                                          case break<33>(i)
                                                                               case break<30>(i)
                                                                                    $WField
                                                                                      ($dKnownSymbol1
                                                                                       `cast` <Co:7>)
                                                                                      i
                                                                               of dt14
                                                                               { Field @ ipv70
                                                                                       @ ipv71 ipv72
                                                                                       ipv73
                                                                                       ipv74 ->
                                                                               case break<32>()
                                                                                    case break<31>()
                                                                                         Field
                                                                                           @~ <Co:6>
                                                                                           ($dKnownSymbol
                                                                                            `cast` <Co:7>)
                                                                                           (I# 99#)
                                                                                    of dt15
                                                                                    { Field @ ipv75
                                                                                            @ ipv76
                                                                                            ipv77
                                                                                            ipv78
                                                                                            ipv79 ->
                                                                                    :&
                                                                                      @~ <Co:14>
                                                                                      dt15
                                                                                      (RNil
                                                                                         @~ <Co:4>)
                                                                                    }
                                                                               of dt15
                                                                               { :& @ ipv75 @ ipv76
                                                                                    ipv77 ipv78
                                                                                    ipv79 ->
                                                                               :&
                                                                                 @~ <Co:24>
                                                                                 dt14
                                                                                 dt15
                                                                               }
                                                                               }
                                                                          of dt14
                                                                          { :& @ ipv70 @ ipv71 ipv72
                                                                               ipv73 ipv74 ->
                                                                          :& @~ <Co:34> dt13 dt14
                                                                          }
                                                                          }
                                                                     of dt13
                                                                     { :& @ ipv65 @ ipv66 ipv67
                                                                          ipv68 ipv69 ->
                                                                     :& @~ <Co:44> dt12 dt13
                                                                     }
                                                                     }
                                                                of dt12
                                                                { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                     ipv64 ->
                                                                :& @~ <Co:54> dt11 dt12
                                                                }
                                                                }
                                                           of dt11
                                                           { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                           :& @~ <Co:64> dt10 dt11
                                                           }
                                                           }
                                                      of dt10
                                                      { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                      :& @~ <Co:74> dt9 dt10
                                                      }
                                                      }
                                                 of dt9
                                                 { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                 :& @~ <Co:84> dt8 dt9
                                                 }
                                                 }
                                            of dt8
                                            { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                            :& @~ <Co:94> dt7 dt8
                                            }
                                            }
                                       of dt7
                                       { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                       :& @~ <Co:104> dt6 dt7
                                       }
                                       }
                                  of dt6
                                  { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                  :& @~ <Co:114> dt5 dt6
                                  }
                                  }
                             of dt5
                             { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                             :& @~ <Co:124> dt4 dt5
                             }
                             }
                        of dt4
                        { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                        :& @~ <Co:134> dt3 dt4
                        }
                        }
                   of dt3
                   { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                   :& @~ <Co:144> dt2 dt3
                   }
                   }
              of dt2
              { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
              :& @~ <Co:154> dt1 dt2
              }
              }
         of dt1
         { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
         :& @~ <Co:164> dt dt1
         }
         })

-- RHS size: {terms: 69,
              types: 1,637,
              coercions: 1,596,
              joins: 0/0}
mkARec :: Int -> ARec ElField Fields
mkARec
  = \ (i :: Int) ->
      break<81>(i)
      arec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<80>(i)
         &:
           (break<49>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i)
           (break<79>(i)
            &:
              (break<50>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i)
              (break<78>(i)
               &:
                 (break<51>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i)
                 (break<77>(i)
                  &:
                    (break<52>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i)
                    (break<76>(i)
                     &:
                       (break<53>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i)
                       (break<75>(i)
                        &:
                          (break<54>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i)
                          (break<74>(i)
                           &:
                             (break<55>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i)
                             (break<73>(i)
                              &:
                                (break<56>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i)
                                (break<72>(i)
                                 &:
                                   (break<57>(i) $WField ($dKnownSymbol7 `cast` <Co:7>) i)
                                   (break<71>(i)
                                    &:
                                      (break<58>(i) $WField ($dKnownSymbol6 `cast` <Co:7>) i)
                                      (break<70>(i)
                                       &:
                                         (break<59>(i) $WField ($dKnownSymbol5 `cast` <Co:7>) i)
                                         (break<69>(i)
                                          &:
                                            (break<60>(i) $WField ($dKnownSymbol4 `cast` <Co:7>) i)
                                            (break<68>(i)
                                             &:
                                               (break<61>(i)
                                                $WField ($dKnownSymbol3 `cast` <Co:7>) i)
                                               (break<67>(i)
                                                &:
                                                  (break<62>(i)
                                                   $WField ($dKnownSymbol2 `cast` <Co:7>) i)
                                                  (break<66>(i)
                                                   &:
                                                     (break<63>(i)
                                                      $WField ($dKnownSymbol1 `cast` <Co:7>) i)
                                                     (break<65>()
                                                      &:
                                                        (break<64>()
                                                         Field
                                                           @~ <Co:6>
                                                           ($dKnownSymbol `cast` <Co:7>)
                                                           (I# 99#))
                                                        arnil))))))))))))))))

-- RHS size: {terms: 4, types: 499, coercions: 339, joins: 0/0}
$dRecElem
  :: RecElem
       ARec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaARectt'::S
      ($d~130 `cast` <Co:339>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 361, coercions: 528, joins: 0/0}
$dRecElem1
  :: RecElem
       ARec ("a2" ::: Int) ("a2" ::: Int) Fields Fields ('S ('S 'Z))
$dRecElem1
  = $fRecElemaARectt'::S
      ($d~131 `cast` <Co:528>) $dNatToInt $dRecElem

-- RHS size: {terms: 4, types: 466, coercions: 317, joins: 0/0}
$dRecElem2
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem2
  = $fRecElemaARectt'::S
      ($d~126 `cast` <Co:317>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 339, coercions: 495, joins: 0/0}
$dRecElem3
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem3
  = $fRecElemaARectt'::S
      ($d~127 `cast` <Co:495>) $dNatToInt $dRecElem2

-- RHS size: {terms: 4, types: 362, coercions: 684, joins: 0/0}
$dRecElem4
  :: RecElem
       ARec ("a3" ::: Int) ("a3" ::: Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem4
  = $fRecElemaARectt'::S
      ($d~128 `cast` <Co:684>) $dNatToInt1 $dRecElem3

-- RHS size: {terms: 4, types: 433, coercions: 295, joins: 0/0}
$dRecElem5
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem5
  = $fRecElemaARectt'::S
      ($d~121 `cast` <Co:295>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 317, coercions: 462, joins: 0/0}
$dRecElem6
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem6
  = $fRecElemaARectt'::S
      ($d~122 `cast` <Co:462>) $dNatToInt $dRecElem5

-- RHS size: {terms: 4, types: 340, coercions: 640, joins: 0/0}
$dRecElem7
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem7
  = $fRecElemaARectt'::S
      ($d~123 `cast` <Co:640>) $dNatToInt1 $dRecElem6

-- RHS size: {terms: 4, types: 363, coercions: 829, joins: 0/0}
$dRecElem8
  :: RecElem
       ARec
       ("a4" ::: Int)
       ("a4" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S 'Z))))
$dRecElem8
  = $fRecElemaARectt'::S
      ($d~124 `cast` <Co:829>) $dNatToInt2 $dRecElem7

-- RHS size: {terms: 4, types: 400, coercions: 273, joins: 0/0}
$dRecElem9
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem9
  = $fRecElemaARectt'::S
      ($d~115 `cast` <Co:273>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 295, coercions: 429, joins: 0/0}
$dRecElem10
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem10
  = $fRecElemaARectt'::S
      ($d~116 `cast` <Co:429>) $dNatToInt $dRecElem9

-- RHS size: {terms: 4, types: 318, coercions: 596, joins: 0/0}
$dRecElem11
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem11
  = $fRecElemaARectt'::S
      ($d~117 `cast` <Co:596>) $dNatToInt1 $dRecElem10

-- RHS size: {terms: 4, types: 341, coercions: 774, joins: 0/0}
$dRecElem12
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem12
  = $fRecElemaARectt'::S
      ($d~118 `cast` <Co:774>) $dNatToInt2 $dRecElem11

-- RHS size: {terms: 4, types: 364, coercions: 963, joins: 0/0}
$dRecElem13
  :: RecElem
       ARec
       ("a5" ::: Int)
       ("a5" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem13
  = $fRecElemaARectt'::S
      ($d~119 `cast` <Co:963>) $dNatToInt3 $dRecElem12

-- RHS size: {terms: 4, types: 367, coercions: 251, joins: 0/0}
$dRecElem14
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem14
  = $fRecElemaARectt'::S
      ($d~108 `cast` <Co:251>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 273, coercions: 396, joins: 0/0}
$dRecElem15
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem15
  = $fRecElemaARectt'::S
      ($d~109 `cast` <Co:396>) $dNatToInt $dRecElem14

-- RHS size: {terms: 4, types: 296, coercions: 552, joins: 0/0}
$dRecElem16
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem16
  = $fRecElemaARectt'::S
      ($d~110 `cast` <Co:552>) $dNatToInt1 $dRecElem15

-- RHS size: {terms: 4, types: 319, coercions: 719, joins: 0/0}
$dRecElem17
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem17
  = $fRecElemaARectt'::S
      ($d~111 `cast` <Co:719>) $dNatToInt2 $dRecElem16

-- RHS size: {terms: 4, types: 342, coercions: 897, joins: 0/0}
$dRecElem18
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem18
  = $fRecElemaARectt'::S
      ($d~112 `cast` <Co:897>) $dNatToInt3 $dRecElem17

-- RHS size: {terms: 4, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem19
  :: RecElem
       ARec
       ("a6" ::: Int)
       ("a6" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem19
  = $fRecElemaARectt'::S
      ($d~113 `cast` <Co:1086>) $dNatToInt4 $dRecElem18

-- RHS size: {terms: 4, types: 334, coercions: 229, joins: 0/0}
$dRecElem20
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem20
  = $fRecElemaARectt'::S
      ($d~100 `cast` <Co:229>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 251, coercions: 363, joins: 0/0}
$dRecElem21
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem21
  = $fRecElemaARectt'::S
      ($d~101 `cast` <Co:363>) $dNatToInt $dRecElem20

-- RHS size: {terms: 4, types: 274, coercions: 508, joins: 0/0}
$dRecElem22
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem22
  = $fRecElemaARectt'::S
      ($d~102 `cast` <Co:508>) $dNatToInt1 $dRecElem21

-- RHS size: {terms: 4, types: 297, coercions: 664, joins: 0/0}
$dRecElem23
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem23
  = $fRecElemaARectt'::S
      ($d~103 `cast` <Co:664>) $dNatToInt2 $dRecElem22

-- RHS size: {terms: 4, types: 320, coercions: 831, joins: 0/0}
$dRecElem24
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem24
  = $fRecElemaARectt'::S
      ($d~104 `cast` <Co:831>) $dNatToInt3 $dRecElem23

-- RHS size: {terms: 4, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem25
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem25
  = $fRecElemaARectt'::S
      ($d~105 `cast` <Co:1009>) $dNatToInt4 $dRecElem24

-- RHS size: {terms: 4, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem26
  :: RecElem
       ARec
       ("a7" ::: Int)
       ("a7" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem26
  = $fRecElemaARectt'::S
      ($d~106 `cast` <Co:1198>) $dNatToInt5 $dRecElem25

-- RHS size: {terms: 4, types: 301, coercions: 207, joins: 0/0}
$dRecElem27
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem27
  = $fRecElemaARectt'::S
      ($d~91 `cast` <Co:207>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 229, coercions: 330, joins: 0/0}
$dRecElem28
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem28
  = $fRecElemaARectt'::S
      ($d~92 `cast` <Co:330>) $dNatToInt $dRecElem27

-- RHS size: {terms: 4, types: 252, coercions: 464, joins: 0/0}
$dRecElem29
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem29
  = $fRecElemaARectt'::S
      ($d~93 `cast` <Co:464>) $dNatToInt1 $dRecElem28

-- RHS size: {terms: 4, types: 275, coercions: 609, joins: 0/0}
$dRecElem30
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem30
  = $fRecElemaARectt'::S
      ($d~94 `cast` <Co:609>) $dNatToInt2 $dRecElem29

-- RHS size: {terms: 4, types: 298, coercions: 765, joins: 0/0}
$dRecElem31
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem31
  = $fRecElemaARectt'::S
      ($d~95 `cast` <Co:765>) $dNatToInt3 $dRecElem30

-- RHS size: {terms: 4, types: 321, coercions: 932, joins: 0/0}
$dRecElem32
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem32
  = $fRecElemaARectt'::S
      ($d~96 `cast` <Co:932>) $dNatToInt4 $dRecElem31

-- RHS size: {terms: 4, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem33
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem33
  = $fRecElemaARectt'::S
      ($d~97 `cast` <Co:1110>) $dNatToInt5 $dRecElem32

-- RHS size: {terms: 4, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem34
  :: RecElem
       ARec
       ("a8" ::: Int)
       ("a8" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem34
  = $fRecElemaARectt'::S
      ($d~98 `cast` <Co:1299>) $dNatToInt6 $dRecElem33

-- RHS size: {terms: 4, types: 268, coercions: 185, joins: 0/0}
$dRecElem35
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem35
  = $fRecElemaARectt'::S
      ($d~81 `cast` <Co:185>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 207, coercions: 297, joins: 0/0}
$dRecElem36
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem36
  = $fRecElemaARectt'::S
      ($d~82 `cast` <Co:297>) $dNatToInt $dRecElem35

-- RHS size: {terms: 4, types: 230, coercions: 420, joins: 0/0}
$dRecElem37
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem37
  = $fRecElemaARectt'::S
      ($d~83 `cast` <Co:420>) $dNatToInt1 $dRecElem36

-- RHS size: {terms: 4, types: 253, coercions: 554, joins: 0/0}
$dRecElem38
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem38
  = $fRecElemaARectt'::S
      ($d~84 `cast` <Co:554>) $dNatToInt2 $dRecElem37

-- RHS size: {terms: 4, types: 276, coercions: 699, joins: 0/0}
$dRecElem39
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem39
  = $fRecElemaARectt'::S
      ($d~85 `cast` <Co:699>) $dNatToInt3 $dRecElem38

-- RHS size: {terms: 4, types: 299, coercions: 855, joins: 0/0}
$dRecElem40
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem40
  = $fRecElemaARectt'::S
      ($d~86 `cast` <Co:855>) $dNatToInt4 $dRecElem39

-- RHS size: {terms: 4, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem41
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem41
  = $fRecElemaARectt'::S
      ($d~87 `cast` <Co:1022>) $dNatToInt5 $dRecElem40

-- RHS size: {terms: 4, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem42
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem42
  = $fRecElemaARectt'::S
      ($d~88 `cast` <Co:1200>) $dNatToInt6 $dRecElem41

-- RHS size: {terms: 4, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem43
  :: RecElem
       ARec
       ("a9" ::: Int)
       ("a9" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem43
  = $fRecElemaARectt'::S
      ($d~89 `cast` <Co:1389>) $dNatToInt7 $dRecElem42

-- RHS size: {terms: 4, types: 235, coercions: 163, joins: 0/0}
$dRecElem44
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem44
  = $fRecElemaARectt'::S
      ($d~70 `cast` <Co:163>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 185, coercions: 264, joins: 0/0}
$dRecElem45
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem45
  = $fRecElemaARectt'::S
      ($d~71 `cast` <Co:264>) $dNatToInt $dRecElem44

-- RHS size: {terms: 4, types: 208, coercions: 376, joins: 0/0}
$dRecElem46
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem46
  = $fRecElemaARectt'::S
      ($d~72 `cast` <Co:376>) $dNatToInt1 $dRecElem45

-- RHS size: {terms: 4, types: 231, coercions: 499, joins: 0/0}
$dRecElem47
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem47
  = $fRecElemaARectt'::S
      ($d~73 `cast` <Co:499>) $dNatToInt2 $dRecElem46

-- RHS size: {terms: 4, types: 254, coercions: 633, joins: 0/0}
$dRecElem48
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem48
  = $fRecElemaARectt'::S
      ($d~74 `cast` <Co:633>) $dNatToInt3 $dRecElem47

-- RHS size: {terms: 4, types: 277, coercions: 778, joins: 0/0}
$dRecElem49
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem49
  = $fRecElemaARectt'::S
      ($d~75 `cast` <Co:778>) $dNatToInt4 $dRecElem48

-- RHS size: {terms: 4, types: 300, coercions: 934, joins: 0/0}
$dRecElem50
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem50
  = $fRecElemaARectt'::S
      ($d~76 `cast` <Co:934>) $dNatToInt5 $dRecElem49

-- RHS size: {terms: 4, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem51
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem51
  = $fRecElemaARectt'::S
      ($d~77 `cast` <Co:1101>) $dNatToInt6 $dRecElem50

-- RHS size: {terms: 4, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem52
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem52
  = $fRecElemaARectt'::S
      ($d~78 `cast` <Co:1279>) $dNatToInt7 $dRecElem51

-- RHS size: {terms: 4, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem53
  :: RecElem
       ARec
       ("a10" ::: Int)
       ("a10" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem53
  = $fRecElemaARectt'::S
      ($d~79 `cast` <Co:1468>) $dNatToInt8 $dRecElem52

-- RHS size: {terms: 4, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaARectt'::S
      ($d~58 `cast` <Co:141>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaARectt'::S
      ($d~59 `cast` <Co:231>) $dNatToInt $dRecElem54

-- RHS size: {terms: 4, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaARectt'::S
      ($d~60 `cast` <Co:332>) $dNatToInt1 $dRecElem55

-- RHS size: {terms: 4, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaARectt'::S
      ($d~61 `cast` <Co:444>) $dNatToInt2 $dRecElem56

-- RHS size: {terms: 4, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaARectt'::S
      ($d~62 `cast` <Co:567>) $dNatToInt3 $dRecElem57

-- RHS size: {terms: 4, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaARectt'::S
      ($d~63 `cast` <Co:701>) $dNatToInt4 $dRecElem58

-- RHS size: {terms: 4, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaARectt'::S
      ($d~64 `cast` <Co:846>) $dNatToInt5 $dRecElem59

-- RHS size: {terms: 4, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaARectt'::S
      ($d~65 `cast` <Co:1002>) $dNatToInt6 $dRecElem60

-- RHS size: {terms: 4, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaARectt'::S
      ($d~66 `cast` <Co:1169>) $dNatToInt7 $dRecElem61

-- RHS size: {terms: 4, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaARectt'::S
      ($d~67 `cast` <Co:1347>) $dNatToInt8 $dRecElem62

-- RHS size: {terms: 4, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       ARec
       ("a11" ::: Int)
       ("a11" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaARectt'::S
      ($d~68 `cast` <Co:1536>) $dNatToInt9 $dRecElem63

-- RHS size: {terms: 4, types: 169, coercions: 119, joins: 0/0}
$dRecElem65
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaARectt'::S
      ($d~45 `cast` <Co:119>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 141, coercions: 198, joins: 0/0}
$dRecElem66
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaARectt'::S
      ($d~46 `cast` <Co:198>) $dNatToInt $dRecElem65

-- RHS size: {terms: 4, types: 164, coercions: 288, joins: 0/0}
$dRecElem67
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaARectt'::S
      ($d~47 `cast` <Co:288>) $dNatToInt1 $dRecElem66

-- RHS size: {terms: 4, types: 187, coercions: 389, joins: 0/0}
$dRecElem68
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaARectt'::S
      ($d~48 `cast` <Co:389>) $dNatToInt2 $dRecElem67

-- RHS size: {terms: 4, types: 210, coercions: 501, joins: 0/0}
$dRecElem69
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaARectt'::S
      ($d~49 `cast` <Co:501>) $dNatToInt3 $dRecElem68

-- RHS size: {terms: 4, types: 233, coercions: 624, joins: 0/0}
$dRecElem70
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaARectt'::S
      ($d~50 `cast` <Co:624>) $dNatToInt4 $dRecElem69

-- RHS size: {terms: 4, types: 256, coercions: 758, joins: 0/0}
$dRecElem71
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaARectt'::S
      ($d~51 `cast` <Co:758>) $dNatToInt5 $dRecElem70

-- RHS size: {terms: 4, types: 279, coercions: 903, joins: 0/0}
$dRecElem72
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaARectt'::S
      ($d~52 `cast` <Co:903>) $dNatToInt6 $dRecElem71

-- RHS size: {terms: 4, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem73
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaARectt'::S
      ($d~53 `cast` <Co:1059>) $dNatToInt7 $dRecElem72

-- RHS size: {terms: 4, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem74
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaARectt'::S
      ($d~54 `cast` <Co:1226>) $dNatToInt8 $dRecElem73

-- RHS size: {terms: 4, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem75
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem75
  = $fRecElemaARectt'::S
      ($d~55 `cast` <Co:1404>) $dNatToInt9 $dRecElem74

-- RHS size: {terms: 4, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem76
  :: RecElem
       ARec
       ("a12" ::: Int)
       ("a12" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem76
  = $fRecElemaARectt'::S
      ($d~56 `cast` <Co:1593>) $dNatToInt10 $dRecElem75

-- RHS size: {terms: 4, types: 136, coercions: 97, joins: 0/0}
$dRecElem77
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem77
  = $fRecElemaARectt'::S
      ($d~31 `cast` <Co:97>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 119, coercions: 165, joins: 0/0}
$dRecElem78
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem78
  = $fRecElemaARectt'::S
      ($d~32 `cast` <Co:165>) $dNatToInt $dRecElem77

-- RHS size: {terms: 4, types: 142, coercions: 244, joins: 0/0}
$dRecElem79
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem79
  = $fRecElemaARectt'::S
      ($d~33 `cast` <Co:244>) $dNatToInt1 $dRecElem78

-- RHS size: {terms: 4, types: 165, coercions: 334, joins: 0/0}
$dRecElem80
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem80
  = $fRecElemaARectt'::S
      ($d~34 `cast` <Co:334>) $dNatToInt2 $dRecElem79

-- RHS size: {terms: 4, types: 188, coercions: 435, joins: 0/0}
$dRecElem81
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem81
  = $fRecElemaARectt'::S
      ($d~35 `cast` <Co:435>) $dNatToInt3 $dRecElem80

-- RHS size: {terms: 4, types: 211, coercions: 547, joins: 0/0}
$dRecElem82
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem82
  = $fRecElemaARectt'::S
      ($d~36 `cast` <Co:547>) $dNatToInt4 $dRecElem81

-- RHS size: {terms: 4, types: 234, coercions: 670, joins: 0/0}
$dRecElem83
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem83
  = $fRecElemaARectt'::S
      ($d~37 `cast` <Co:670>) $dNatToInt5 $dRecElem82

-- RHS size: {terms: 4, types: 257, coercions: 804, joins: 0/0}
$dRecElem84
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem84
  = $fRecElemaARectt'::S
      ($d~38 `cast` <Co:804>) $dNatToInt6 $dRecElem83

-- RHS size: {terms: 4, types: 280, coercions: 949, joins: 0/0}
$dRecElem85
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem85
  = $fRecElemaARectt'::S
      ($d~39 `cast` <Co:949>) $dNatToInt7 $dRecElem84

-- RHS size: {terms: 4, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem86
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem86
  = $fRecElemaARectt'::S
      ($d~40 `cast` <Co:1105>) $dNatToInt8 $dRecElem85

-- RHS size: {terms: 4, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem87
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem87
  = $fRecElemaARectt'::S
      ($d~41 `cast` <Co:1272>) $dNatToInt9 $dRecElem86

-- RHS size: {terms: 4, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem88
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem88
  = $fRecElemaARectt'::S
      ($d~42 `cast` <Co:1450>) $dNatToInt10 $dRecElem87

-- RHS size: {terms: 4, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem89
  :: RecElem
       ARec
       ("a13" ::: Int)
       ("a13" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem89
  = $fRecElemaARectt'::S
      ($d~43 `cast` <Co:1639>) $dNatToInt11 $dRecElem88

-- RHS size: {terms: 4, types: 103, coercions: 75, joins: 0/0}
$dRecElem90
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem90
  = $fRecElemaARectt'::S
      ($d~16 `cast` <Co:75>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 97, coercions: 132, joins: 0/0}
$dRecElem91
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem91
  = $fRecElemaARectt'::S
      ($d~17 `cast` <Co:132>) $dNatToInt $dRecElem90

-- RHS size: {terms: 4, types: 120, coercions: 200, joins: 0/0}
$dRecElem92
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem92
  = $fRecElemaARectt'::S
      ($d~18 `cast` <Co:200>) $dNatToInt1 $dRecElem91

-- RHS size: {terms: 4, types: 143, coercions: 279, joins: 0/0}
$dRecElem93
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem93
  = $fRecElemaARectt'::S
      ($d~19 `cast` <Co:279>) $dNatToInt2 $dRecElem92

-- RHS size: {terms: 4, types: 166, coercions: 369, joins: 0/0}
$dRecElem94
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem94
  = $fRecElemaARectt'::S
      ($d~20 `cast` <Co:369>) $dNatToInt3 $dRecElem93

-- RHS size: {terms: 4, types: 189, coercions: 470, joins: 0/0}
$dRecElem95
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem95
  = $fRecElemaARectt'::S
      ($d~21 `cast` <Co:470>) $dNatToInt4 $dRecElem94

-- RHS size: {terms: 4, types: 212, coercions: 582, joins: 0/0}
$dRecElem96
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem96
  = $fRecElemaARectt'::S
      ($d~22 `cast` <Co:582>) $dNatToInt5 $dRecElem95

-- RHS size: {terms: 4, types: 235, coercions: 705, joins: 0/0}
$dRecElem97
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem97
  = $fRecElemaARectt'::S
      ($d~23 `cast` <Co:705>) $dNatToInt6 $dRecElem96

-- RHS size: {terms: 4, types: 258, coercions: 839, joins: 0/0}
$dRecElem98
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem98
  = $fRecElemaARectt'::S
      ($d~24 `cast` <Co:839>) $dNatToInt7 $dRecElem97

-- RHS size: {terms: 4, types: 281, coercions: 984, joins: 0/0}
$dRecElem99
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem99
  = $fRecElemaARectt'::S
      ($d~25 `cast` <Co:984>) $dNatToInt8 $dRecElem98

-- RHS size: {terms: 4, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem100
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem100
  = $fRecElemaARectt'::S
      ($d~26 `cast` <Co:1140>) $dNatToInt9 $dRecElem99

-- RHS size: {terms: 4, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem101
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem101
  = $fRecElemaARectt'::S
      ($d~27 `cast` <Co:1307>) $dNatToInt10 $dRecElem100

-- RHS size: {terms: 4, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem102
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem102
  = $fRecElemaARectt'::S
      ($d~28 `cast` <Co:1485>) $dNatToInt11 $dRecElem101

-- RHS size: {terms: 4, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem103
  :: RecElem
       ARec
       ("a14" ::: Int)
       ("a14" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem103
  = $fRecElemaARectt'::S
      ($d~29 `cast` <Co:1674>) $dNatToInt12 $dRecElem102

-- RHS size: {terms: 4, types: 70, coercions: 53, joins: 0/0}
$dRecElem104
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem104
  = $fRecElemaARectt'::S
      ($d~ `cast` <Co:53>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 75, coercions: 99, joins: 0/0}
$dRecElem105
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem105
  = $fRecElemaARectt'::S
      ($d~1 `cast` <Co:99>) $dNatToInt $dRecElem104

-- RHS size: {terms: 4, types: 98, coercions: 156, joins: 0/0}
$dRecElem106
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem106
  = $fRecElemaARectt'::S
      ($d~2 `cast` <Co:156>) $dNatToInt1 $dRecElem105

-- RHS size: {terms: 4, types: 121, coercions: 224, joins: 0/0}
$dRecElem107
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem107
  = $fRecElemaARectt'::S
      ($d~3 `cast` <Co:224>) $dNatToInt2 $dRecElem106

-- RHS size: {terms: 4, types: 144, coercions: 303, joins: 0/0}
$dRecElem108
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem108
  = $fRecElemaARectt'::S
      ($d~4 `cast` <Co:303>) $dNatToInt3 $dRecElem107

-- RHS size: {terms: 4, types: 167, coercions: 393, joins: 0/0}
$dRecElem109
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem109
  = $fRecElemaARectt'::S
      ($d~5 `cast` <Co:393>) $dNatToInt4 $dRecElem108

-- RHS size: {terms: 4, types: 190, coercions: 494, joins: 0/0}
$dRecElem110
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem110
  = $fRecElemaARectt'::S
      ($d~6 `cast` <Co:494>) $dNatToInt5 $dRecElem109

-- RHS size: {terms: 4, types: 213, coercions: 606, joins: 0/0}
$dRecElem111
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem111
  = $fRecElemaARectt'::S
      ($d~7 `cast` <Co:606>) $dNatToInt6 $dRecElem110

-- RHS size: {terms: 4, types: 236, coercions: 729, joins: 0/0}
$dRecElem112
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem112
  = $fRecElemaARectt'::S
      ($d~8 `cast` <Co:729>) $dNatToInt7 $dRecElem111

-- RHS size: {terms: 4, types: 259, coercions: 863, joins: 0/0}
$dRecElem113
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem113
  = $fRecElemaARectt'::S
      ($d~9 `cast` <Co:863>) $dNatToInt8 $dRecElem112

-- RHS size: {terms: 4, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem114
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem114
  = $fRecElemaARectt'::S
      ($d~10 `cast` <Co:1008>) $dNatToInt9 $dRecElem113

-- RHS size: {terms: 4, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem115
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem115
  = $fRecElemaARectt'::S
      ($d~11 `cast` <Co:1164>) $dNatToInt10 $dRecElem114

-- RHS size: {terms: 4, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem116
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem116
  = $fRecElemaARectt'::S
      ($d~12 `cast` <Co:1331>) $dNatToInt11 $dRecElem115

-- RHS size: {terms: 4, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem117
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem117
  = $fRecElemaARectt'::S
      ($d~13 `cast` <Co:1509>) $dNatToInt12 $dRecElem116

-- RHS size: {terms: 4, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem118
  :: RecElem
       ARec
       ("a15" ::: Int)
       ("a15" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem118
  = $fRecElemaARectt'::S
      ($d~14 `cast` <Co:1698>) $dNatToInt13 $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~133 :: 'S 'Z ~ 'S 'Z
$d~133 = Eq# @~ <Co:2>

-- RHS size: {terms: 4, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem ARec ("a1" ::: Int) ("a1" ::: Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaARectt'::S
      ($d~133 `cast` <Co:361>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~134 :: "a1" ~ "a1"
$d~134 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel14 :: IsLabel "a1" (Label "a1")
$dIsLabel14 = $fIsLabelsLabel $d~134

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~135 :: "a0" ~ "a0"
$d~135 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel15 :: IsLabel "a0" (Label "a0")
$dIsLabel15 = $fIsLabelsLabel $d~135

-- RHS size: {terms: 277,
              types: 3,562,
              coercions: 86,162,
              joins: 0/52}
sumARec :: ARec ElField Fields -> Int
sumARec
  = \ (str :: ARec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (l :: Symbol) (us :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem
                record
                (l ::: FieldType l us)
                (l ::: FieldType l us)
                us
                us
                (RIndex (l ::: FieldType l us) us)) =>
             Label l -> record ElField us -> FieldType l us
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (l :: Symbol))
              (@ (us :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem
                      record
                      (l ::: FieldType l us)
                      (l ::: FieldType l us)
                      us
                      us
                      (RIndex (l ::: FieldType l us) us))
              (eta :: Label l)
              (eta1 :: record ElField us) ->
              let {
                $d~136 :: FieldType l us ~ FieldType l us
                $d~136 = Eq# @~ <Co:5> } in
              let {
                $d~137 :: FieldType l us ~ FieldType l us
                $d~137 = Eq# @~ <Co:5> } in
              let {
                $d(%,,%)
                  :: (RecElem
                        record
                        (l ::: FieldType l us)
                        (l ::: FieldType l us)
                        us
                        us
                        (RIndex (l ::: FieldType l us) us),
                      FieldType l us ~ FieldType l us, FieldType l us ~ FieldType l us)
                $d(%,,%) = ($dRecElem120, $d~137, $d~136) } in
              break<0>(eta1,eta) rvalf $d(%,,%) irred eta eta1 } in
      break<15>(str,get)
      + $fNumInt
        (break<14>(str,get)
         + $fNumInt
           (break<13>(str,get)
            + $fNumInt
              (break<12>(str,get)
               + $fNumInt
                 (break<11>(str,get)
                  + $fNumInt
                    (break<10>(str,get)
                     + $fNumInt
                       (break<9>(str,get)
                        + $fNumInt
                          (break<8>(str,get)
                           + $fNumInt
                             (break<7>(str,get)
                              + $fNumInt
                                (break<6>(str,get)
                                 + $fNumInt
                                   (break<5>(str,get)
                                    + $fNumInt
                                      (break<4>(str,get)
                                       + $fNumInt
                                         (break<3>(str,get)
                                          + $fNumInt
                                            (break<2>(str,get)
                                             + $fNumInt
                                               (break<1>(str,get)
                                                + $fNumInt
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a0" ::: FieldType "a0" Fields)
                                                                Fields),
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields,
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields)
                                                     $d(%,,%)
                                                       = ($fRecElemaARectt'::Z `cast` <Co:744>,
                                                          $d~137, $d~136) } in
                                                   (break<0>(str,$dIsLabel15)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel15 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:177>)
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a1" ::: FieldType "a1" Fields)
                                                                Fields),
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields,
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields)
                                                     $d(%,,%)
                                                       = ($dRecElem119 `cast` <Co:1425>, $d~137,
                                                          $d~136) } in
                                                   (break<0>(str,$dIsLabel14)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel14 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:345>))
                                               (let {
                                                  $d~136
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~136 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d~137
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~137 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d(%,,%)
                                                    :: (RecElem
                                                          ARec
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          Fields
                                                          Fields
                                                          (RIndex
                                                             ("a2" ::: FieldType "a2" Fields)
                                                             Fields),
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields,
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields)
                                                  $d(%,,%)
                                                    = ($dRecElem1 `cast` <Co:2062>, $d~137,
                                                       $d~136) } in
                                                (break<0>(str,$dIsLabel13)
                                                 rvalf
                                                   $d(%,,%)
                                                   (C:(%%) `cast` <Co:7>)
                                                   ($dIsLabel13 `cast` <Co:4>)
                                                   str)
                                                `cast` <Co:502>))
                                            (let {
                                               $d~136
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~136 = Eq# @~ <Co:5> } in
                                             let {
                                               $d~137
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~137 = Eq# @~ <Co:5> } in
                                             let {
                                               $d(%,,%)
                                                 :: (RecElem
                                                       ARec
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       Fields
                                                       Fields
                                                       (RIndex
                                                          ("a3" ::: FieldType "a3" Fields) Fields),
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields,
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields)
                                               $d(%,,%)
                                                 = ($dRecElem4 `cast` <Co:2655>, $d~137,
                                                    $d~136) } in
                                             (break<0>(str,$dIsLabel12)
                                              rvalf
                                                $d(%,,%)
                                                (C:(%%) `cast` <Co:7>)
                                                ($dIsLabel12 `cast` <Co:4>)
                                                str)
                                             `cast` <Co:648>))
                                         (let {
                                            $d~136 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~136 = Eq# @~ <Co:5> } in
                                          let {
                                            $d~137 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~137 = Eq# @~ <Co:5> } in
                                          let {
                                            $d(%,,%)
                                              :: (RecElem
                                                    ARec
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    Fields
                                                    Fields
                                                    (RIndex
                                                       ("a4" ::: FieldType "a4" Fields) Fields),
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields,
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields)
                                            $d(%,,%)
                                              = ($dRecElem8 `cast` <Co:3204>, $d~137, $d~136) } in
                                          (break<0>(str,$dIsLabel11)
                                           rvalf
                                             $d(%,,%)
                                             (C:(%%) `cast` <Co:7>)
                                             ($dIsLabel11 `cast` <Co:4>)
                                             str)
                                          `cast` <Co:783>))
                                      (let {
                                         $d~136 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~136 = Eq# @~ <Co:5> } in
                                       let {
                                         $d~137 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~137 = Eq# @~ <Co:5> } in
                                       let {
                                         $d(%,,%)
                                           :: (RecElem
                                                 ARec
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 Fields
                                                 Fields
                                                 (RIndex ("a5" ::: FieldType "a5" Fields) Fields),
                                               FieldType "a5" Fields ~ FieldType "a5" Fields,
                                               FieldType "a5" Fields ~ FieldType "a5" Fields)
                                         $d(%,,%)
                                           = ($dRecElem13 `cast` <Co:3709>, $d~137, $d~136) } in
                                       (break<0>(str,$dIsLabel10)
                                        rvalf
                                          $d(%,,%)
                                          (C:(%%) `cast` <Co:7>)
                                          ($dIsLabel10 `cast` <Co:4>)
                                          str)
                                       `cast` <Co:907>))
                                   (let {
                                      $d~136 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~136 = Eq# @~ <Co:5> } in
                                    let {
                                      $d~137 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~137 = Eq# @~ <Co:5> } in
                                    let {
                                      $d(%,,%)
                                        :: (RecElem
                                              ARec
                                              ("a6" ::: FieldType "a6" Fields)
                                              ("a6" ::: FieldType "a6" Fields)
                                              Fields
                                              Fields
                                              (RIndex ("a6" ::: FieldType "a6" Fields) Fields),
                                            FieldType "a6" Fields ~ FieldType "a6" Fields,
                                            FieldType "a6" Fields ~ FieldType "a6" Fields)
                                      $d(%,,%) = ($dRecElem19 `cast` <Co:4170>, $d~137, $d~136) } in
                                    (break<0>(str,$dIsLabel9)
                                     rvalf
                                       $d(%,,%)
                                       (C:(%%) `cast` <Co:7>)
                                       ($dIsLabel9 `cast` <Co:4>)
                                       str)
                                    `cast` <Co:1020>))
                                (let {
                                   $d~136 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~136 = Eq# @~ <Co:5> } in
                                 let {
                                   $d~137 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~137 = Eq# @~ <Co:5> } in
                                 let {
                                   $d(%,,%)
                                     :: (RecElem
                                           ARec
                                           ("a7" ::: FieldType "a7" Fields)
                                           ("a7" ::: FieldType "a7" Fields)
                                           Fields
                                           Fields
                                           (RIndex ("a7" ::: FieldType "a7" Fields) Fields),
                                         FieldType "a7" Fields ~ FieldType "a7" Fields,
                                         FieldType "a7" Fields ~ FieldType "a7" Fields)
                                   $d(%,,%) = ($dRecElem26 `cast` <Co:4587>, $d~137, $d~136) } in
                                 (break<0>(str,$dIsLabel8)
                                  rvalf
                                    $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel8 `cast` <Co:4>) str)
                                 `cast` <Co:1122>))
                             (let {
                                $d~136 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~136 = Eq# @~ <Co:5> } in
                              let {
                                $d~137 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~137 = Eq# @~ <Co:5> } in
                              let {
                                $d(%,,%)
                                  :: (RecElem
                                        ARec
                                        ("a8" ::: FieldType "a8" Fields)
                                        ("a8" ::: FieldType "a8" Fields)
                                        Fields
                                        Fields
                                        (RIndex ("a8" ::: FieldType "a8" Fields) Fields),
                                      FieldType "a8" Fields ~ FieldType "a8" Fields,
                                      FieldType "a8" Fields ~ FieldType "a8" Fields)
                                $d(%,,%) = ($dRecElem34 `cast` <Co:4960>, $d~137, $d~136) } in
                              (break<0>(str,$dIsLabel7)
                               rvalf
                                 $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel7 `cast` <Co:4>) str)
                              `cast` <Co:1213>))
                          (let {
                             $d~136 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~136 = Eq# @~ <Co:5> } in
                           let {
                             $d~137 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~137 = Eq# @~ <Co:5> } in
                           let {
                             $d(%,,%)
                               :: (RecElem
                                     ARec
                                     ("a9" ::: FieldType "a9" Fields)
                                     ("a9" ::: FieldType "a9" Fields)
                                     Fields
                                     Fields
                                     (RIndex ("a9" ::: FieldType "a9" Fields) Fields),
                                   FieldType "a9" Fields ~ FieldType "a9" Fields,
                                   FieldType "a9" Fields ~ FieldType "a9" Fields)
                             $d(%,,%) = ($dRecElem43 `cast` <Co:5289>, $d~137, $d~136) } in
                           (break<0>(str,$dIsLabel6)
                            rvalf
                              $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel6 `cast` <Co:4>) str)
                           `cast` <Co:1293>))
                       (let {
                          $d~136 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~136 = Eq# @~ <Co:5> } in
                        let {
                          $d~137 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~137 = Eq# @~ <Co:5> } in
                        let {
                          $d(%,,%)
                            :: (RecElem
                                  ARec
                                  ("a10" ::: FieldType "a10" Fields)
                                  ("a10" ::: FieldType "a10" Fields)
                                  Fields
                                  Fields
                                  (RIndex ("a10" ::: FieldType "a10" Fields) Fields),
                                FieldType "a10" Fields ~ FieldType "a10" Fields,
                                FieldType "a10" Fields ~ FieldType "a10" Fields)
                          $d(%,,%) = ($dRecElem53 `cast` <Co:5574>, $d~137, $d~136) } in
                        (break<0>(str,$dIsLabel5)
                         rvalf
                           $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel5 `cast` <Co:4>) str)
                        `cast` <Co:1362>))
                    (let {
                       $d~136 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~136 = Eq# @~ <Co:5> } in
                     let {
                       $d~137 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~137 = Eq# @~ <Co:5> } in
                     let {
                       $d(%,,%)
                         :: (RecElem
                               ARec
                               ("a11" ::: FieldType "a11" Fields)
                               ("a11" ::: FieldType "a11" Fields)
                               Fields
                               Fields
                               (RIndex ("a11" ::: FieldType "a11" Fields) Fields),
                             FieldType "a11" Fields ~ FieldType "a11" Fields,
                             FieldType "a11" Fields ~ FieldType "a11" Fields)
                       $d(%,,%) = ($dRecElem64 `cast` <Co:5815>, $d~137, $d~136) } in
                     (break<0>(str,$dIsLabel4)
                      rvalf
                        $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel4 `cast` <Co:4>) str)
                     `cast` <Co:1420>))
                 (let {
                    $d~136 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~136 = Eq# @~ <Co:5> } in
                  let {
                    $d~137 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~137 = Eq# @~ <Co:5> } in
                  let {
                    $d(%,,%)
                      :: (RecElem
                            ARec
                            ("a12" ::: FieldType "a12" Fields)
                            ("a12" ::: FieldType "a12" Fields)
                            Fields
                            Fields
                            (RIndex ("a12" ::: FieldType "a12" Fields) Fields),
                          FieldType "a12" Fields ~ FieldType "a12" Fields,
                          FieldType "a12" Fields ~ FieldType "a12" Fields)
                    $d(%,,%) = ($dRecElem76 `cast` <Co:6012>, $d~137, $d~136) } in
                  (break<0>(str,$dIsLabel3)
                   rvalf
                     $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel3 `cast` <Co:4>) str)
                  `cast` <Co:1467>))
              (let {
                 $d~136 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~136 = Eq# @~ <Co:5> } in
               let {
                 $d~137 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~137 = Eq# @~ <Co:5> } in
               let {
                 $d(%,,%)
                   :: (RecElem
                         ARec
                         ("a13" ::: FieldType "a13" Fields)
                         ("a13" ::: FieldType "a13" Fields)
                         Fields
                         Fields
                         (RIndex ("a13" ::: FieldType "a13" Fields) Fields),
                       FieldType "a13" Fields ~ FieldType "a13" Fields,
                       FieldType "a13" Fields ~ FieldType "a13" Fields)
                 $d(%,,%) = ($dRecElem89 `cast` <Co:6165>, $d~137, $d~136) } in
               (break<0>(str,$dIsLabel2)
                rvalf
                  $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel2 `cast` <Co:4>) str)
               `cast` <Co:1503>))
           (let {
              $d~136 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~136 = Eq# @~ <Co:5> } in
            let {
              $d~137 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~137 = Eq# @~ <Co:5> } in
            let {
              $d(%,,%)
                :: (RecElem
                      ARec
                      ("a14" ::: FieldType "a14" Fields)
                      ("a14" ::: FieldType "a14" Fields)
                      Fields
                      Fields
                      (RIndex ("a14" ::: FieldType "a14" Fields) Fields),
                    FieldType "a14" Fields ~ FieldType "a14" Fields,
                    FieldType "a14" Fields ~ FieldType "a14" Fields)
              $d(%,,%) = ($dRecElem103 `cast` <Co:6274>, $d~137, $d~136) } in
            (break<0>(str,$dIsLabel1)
             rvalf
               $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel1 `cast` <Co:4>) str)
            `cast` <Co:1528>))
        (let {
           $d~136 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~136 = Eq# @~ <Co:5> } in
         let {
           $d~137 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~137 = Eq# @~ <Co:5> } in
         let {
           $d(%,,%)
             :: (RecElem
                   ARec
                   ("a15" ::: FieldType "a15" Fields)
                   ("a15" ::: FieldType "a15" Fields)
                   Fields
                   Fields
                   (RIndex ("a15" ::: FieldType "a15" Fields) Fields),
                 FieldType "a15" Fields ~ FieldType "a15" Fields,
                 FieldType "a15" Fields ~ FieldType "a15" Fields)
           $d(%,,%) = ($dRecElem118 `cast` <Co:6339>, $d~137, $d~136) } in
         (break<0>(str,$dIsLabel)
          rvalf
            $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel `cast` <Co:4>) str)
         `cast` <Co:1542>)



==================== Tidy Core ====================
2021-05-14 17:30:39.1257114 UTC

Result size of Tidy Core
  = {terms: 1,541, types: 77,526, coercions: 176,078, joins: 0/52}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.ARec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~15 :: "a15" ~ "a15"
$d~15 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel :: IsLabel "a15" (Label "a15")
$dIsLabel = $fIsLabelsLabel $d~15

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~16 :: 'S 'Z ~ 'S 'Z
$d~16 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~17 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~17 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~18 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~18 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~19 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~19 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~20 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~20 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~21 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~22 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~23 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~24 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~25 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~26 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~27
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~27 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~28 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~29
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~29 = Eq# @~ <Co:15>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~30 :: "a14" ~ "a14"
$d~30 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel1 :: IsLabel "a14" (Label "a14")
$dIsLabel1 = $fIsLabelsLabel $d~30

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~31 :: 'S 'Z ~ 'S 'Z
$d~31 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~32 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~32 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~33 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~33 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~34 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~34 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~35 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~35 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~36 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~37 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~38 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~39 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~40 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~41
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~41 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~42
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~42 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~43
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~43 = Eq# @~ <Co:14>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~44 :: "a13" ~ "a13"
$d~44 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel2 :: IsLabel "a13" (Label "a13")
$dIsLabel2 = $fIsLabelsLabel $d~44

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~45 :: 'S 'Z ~ 'S 'Z
$d~45 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~46 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~46 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~47 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~47 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~48 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~48 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~49 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~49 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~50 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~51 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~52 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~53 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~54
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~54 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~55
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~55 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~56
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~56 = Eq# @~ <Co:13>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~57 :: "a12" ~ "a12"
$d~57 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel3 :: IsLabel "a12" (Label "a12")
$dIsLabel3 = $fIsLabelsLabel $d~57

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~58 :: 'S 'Z ~ 'S 'Z
$d~58 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~59 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~59 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~60 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~60 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~61 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~61 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~62 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~62 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~63 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~64 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~65
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~65 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~66
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~66 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~67
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~67 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~68
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~68 = Eq# @~ <Co:12>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~69 :: "a11" ~ "a11"
$d~69 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel4 :: IsLabel "a11" (Label "a11")
$dIsLabel4 = $fIsLabelsLabel $d~69

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~70 :: 'S 'Z ~ 'S 'Z
$d~70 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~71 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~71 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~72 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~72 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~73 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~73 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~74 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~74 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~75
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~75 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~76
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~76 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~77
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~77 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~78
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~78 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~79
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~79 = Eq# @~ <Co:11>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~80 :: "a10" ~ "a10"
$d~80 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel5 :: IsLabel "a10" (Label "a10")
$dIsLabel5 = $fIsLabelsLabel $d~80

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~81 :: 'S 'Z ~ 'S 'Z
$d~81 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~82 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~82 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~83 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~83 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~84 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~84 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~85 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~85 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~86
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~86 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~87
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~87 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~88
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~88 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~89 = Eq# @~ <Co:10>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~90 :: "a9" ~ "a9"
$d~90 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel6 :: IsLabel "a9" (Label "a9")
$dIsLabel6 = $fIsLabelsLabel $d~90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~91 :: 'S 'Z ~ 'S 'Z
$d~91 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~92 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~92 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~93 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~93 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~94 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~94 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~95 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~95 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~96
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~96 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~97 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~98 = Eq# @~ <Co:9>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~99 :: "a8" ~ "a8"
$d~99 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel7 :: IsLabel "a8" (Label "a8")
$dIsLabel7 = $fIsLabelsLabel $d~99

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~100 :: 'S 'Z ~ 'S 'Z
$d~100 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~101 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~101 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~102 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~102 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~103 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~103 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~104 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~104 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~105
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~105 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~106
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~106 = Eq# @~ <Co:8>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~107 :: "a7" ~ "a7"
$d~107 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel8 :: IsLabel "a7" (Label "a7")
$dIsLabel8 = $fIsLabelsLabel $d~107

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~108 :: 'S 'Z ~ 'S 'Z
$d~108 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~109 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~109 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~110 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~110 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~111 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~111 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~112 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~112 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~113
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~113 = Eq# @~ <Co:7>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~114 :: "a6" ~ "a6"
$d~114 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel9 :: IsLabel "a6" (Label "a6")
$dIsLabel9 = $fIsLabelsLabel $d~114

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~115 :: 'S 'Z ~ 'S 'Z
$d~115 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~116 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~116 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~117 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~117 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~118 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~118 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~119 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~119 = Eq# @~ <Co:6>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~120 :: "a5" ~ "a5"
$d~120 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel10 :: IsLabel "a5" (Label "a5")
$dIsLabel10 = $fIsLabelsLabel $d~120

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~121 :: 'S 'Z ~ 'S 'Z
$d~121 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~122 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~122 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~123 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~123 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~124 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~124 = Eq# @~ <Co:5>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~125 :: "a4" ~ "a4"
$d~125 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel11 :: IsLabel "a4" (Label "a4")
$dIsLabel11 = $fIsLabelsLabel $d~125

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~126 :: 'S 'Z ~ 'S 'Z
$d~126 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~127 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~127 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~128 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~128 = Eq# @~ <Co:4>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~129 :: "a3" ~ "a3"
$d~129 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel12 :: IsLabel "a3" (Label "a3")
$dIsLabel12 = $fIsLabelsLabel $d~129

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~130 :: 'S 'Z ~ 'S 'Z
$d~130 = Eq# @~ <Co:2>

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~131 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~131 = Eq# @~ <Co:3>

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~132 :: "a2" ~ "a2"
$d~132 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel13 :: IsLabel "a2" (Label "a2")
$dIsLabel13 = $fIsLabelsLabel $d~132

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
$dNatToInt :: NatToInt ('S 'Z)
$dNatToInt = $fNatToIntS $fNatToIntZ

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dNatToInt1 :: NatToInt ('S ('S 'Z))
$dNatToInt1 = $fNatToIntS $dNatToInt

-- RHS size: {terms: 2, types: 3, coercions: 0, joins: 0/0}
$dNatToInt2 :: NatToInt ('S ('S ('S 'Z)))
$dNatToInt2 = $fNatToIntS $dNatToInt1

-- RHS size: {terms: 2, types: 4, coercions: 0, joins: 0/0}
$dNatToInt3 :: NatToInt ('S ('S ('S ('S 'Z))))
$dNatToInt3 = $fNatToIntS $dNatToInt2

-- RHS size: {terms: 2, types: 5, coercions: 0, joins: 0/0}
$dNatToInt4 :: NatToInt ('S ('S ('S ('S ('S 'Z)))))
$dNatToInt4 = $fNatToIntS $dNatToInt3

-- RHS size: {terms: 2, types: 6, coercions: 0, joins: 0/0}
$dNatToInt5 :: NatToInt ('S ('S ('S ('S ('S ('S 'Z))))))
$dNatToInt5 = $fNatToIntS $dNatToInt4

-- RHS size: {terms: 2, types: 7, coercions: 0, joins: 0/0}
$dNatToInt6 :: NatToInt ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dNatToInt6 = $fNatToIntS $dNatToInt5

-- RHS size: {terms: 2, types: 8, coercions: 0, joins: 0/0}
$dNatToInt7 :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dNatToInt7 = $fNatToIntS $dNatToInt6

-- RHS size: {terms: 2, types: 9, coercions: 0, joins: 0/0}
$dNatToInt8
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dNatToInt8 = $fNatToIntS $dNatToInt7

-- RHS size: {terms: 2, types: 10, coercions: 0, joins: 0/0}
$dNatToInt9
  :: NatToInt ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dNatToInt9 = $fNatToIntS $dNatToInt8

-- RHS size: {terms: 2, types: 11, coercions: 0, joins: 0/0}
$dNatToInt10
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dNatToInt10 = $fNatToIntS $dNatToInt9

-- RHS size: {terms: 2, types: 12, coercions: 0, joins: 0/0}
$dNatToInt11
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dNatToInt11 = $fNatToIntS $dNatToInt10

-- RHS size: {terms: 2, types: 13, coercions: 0, joins: 0/0}
$dNatToInt12
  :: NatToInt
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dNatToInt12 = $fNatToIntS $dNatToInt11

-- RHS size: {terms: 2, types: 14, coercions: 0, joins: 0/0}
$dNatToInt13
  :: NatToInt
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dNatToInt13 = $fNatToIntS $dNatToInt12

-- RHS size: {terms: 2, types: 15, coercions: 0, joins: 0/0}
$dNatToInt14
  :: NatToInt
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dNatToInt14 = $fNatToIntS $dNatToInt13

-- RHS size: {terms: 2, types: 16, coercions: 0, joins: 0/0}
$dNatToInt15
  :: NatToInt
       ('S
          ('S
             ('S
                ('S
                   ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))))
$dNatToInt15 = $fNatToIntS $dNatToInt14

-- RHS size: {terms: 162,
              types: 6,652,
              coercions: 3,024,
              joins: 0/0}
mkToARec :: Int -> ARec ElField Fields
mkToARec
  = \ (i :: Int) ->
      break<48>(i)
      toARec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<47>(i)
         case break<16>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
         { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
         case break<46>(i)
              case break<17>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
              { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
              case break<45>(i)
                   case break<18>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                   { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                   case break<44>(i)
                        case break<19>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                        { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                        case break<43>(i)
                             case break<20>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                             { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                             case break<42>(i)
                                  case break<21>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                                  { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                                  case break<41>(i)
                                       case break<22>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                       of dt6
                                       { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                       case break<40>(i)
                                            case break<23>(i)
                                                 $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                            of dt7
                                            { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                            case break<39>(i)
                                                 case break<24>(i)
                                                      $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                                 of dt8
                                                 { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                                 case break<38>(i)
                                                      case break<25>(i)
                                                           $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                      of dt9
                                                      { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                      case break<37>(i)
                                                           case break<26>(i)
                                                                $WField
                                                                  ($dKnownSymbol5 `cast` <Co:7>) i
                                                           of dt10
                                                           { Field @ ipv50 @ ipv51 ipv52 ipv53
                                                                   ipv54 ->
                                                           case break<36>(i)
                                                                case break<27>(i)
                                                                     $WField
                                                                       ($dKnownSymbol4
                                                                        `cast` <Co:7>)
                                                                       i
                                                                of dt11
                                                                { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                        ipv59 ->
                                                                case break<35>(i)
                                                                     case break<28>(i)
                                                                          $WField
                                                                            ($dKnownSymbol3
                                                                             `cast` <Co:7>)
                                                                            i
                                                                     of dt12
                                                                     { Field @ ipv60 @ ipv61 ipv62
                                                                             ipv63 ipv64 ->
                                                                     case break<34>(i)
                                                                          case break<29>(i)
                                                                               $WField
                                                                                 ($dKnownSymbol2
                                                                                  `cast` <Co:7>)
                                                                                 i
                                                                          of dt13
                                                                          { Field @ ipv65 @ ipv66
                                                                                  ipv67 ipv68
                                                                                  ipv69 ->
                                                                          case break<33>(i)
                                                                               case break<30>(i)
                                                                                    $WField
                                                                                      ($dKnownSymbol1
                                                                                       `cast` <Co:7>)
                                                                                      i
                                                                               of dt14
                                                                               { Field @ ipv70
                                                                                       @ ipv71 ipv72
                                                                                       ipv73
                                                                                       ipv74 ->
                                                                               case break<32>()
                                                                                    case break<31>()
                                                                                         Field
                                                                                           @~ <Co:6>
                                                                                           ($dKnownSymbol
                                                                                            `cast` <Co:7>)
                                                                                           (I# 99#)
                                                                                    of dt15
                                                                                    { Field @ ipv75
                                                                                            @ ipv76
                                                                                            ipv77
                                                                                            ipv78
                                                                                            ipv79 ->
                                                                                    :&
                                                                                      @~ <Co:14>
                                                                                      dt15
                                                                                      (RNil
                                                                                         @~ <Co:4>)
                                                                                    }
                                                                               of dt15
                                                                               { :& @ ipv75 @ ipv76
                                                                                    ipv77 ipv78
                                                                                    ipv79 ->
                                                                               :&
                                                                                 @~ <Co:24>
                                                                                 dt14
                                                                                 dt15
                                                                               }
                                                                               }
                                                                          of dt14
                                                                          { :& @ ipv70 @ ipv71 ipv72
                                                                               ipv73 ipv74 ->
                                                                          :& @~ <Co:34> dt13 dt14
                                                                          }
                                                                          }
                                                                     of dt13
                                                                     { :& @ ipv65 @ ipv66 ipv67
                                                                          ipv68 ipv69 ->
                                                                     :& @~ <Co:44> dt12 dt13
                                                                     }
                                                                     }
                                                                of dt12
                                                                { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                     ipv64 ->
                                                                :& @~ <Co:54> dt11 dt12
                                                                }
                                                                }
                                                           of dt11
                                                           { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                           :& @~ <Co:64> dt10 dt11
                                                           }
                                                           }
                                                      of dt10
                                                      { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                      :& @~ <Co:74> dt9 dt10
                                                      }
                                                      }
                                                 of dt9
                                                 { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                 :& @~ <Co:84> dt8 dt9
                                                 }
                                                 }
                                            of dt8
                                            { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                            :& @~ <Co:94> dt7 dt8
                                            }
                                            }
                                       of dt7
                                       { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                       :& @~ <Co:104> dt6 dt7
                                       }
                                       }
                                  of dt6
                                  { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                  :& @~ <Co:114> dt5 dt6
                                  }
                                  }
                             of dt5
                             { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                             :& @~ <Co:124> dt4 dt5
                             }
                             }
                        of dt4
                        { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                        :& @~ <Co:134> dt3 dt4
                        }
                        }
                   of dt3
                   { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                   :& @~ <Co:144> dt2 dt3
                   }
                   }
              of dt2
              { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
              :& @~ <Co:154> dt1 dt2
              }
              }
         of dt1
         { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
         :& @~ <Co:164> dt dt1
         }
         })

-- RHS size: {terms: 69,
              types: 1,637,
              coercions: 1,596,
              joins: 0/0}
mkARec :: Int -> ARec ElField Fields
mkARec
  = \ (i :: Int) ->
      break<81>(i)
      arec
        ($dNatToInt15 `cast` <Co:1478>)
        (break<80>(i)
         &:
           (break<49>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i)
           (break<79>(i)
            &:
              (break<50>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i)
              (break<78>(i)
               &:
                 (break<51>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i)
                 (break<77>(i)
                  &:
                    (break<52>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i)
                    (break<76>(i)
                     &:
                       (break<53>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i)
                       (break<75>(i)
                        &:
                          (break<54>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i)
                          (break<74>(i)
                           &:
                             (break<55>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i)
                             (break<73>(i)
                              &:
                                (break<56>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i)
                                (break<72>(i)
                                 &:
                                   (break<57>(i) $WField ($dKnownSymbol7 `cast` <Co:7>) i)
                                   (break<71>(i)
                                    &:
                                      (break<58>(i) $WField ($dKnownSymbol6 `cast` <Co:7>) i)
                                      (break<70>(i)
                                       &:
                                         (break<59>(i) $WField ($dKnownSymbol5 `cast` <Co:7>) i)
                                         (break<69>(i)
                                          &:
                                            (break<60>(i) $WField ($dKnownSymbol4 `cast` <Co:7>) i)
                                            (break<68>(i)
                                             &:
                                               (break<61>(i)
                                                $WField ($dKnownSymbol3 `cast` <Co:7>) i)
                                               (break<67>(i)
                                                &:
                                                  (break<62>(i)
                                                   $WField ($dKnownSymbol2 `cast` <Co:7>) i)
                                                  (break<66>(i)
                                                   &:
                                                     (break<63>(i)
                                                      $WField ($dKnownSymbol1 `cast` <Co:7>) i)
                                                     (break<65>()
                                                      &:
                                                        (break<64>()
                                                         Field
                                                           @~ <Co:6>
                                                           ($dKnownSymbol `cast` <Co:7>)
                                                           (I# 99#))
                                                        arnil))))))))))))))))

-- RHS size: {terms: 4, types: 499, coercions: 339, joins: 0/0}
$dRecElem
  :: RecElem
       ARec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaARectt'::S
      ($d~130 `cast` <Co:339>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 361, coercions: 528, joins: 0/0}
$dRecElem1
  :: RecElem
       ARec ("a2" ::: Int) ("a2" ::: Int) Fields Fields ('S ('S 'Z))
$dRecElem1
  = $fRecElemaARectt'::S
      ($d~131 `cast` <Co:528>) $dNatToInt $dRecElem

-- RHS size: {terms: 4, types: 466, coercions: 317, joins: 0/0}
$dRecElem2
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem2
  = $fRecElemaARectt'::S
      ($d~126 `cast` <Co:317>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 339, coercions: 495, joins: 0/0}
$dRecElem3
  :: RecElem
       ARec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem3
  = $fRecElemaARectt'::S
      ($d~127 `cast` <Co:495>) $dNatToInt $dRecElem2

-- RHS size: {terms: 4, types: 362, coercions: 684, joins: 0/0}
$dRecElem4
  :: RecElem
       ARec ("a3" ::: Int) ("a3" ::: Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem4
  = $fRecElemaARectt'::S
      ($d~128 `cast` <Co:684>) $dNatToInt1 $dRecElem3

-- RHS size: {terms: 4, types: 433, coercions: 295, joins: 0/0}
$dRecElem5
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem5
  = $fRecElemaARectt'::S
      ($d~121 `cast` <Co:295>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 317, coercions: 462, joins: 0/0}
$dRecElem6
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem6
  = $fRecElemaARectt'::S
      ($d~122 `cast` <Co:462>) $dNatToInt $dRecElem5

-- RHS size: {terms: 4, types: 340, coercions: 640, joins: 0/0}
$dRecElem7
  :: RecElem
       ARec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem7
  = $fRecElemaARectt'::S
      ($d~123 `cast` <Co:640>) $dNatToInt1 $dRecElem6

-- RHS size: {terms: 4, types: 363, coercions: 829, joins: 0/0}
$dRecElem8
  :: RecElem
       ARec
       ("a4" ::: Int)
       ("a4" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S 'Z))))
$dRecElem8
  = $fRecElemaARectt'::S
      ($d~124 `cast` <Co:829>) $dNatToInt2 $dRecElem7

-- RHS size: {terms: 4, types: 400, coercions: 273, joins: 0/0}
$dRecElem9
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem9
  = $fRecElemaARectt'::S
      ($d~115 `cast` <Co:273>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 295, coercions: 429, joins: 0/0}
$dRecElem10
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem10
  = $fRecElemaARectt'::S
      ($d~116 `cast` <Co:429>) $dNatToInt $dRecElem9

-- RHS size: {terms: 4, types: 318, coercions: 596, joins: 0/0}
$dRecElem11
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem11
  = $fRecElemaARectt'::S
      ($d~117 `cast` <Co:596>) $dNatToInt1 $dRecElem10

-- RHS size: {terms: 4, types: 341, coercions: 774, joins: 0/0}
$dRecElem12
  :: RecElem
       ARec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem12
  = $fRecElemaARectt'::S
      ($d~118 `cast` <Co:774>) $dNatToInt2 $dRecElem11

-- RHS size: {terms: 4, types: 364, coercions: 963, joins: 0/0}
$dRecElem13
  :: RecElem
       ARec
       ("a5" ::: Int)
       ("a5" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem13
  = $fRecElemaARectt'::S
      ($d~119 `cast` <Co:963>) $dNatToInt3 $dRecElem12

-- RHS size: {terms: 4, types: 367, coercions: 251, joins: 0/0}
$dRecElem14
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem14
  = $fRecElemaARectt'::S
      ($d~108 `cast` <Co:251>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 273, coercions: 396, joins: 0/0}
$dRecElem15
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem15
  = $fRecElemaARectt'::S
      ($d~109 `cast` <Co:396>) $dNatToInt $dRecElem14

-- RHS size: {terms: 4, types: 296, coercions: 552, joins: 0/0}
$dRecElem16
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem16
  = $fRecElemaARectt'::S
      ($d~110 `cast` <Co:552>) $dNatToInt1 $dRecElem15

-- RHS size: {terms: 4, types: 319, coercions: 719, joins: 0/0}
$dRecElem17
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem17
  = $fRecElemaARectt'::S
      ($d~111 `cast` <Co:719>) $dNatToInt2 $dRecElem16

-- RHS size: {terms: 4, types: 342, coercions: 897, joins: 0/0}
$dRecElem18
  :: RecElem
       ARec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem18
  = $fRecElemaARectt'::S
      ($d~112 `cast` <Co:897>) $dNatToInt3 $dRecElem17

-- RHS size: {terms: 4, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem19
  :: RecElem
       ARec
       ("a6" ::: Int)
       ("a6" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem19
  = $fRecElemaARectt'::S
      ($d~113 `cast` <Co:1086>) $dNatToInt4 $dRecElem18

-- RHS size: {terms: 4, types: 334, coercions: 229, joins: 0/0}
$dRecElem20
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem20
  = $fRecElemaARectt'::S
      ($d~100 `cast` <Co:229>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 251, coercions: 363, joins: 0/0}
$dRecElem21
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem21
  = $fRecElemaARectt'::S
      ($d~101 `cast` <Co:363>) $dNatToInt $dRecElem20

-- RHS size: {terms: 4, types: 274, coercions: 508, joins: 0/0}
$dRecElem22
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem22
  = $fRecElemaARectt'::S
      ($d~102 `cast` <Co:508>) $dNatToInt1 $dRecElem21

-- RHS size: {terms: 4, types: 297, coercions: 664, joins: 0/0}
$dRecElem23
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem23
  = $fRecElemaARectt'::S
      ($d~103 `cast` <Co:664>) $dNatToInt2 $dRecElem22

-- RHS size: {terms: 4, types: 320, coercions: 831, joins: 0/0}
$dRecElem24
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem24
  = $fRecElemaARectt'::S
      ($d~104 `cast` <Co:831>) $dNatToInt3 $dRecElem23

-- RHS size: {terms: 4, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem25
  :: RecElem
       ARec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem25
  = $fRecElemaARectt'::S
      ($d~105 `cast` <Co:1009>) $dNatToInt4 $dRecElem24

-- RHS size: {terms: 4, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem26
  :: RecElem
       ARec
       ("a7" ::: Int)
       ("a7" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem26
  = $fRecElemaARectt'::S
      ($d~106 `cast` <Co:1198>) $dNatToInt5 $dRecElem25

-- RHS size: {terms: 4, types: 301, coercions: 207, joins: 0/0}
$dRecElem27
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem27
  = $fRecElemaARectt'::S
      ($d~91 `cast` <Co:207>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 229, coercions: 330, joins: 0/0}
$dRecElem28
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem28
  = $fRecElemaARectt'::S
      ($d~92 `cast` <Co:330>) $dNatToInt $dRecElem27

-- RHS size: {terms: 4, types: 252, coercions: 464, joins: 0/0}
$dRecElem29
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem29
  = $fRecElemaARectt'::S
      ($d~93 `cast` <Co:464>) $dNatToInt1 $dRecElem28

-- RHS size: {terms: 4, types: 275, coercions: 609, joins: 0/0}
$dRecElem30
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem30
  = $fRecElemaARectt'::S
      ($d~94 `cast` <Co:609>) $dNatToInt2 $dRecElem29

-- RHS size: {terms: 4, types: 298, coercions: 765, joins: 0/0}
$dRecElem31
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem31
  = $fRecElemaARectt'::S
      ($d~95 `cast` <Co:765>) $dNatToInt3 $dRecElem30

-- RHS size: {terms: 4, types: 321, coercions: 932, joins: 0/0}
$dRecElem32
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem32
  = $fRecElemaARectt'::S
      ($d~96 `cast` <Co:932>) $dNatToInt4 $dRecElem31

-- RHS size: {terms: 4, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem33
  :: RecElem
       ARec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem33
  = $fRecElemaARectt'::S
      ($d~97 `cast` <Co:1110>) $dNatToInt5 $dRecElem32

-- RHS size: {terms: 4, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem34
  :: RecElem
       ARec
       ("a8" ::: Int)
       ("a8" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem34
  = $fRecElemaARectt'::S
      ($d~98 `cast` <Co:1299>) $dNatToInt6 $dRecElem33

-- RHS size: {terms: 4, types: 268, coercions: 185, joins: 0/0}
$dRecElem35
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem35
  = $fRecElemaARectt'::S
      ($d~81 `cast` <Co:185>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 207, coercions: 297, joins: 0/0}
$dRecElem36
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem36
  = $fRecElemaARectt'::S
      ($d~82 `cast` <Co:297>) $dNatToInt $dRecElem35

-- RHS size: {terms: 4, types: 230, coercions: 420, joins: 0/0}
$dRecElem37
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem37
  = $fRecElemaARectt'::S
      ($d~83 `cast` <Co:420>) $dNatToInt1 $dRecElem36

-- RHS size: {terms: 4, types: 253, coercions: 554, joins: 0/0}
$dRecElem38
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem38
  = $fRecElemaARectt'::S
      ($d~84 `cast` <Co:554>) $dNatToInt2 $dRecElem37

-- RHS size: {terms: 4, types: 276, coercions: 699, joins: 0/0}
$dRecElem39
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem39
  = $fRecElemaARectt'::S
      ($d~85 `cast` <Co:699>) $dNatToInt3 $dRecElem38

-- RHS size: {terms: 4, types: 299, coercions: 855, joins: 0/0}
$dRecElem40
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem40
  = $fRecElemaARectt'::S
      ($d~86 `cast` <Co:855>) $dNatToInt4 $dRecElem39

-- RHS size: {terms: 4, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem41
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem41
  = $fRecElemaARectt'::S
      ($d~87 `cast` <Co:1022>) $dNatToInt5 $dRecElem40

-- RHS size: {terms: 4, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem42
  :: RecElem
       ARec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem42
  = $fRecElemaARectt'::S
      ($d~88 `cast` <Co:1200>) $dNatToInt6 $dRecElem41

-- RHS size: {terms: 4, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem43
  :: RecElem
       ARec
       ("a9" ::: Int)
       ("a9" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem43
  = $fRecElemaARectt'::S
      ($d~89 `cast` <Co:1389>) $dNatToInt7 $dRecElem42

-- RHS size: {terms: 4, types: 235, coercions: 163, joins: 0/0}
$dRecElem44
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem44
  = $fRecElemaARectt'::S
      ($d~70 `cast` <Co:163>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 185, coercions: 264, joins: 0/0}
$dRecElem45
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem45
  = $fRecElemaARectt'::S
      ($d~71 `cast` <Co:264>) $dNatToInt $dRecElem44

-- RHS size: {terms: 4, types: 208, coercions: 376, joins: 0/0}
$dRecElem46
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem46
  = $fRecElemaARectt'::S
      ($d~72 `cast` <Co:376>) $dNatToInt1 $dRecElem45

-- RHS size: {terms: 4, types: 231, coercions: 499, joins: 0/0}
$dRecElem47
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem47
  = $fRecElemaARectt'::S
      ($d~73 `cast` <Co:499>) $dNatToInt2 $dRecElem46

-- RHS size: {terms: 4, types: 254, coercions: 633, joins: 0/0}
$dRecElem48
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem48
  = $fRecElemaARectt'::S
      ($d~74 `cast` <Co:633>) $dNatToInt3 $dRecElem47

-- RHS size: {terms: 4, types: 277, coercions: 778, joins: 0/0}
$dRecElem49
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem49
  = $fRecElemaARectt'::S
      ($d~75 `cast` <Co:778>) $dNatToInt4 $dRecElem48

-- RHS size: {terms: 4, types: 300, coercions: 934, joins: 0/0}
$dRecElem50
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem50
  = $fRecElemaARectt'::S
      ($d~76 `cast` <Co:934>) $dNatToInt5 $dRecElem49

-- RHS size: {terms: 4, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem51
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem51
  = $fRecElemaARectt'::S
      ($d~77 `cast` <Co:1101>) $dNatToInt6 $dRecElem50

-- RHS size: {terms: 4, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem52
  :: RecElem
       ARec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem52
  = $fRecElemaARectt'::S
      ($d~78 `cast` <Co:1279>) $dNatToInt7 $dRecElem51

-- RHS size: {terms: 4, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem53
  :: RecElem
       ARec
       ("a10" ::: Int)
       ("a10" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem53
  = $fRecElemaARectt'::S
      ($d~79 `cast` <Co:1468>) $dNatToInt8 $dRecElem52

-- RHS size: {terms: 4, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaARectt'::S
      ($d~58 `cast` <Co:141>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaARectt'::S
      ($d~59 `cast` <Co:231>) $dNatToInt $dRecElem54

-- RHS size: {terms: 4, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaARectt'::S
      ($d~60 `cast` <Co:332>) $dNatToInt1 $dRecElem55

-- RHS size: {terms: 4, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaARectt'::S
      ($d~61 `cast` <Co:444>) $dNatToInt2 $dRecElem56

-- RHS size: {terms: 4, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaARectt'::S
      ($d~62 `cast` <Co:567>) $dNatToInt3 $dRecElem57

-- RHS size: {terms: 4, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaARectt'::S
      ($d~63 `cast` <Co:701>) $dNatToInt4 $dRecElem58

-- RHS size: {terms: 4, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaARectt'::S
      ($d~64 `cast` <Co:846>) $dNatToInt5 $dRecElem59

-- RHS size: {terms: 4, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaARectt'::S
      ($d~65 `cast` <Co:1002>) $dNatToInt6 $dRecElem60

-- RHS size: {terms: 4, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaARectt'::S
      ($d~66 `cast` <Co:1169>) $dNatToInt7 $dRecElem61

-- RHS size: {terms: 4, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       ARec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaARectt'::S
      ($d~67 `cast` <Co:1347>) $dNatToInt8 $dRecElem62

-- RHS size: {terms: 4, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       ARec
       ("a11" ::: Int)
       ("a11" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaARectt'::S
      ($d~68 `cast` <Co:1536>) $dNatToInt9 $dRecElem63

-- RHS size: {terms: 4, types: 169, coercions: 119, joins: 0/0}
$dRecElem65
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaARectt'::S
      ($d~45 `cast` <Co:119>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 141, coercions: 198, joins: 0/0}
$dRecElem66
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaARectt'::S
      ($d~46 `cast` <Co:198>) $dNatToInt $dRecElem65

-- RHS size: {terms: 4, types: 164, coercions: 288, joins: 0/0}
$dRecElem67
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaARectt'::S
      ($d~47 `cast` <Co:288>) $dNatToInt1 $dRecElem66

-- RHS size: {terms: 4, types: 187, coercions: 389, joins: 0/0}
$dRecElem68
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaARectt'::S
      ($d~48 `cast` <Co:389>) $dNatToInt2 $dRecElem67

-- RHS size: {terms: 4, types: 210, coercions: 501, joins: 0/0}
$dRecElem69
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaARectt'::S
      ($d~49 `cast` <Co:501>) $dNatToInt3 $dRecElem68

-- RHS size: {terms: 4, types: 233, coercions: 624, joins: 0/0}
$dRecElem70
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaARectt'::S
      ($d~50 `cast` <Co:624>) $dNatToInt4 $dRecElem69

-- RHS size: {terms: 4, types: 256, coercions: 758, joins: 0/0}
$dRecElem71
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaARectt'::S
      ($d~51 `cast` <Co:758>) $dNatToInt5 $dRecElem70

-- RHS size: {terms: 4, types: 279, coercions: 903, joins: 0/0}
$dRecElem72
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaARectt'::S
      ($d~52 `cast` <Co:903>) $dNatToInt6 $dRecElem71

-- RHS size: {terms: 4, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem73
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaARectt'::S
      ($d~53 `cast` <Co:1059>) $dNatToInt7 $dRecElem72

-- RHS size: {terms: 4, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem74
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaARectt'::S
      ($d~54 `cast` <Co:1226>) $dNatToInt8 $dRecElem73

-- RHS size: {terms: 4, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem75
  :: RecElem
       ARec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem75
  = $fRecElemaARectt'::S
      ($d~55 `cast` <Co:1404>) $dNatToInt9 $dRecElem74

-- RHS size: {terms: 4, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem76
  :: RecElem
       ARec
       ("a12" ::: Int)
       ("a12" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem76
  = $fRecElemaARectt'::S
      ($d~56 `cast` <Co:1593>) $dNatToInt10 $dRecElem75

-- RHS size: {terms: 4, types: 136, coercions: 97, joins: 0/0}
$dRecElem77
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem77
  = $fRecElemaARectt'::S
      ($d~31 `cast` <Co:97>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 119, coercions: 165, joins: 0/0}
$dRecElem78
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem78
  = $fRecElemaARectt'::S
      ($d~32 `cast` <Co:165>) $dNatToInt $dRecElem77

-- RHS size: {terms: 4, types: 142, coercions: 244, joins: 0/0}
$dRecElem79
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem79
  = $fRecElemaARectt'::S
      ($d~33 `cast` <Co:244>) $dNatToInt1 $dRecElem78

-- RHS size: {terms: 4, types: 165, coercions: 334, joins: 0/0}
$dRecElem80
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem80
  = $fRecElemaARectt'::S
      ($d~34 `cast` <Co:334>) $dNatToInt2 $dRecElem79

-- RHS size: {terms: 4, types: 188, coercions: 435, joins: 0/0}
$dRecElem81
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem81
  = $fRecElemaARectt'::S
      ($d~35 `cast` <Co:435>) $dNatToInt3 $dRecElem80

-- RHS size: {terms: 4, types: 211, coercions: 547, joins: 0/0}
$dRecElem82
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem82
  = $fRecElemaARectt'::S
      ($d~36 `cast` <Co:547>) $dNatToInt4 $dRecElem81

-- RHS size: {terms: 4, types: 234, coercions: 670, joins: 0/0}
$dRecElem83
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem83
  = $fRecElemaARectt'::S
      ($d~37 `cast` <Co:670>) $dNatToInt5 $dRecElem82

-- RHS size: {terms: 4, types: 257, coercions: 804, joins: 0/0}
$dRecElem84
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem84
  = $fRecElemaARectt'::S
      ($d~38 `cast` <Co:804>) $dNatToInt6 $dRecElem83

-- RHS size: {terms: 4, types: 280, coercions: 949, joins: 0/0}
$dRecElem85
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem85
  = $fRecElemaARectt'::S
      ($d~39 `cast` <Co:949>) $dNatToInt7 $dRecElem84

-- RHS size: {terms: 4, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem86
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem86
  = $fRecElemaARectt'::S
      ($d~40 `cast` <Co:1105>) $dNatToInt8 $dRecElem85

-- RHS size: {terms: 4, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem87
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem87
  = $fRecElemaARectt'::S
      ($d~41 `cast` <Co:1272>) $dNatToInt9 $dRecElem86

-- RHS size: {terms: 4, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem88
  :: RecElem
       ARec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem88
  = $fRecElemaARectt'::S
      ($d~42 `cast` <Co:1450>) $dNatToInt10 $dRecElem87

-- RHS size: {terms: 4, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem89
  :: RecElem
       ARec
       ("a13" ::: Int)
       ("a13" ::: Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem89
  = $fRecElemaARectt'::S
      ($d~43 `cast` <Co:1639>) $dNatToInt11 $dRecElem88

-- RHS size: {terms: 4, types: 103, coercions: 75, joins: 0/0}
$dRecElem90
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem90
  = $fRecElemaARectt'::S
      ($d~16 `cast` <Co:75>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 97, coercions: 132, joins: 0/0}
$dRecElem91
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem91
  = $fRecElemaARectt'::S
      ($d~17 `cast` <Co:132>) $dNatToInt $dRecElem90

-- RHS size: {terms: 4, types: 120, coercions: 200, joins: 0/0}
$dRecElem92
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem92
  = $fRecElemaARectt'::S
      ($d~18 `cast` <Co:200>) $dNatToInt1 $dRecElem91

-- RHS size: {terms: 4, types: 143, coercions: 279, joins: 0/0}
$dRecElem93
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem93
  = $fRecElemaARectt'::S
      ($d~19 `cast` <Co:279>) $dNatToInt2 $dRecElem92

-- RHS size: {terms: 4, types: 166, coercions: 369, joins: 0/0}
$dRecElem94
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem94
  = $fRecElemaARectt'::S
      ($d~20 `cast` <Co:369>) $dNatToInt3 $dRecElem93

-- RHS size: {terms: 4, types: 189, coercions: 470, joins: 0/0}
$dRecElem95
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem95
  = $fRecElemaARectt'::S
      ($d~21 `cast` <Co:470>) $dNatToInt4 $dRecElem94

-- RHS size: {terms: 4, types: 212, coercions: 582, joins: 0/0}
$dRecElem96
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem96
  = $fRecElemaARectt'::S
      ($d~22 `cast` <Co:582>) $dNatToInt5 $dRecElem95

-- RHS size: {terms: 4, types: 235, coercions: 705, joins: 0/0}
$dRecElem97
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem97
  = $fRecElemaARectt'::S
      ($d~23 `cast` <Co:705>) $dNatToInt6 $dRecElem96

-- RHS size: {terms: 4, types: 258, coercions: 839, joins: 0/0}
$dRecElem98
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem98
  = $fRecElemaARectt'::S
      ($d~24 `cast` <Co:839>) $dNatToInt7 $dRecElem97

-- RHS size: {terms: 4, types: 281, coercions: 984, joins: 0/0}
$dRecElem99
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem99
  = $fRecElemaARectt'::S
      ($d~25 `cast` <Co:984>) $dNatToInt8 $dRecElem98

-- RHS size: {terms: 4, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem100
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem100
  = $fRecElemaARectt'::S
      ($d~26 `cast` <Co:1140>) $dNatToInt9 $dRecElem99

-- RHS size: {terms: 4, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem101
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem101
  = $fRecElemaARectt'::S
      ($d~27 `cast` <Co:1307>) $dNatToInt10 $dRecElem100

-- RHS size: {terms: 4, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem102
  :: RecElem
       ARec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem102
  = $fRecElemaARectt'::S
      ($d~28 `cast` <Co:1485>) $dNatToInt11 $dRecElem101

-- RHS size: {terms: 4, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem103
  :: RecElem
       ARec
       ("a14" ::: Int)
       ("a14" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem103
  = $fRecElemaARectt'::S
      ($d~29 `cast` <Co:1674>) $dNatToInt12 $dRecElem102

-- RHS size: {terms: 4, types: 70, coercions: 53, joins: 0/0}
$dRecElem104
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem104
  = $fRecElemaARectt'::S
      ($d~ `cast` <Co:53>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 4, types: 75, coercions: 99, joins: 0/0}
$dRecElem105
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem105
  = $fRecElemaARectt'::S
      ($d~1 `cast` <Co:99>) $dNatToInt $dRecElem104

-- RHS size: {terms: 4, types: 98, coercions: 156, joins: 0/0}
$dRecElem106
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem106
  = $fRecElemaARectt'::S
      ($d~2 `cast` <Co:156>) $dNatToInt1 $dRecElem105

-- RHS size: {terms: 4, types: 121, coercions: 224, joins: 0/0}
$dRecElem107
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem107
  = $fRecElemaARectt'::S
      ($d~3 `cast` <Co:224>) $dNatToInt2 $dRecElem106

-- RHS size: {terms: 4, types: 144, coercions: 303, joins: 0/0}
$dRecElem108
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem108
  = $fRecElemaARectt'::S
      ($d~4 `cast` <Co:303>) $dNatToInt3 $dRecElem107

-- RHS size: {terms: 4, types: 167, coercions: 393, joins: 0/0}
$dRecElem109
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem109
  = $fRecElemaARectt'::S
      ($d~5 `cast` <Co:393>) $dNatToInt4 $dRecElem108

-- RHS size: {terms: 4, types: 190, coercions: 494, joins: 0/0}
$dRecElem110
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem110
  = $fRecElemaARectt'::S
      ($d~6 `cast` <Co:494>) $dNatToInt5 $dRecElem109

-- RHS size: {terms: 4, types: 213, coercions: 606, joins: 0/0}
$dRecElem111
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem111
  = $fRecElemaARectt'::S
      ($d~7 `cast` <Co:606>) $dNatToInt6 $dRecElem110

-- RHS size: {terms: 4, types: 236, coercions: 729, joins: 0/0}
$dRecElem112
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem112
  = $fRecElemaARectt'::S
      ($d~8 `cast` <Co:729>) $dNatToInt7 $dRecElem111

-- RHS size: {terms: 4, types: 259, coercions: 863, joins: 0/0}
$dRecElem113
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem113
  = $fRecElemaARectt'::S
      ($d~9 `cast` <Co:863>) $dNatToInt8 $dRecElem112

-- RHS size: {terms: 4, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem114
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem114
  = $fRecElemaARectt'::S
      ($d~10 `cast` <Co:1008>) $dNatToInt9 $dRecElem113

-- RHS size: {terms: 4, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem115
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem115
  = $fRecElemaARectt'::S
      ($d~11 `cast` <Co:1164>) $dNatToInt10 $dRecElem114

-- RHS size: {terms: 4, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem116
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem116
  = $fRecElemaARectt'::S
      ($d~12 `cast` <Co:1331>) $dNatToInt11 $dRecElem115

-- RHS size: {terms: 4, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem117
  :: RecElem
       ARec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem117
  = $fRecElemaARectt'::S
      ($d~13 `cast` <Co:1509>) $dNatToInt12 $dRecElem116

-- RHS size: {terms: 4, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem118
  :: RecElem
       ARec
       ("a15" ::: Int)
       ("a15" ::: Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem118
  = $fRecElemaARectt'::S
      ($d~14 `cast` <Co:1698>) $dNatToInt13 $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~133 :: 'S 'Z ~ 'S 'Z
$d~133 = Eq# @~ <Co:2>

-- RHS size: {terms: 4, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem ARec ("a1" ::: Int) ("a1" ::: Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaARectt'::S
      ($d~133 `cast` <Co:361>) $fNatToIntZ $fRecElemaARectt'::Z

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~134 :: "a1" ~ "a1"
$d~134 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel14 :: IsLabel "a1" (Label "a1")
$dIsLabel14 = $fIsLabelsLabel $d~134

-- RHS size: {terms: 1, types: 3, coercions: 1, joins: 0/0}
$d~135 :: "a0" ~ "a0"
$d~135 = Eq# @~ <Co:1>

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dIsLabel15 :: IsLabel "a0" (Label "a0")
$dIsLabel15 = $fIsLabelsLabel $d~135

-- RHS size: {terms: 277,
              types: 3,562,
              coercions: 86,162,
              joins: 0/52}
sumARec :: ARec ElField Fields -> Int
sumARec
  = \ (str :: ARec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (l :: Symbol) (us :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem
                record
                (l ::: FieldType l us)
                (l ::: FieldType l us)
                us
                us
                (RIndex (l ::: FieldType l us) us)) =>
             Label l -> record ElField us -> FieldType l us
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (l :: Symbol))
              (@ (us :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem
                      record
                      (l ::: FieldType l us)
                      (l ::: FieldType l us)
                      us
                      us
                      (RIndex (l ::: FieldType l us) us))
              (eta :: Label l)
              (eta1 :: record ElField us) ->
              let {
                $d~136 :: FieldType l us ~ FieldType l us
                $d~136 = Eq# @~ <Co:5> } in
              let {
                $d~137 :: FieldType l us ~ FieldType l us
                $d~137 = Eq# @~ <Co:5> } in
              let {
                $d(%,,%)
                  :: (RecElem
                        record
                        (l ::: FieldType l us)
                        (l ::: FieldType l us)
                        us
                        us
                        (RIndex (l ::: FieldType l us) us),
                      FieldType l us ~ FieldType l us, FieldType l us ~ FieldType l us)
                $d(%,,%) = ($dRecElem120, $d~137, $d~136) } in
              break<0>(eta1,eta) rvalf $d(%,,%) irred eta eta1 } in
      break<15>(str,get)
      + $fNumInt
        (break<14>(str,get)
         + $fNumInt
           (break<13>(str,get)
            + $fNumInt
              (break<12>(str,get)
               + $fNumInt
                 (break<11>(str,get)
                  + $fNumInt
                    (break<10>(str,get)
                     + $fNumInt
                       (break<9>(str,get)
                        + $fNumInt
                          (break<8>(str,get)
                           + $fNumInt
                             (break<7>(str,get)
                              + $fNumInt
                                (break<6>(str,get)
                                 + $fNumInt
                                   (break<5>(str,get)
                                    + $fNumInt
                                      (break<4>(str,get)
                                       + $fNumInt
                                         (break<3>(str,get)
                                          + $fNumInt
                                            (break<2>(str,get)
                                             + $fNumInt
                                               (break<1>(str,get)
                                                + $fNumInt
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a0" Fields
                                                          ~ FieldType "a0" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             ("a0" ::: FieldType "a0" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a0" ::: FieldType "a0" Fields)
                                                                Fields),
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields,
                                                           FieldType "a0" Fields
                                                           ~ FieldType "a0" Fields)
                                                     $d(%,,%)
                                                       = ($fRecElemaARectt'::Z `cast` <Co:744>,
                                                          $d~137, $d~136) } in
                                                   (break<0>(str,$dIsLabel15)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel15 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:177>)
                                                  (let {
                                                     $d~136
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~136 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d~137
                                                       :: FieldType "a1" Fields
                                                          ~ FieldType "a1" Fields
                                                     $d~137 = Eq# @~ <Co:5> } in
                                                   let {
                                                     $d(%,,%)
                                                       :: (RecElem
                                                             ARec
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             ("a1" ::: FieldType "a1" Fields)
                                                             Fields
                                                             Fields
                                                             (RIndex
                                                                ("a1" ::: FieldType "a1" Fields)
                                                                Fields),
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields,
                                                           FieldType "a1" Fields
                                                           ~ FieldType "a1" Fields)
                                                     $d(%,,%)
                                                       = ($dRecElem119 `cast` <Co:1425>, $d~137,
                                                          $d~136) } in
                                                   (break<0>(str,$dIsLabel14)
                                                    rvalf
                                                      $d(%,,%)
                                                      (C:(%%) `cast` <Co:7>)
                                                      ($dIsLabel14 `cast` <Co:4>)
                                                      str)
                                                   `cast` <Co:345>))
                                               (let {
                                                  $d~136
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~136 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d~137
                                                    :: FieldType "a2" Fields ~ FieldType "a2" Fields
                                                  $d~137 = Eq# @~ <Co:5> } in
                                                let {
                                                  $d(%,,%)
                                                    :: (RecElem
                                                          ARec
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          ("a2" ::: FieldType "a2" Fields)
                                                          Fields
                                                          Fields
                                                          (RIndex
                                                             ("a2" ::: FieldType "a2" Fields)
                                                             Fields),
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields,
                                                        FieldType "a2" Fields
                                                        ~ FieldType "a2" Fields)
                                                  $d(%,,%)
                                                    = ($dRecElem1 `cast` <Co:2062>, $d~137,
                                                       $d~136) } in
                                                (break<0>(str,$dIsLabel13)
                                                 rvalf
                                                   $d(%,,%)
                                                   (C:(%%) `cast` <Co:7>)
                                                   ($dIsLabel13 `cast` <Co:4>)
                                                   str)
                                                `cast` <Co:502>))
                                            (let {
                                               $d~136
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~136 = Eq# @~ <Co:5> } in
                                             let {
                                               $d~137
                                                 :: FieldType "a3" Fields ~ FieldType "a3" Fields
                                               $d~137 = Eq# @~ <Co:5> } in
                                             let {
                                               $d(%,,%)
                                                 :: (RecElem
                                                       ARec
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       ("a3" ::: FieldType "a3" Fields)
                                                       Fields
                                                       Fields
                                                       (RIndex
                                                          ("a3" ::: FieldType "a3" Fields) Fields),
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields,
                                                     FieldType "a3" Fields ~ FieldType "a3" Fields)
                                               $d(%,,%)
                                                 = ($dRecElem4 `cast` <Co:2655>, $d~137,
                                                    $d~136) } in
                                             (break<0>(str,$dIsLabel12)
                                              rvalf
                                                $d(%,,%)
                                                (C:(%%) `cast` <Co:7>)
                                                ($dIsLabel12 `cast` <Co:4>)
                                                str)
                                             `cast` <Co:648>))
                                         (let {
                                            $d~136 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~136 = Eq# @~ <Co:5> } in
                                          let {
                                            $d~137 :: FieldType "a4" Fields ~ FieldType "a4" Fields
                                            $d~137 = Eq# @~ <Co:5> } in
                                          let {
                                            $d(%,,%)
                                              :: (RecElem
                                                    ARec
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    ("a4" ::: FieldType "a4" Fields)
                                                    Fields
                                                    Fields
                                                    (RIndex
                                                       ("a4" ::: FieldType "a4" Fields) Fields),
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields,
                                                  FieldType "a4" Fields ~ FieldType "a4" Fields)
                                            $d(%,,%)
                                              = ($dRecElem8 `cast` <Co:3204>, $d~137, $d~136) } in
                                          (break<0>(str,$dIsLabel11)
                                           rvalf
                                             $d(%,,%)
                                             (C:(%%) `cast` <Co:7>)
                                             ($dIsLabel11 `cast` <Co:4>)
                                             str)
                                          `cast` <Co:783>))
                                      (let {
                                         $d~136 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~136 = Eq# @~ <Co:5> } in
                                       let {
                                         $d~137 :: FieldType "a5" Fields ~ FieldType "a5" Fields
                                         $d~137 = Eq# @~ <Co:5> } in
                                       let {
                                         $d(%,,%)
                                           :: (RecElem
                                                 ARec
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 ("a5" ::: FieldType "a5" Fields)
                                                 Fields
                                                 Fields
                                                 (RIndex ("a5" ::: FieldType "a5" Fields) Fields),
                                               FieldType "a5" Fields ~ FieldType "a5" Fields,
                                               FieldType "a5" Fields ~ FieldType "a5" Fields)
                                         $d(%,,%)
                                           = ($dRecElem13 `cast` <Co:3709>, $d~137, $d~136) } in
                                       (break<0>(str,$dIsLabel10)
                                        rvalf
                                          $d(%,,%)
                                          (C:(%%) `cast` <Co:7>)
                                          ($dIsLabel10 `cast` <Co:4>)
                                          str)
                                       `cast` <Co:907>))
                                   (let {
                                      $d~136 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~136 = Eq# @~ <Co:5> } in
                                    let {
                                      $d~137 :: FieldType "a6" Fields ~ FieldType "a6" Fields
                                      $d~137 = Eq# @~ <Co:5> } in
                                    let {
                                      $d(%,,%)
                                        :: (RecElem
                                              ARec
                                              ("a6" ::: FieldType "a6" Fields)
                                              ("a6" ::: FieldType "a6" Fields)
                                              Fields
                                              Fields
                                              (RIndex ("a6" ::: FieldType "a6" Fields) Fields),
                                            FieldType "a6" Fields ~ FieldType "a6" Fields,
                                            FieldType "a6" Fields ~ FieldType "a6" Fields)
                                      $d(%,,%) = ($dRecElem19 `cast` <Co:4170>, $d~137, $d~136) } in
                                    (break<0>(str,$dIsLabel9)
                                     rvalf
                                       $d(%,,%)
                                       (C:(%%) `cast` <Co:7>)
                                       ($dIsLabel9 `cast` <Co:4>)
                                       str)
                                    `cast` <Co:1020>))
                                (let {
                                   $d~136 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~136 = Eq# @~ <Co:5> } in
                                 let {
                                   $d~137 :: FieldType "a7" Fields ~ FieldType "a7" Fields
                                   $d~137 = Eq# @~ <Co:5> } in
                                 let {
                                   $d(%,,%)
                                     :: (RecElem
                                           ARec
                                           ("a7" ::: FieldType "a7" Fields)
                                           ("a7" ::: FieldType "a7" Fields)
                                           Fields
                                           Fields
                                           (RIndex ("a7" ::: FieldType "a7" Fields) Fields),
                                         FieldType "a7" Fields ~ FieldType "a7" Fields,
                                         FieldType "a7" Fields ~ FieldType "a7" Fields)
                                   $d(%,,%) = ($dRecElem26 `cast` <Co:4587>, $d~137, $d~136) } in
                                 (break<0>(str,$dIsLabel8)
                                  rvalf
                                    $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel8 `cast` <Co:4>) str)
                                 `cast` <Co:1122>))
                             (let {
                                $d~136 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~136 = Eq# @~ <Co:5> } in
                              let {
                                $d~137 :: FieldType "a8" Fields ~ FieldType "a8" Fields
                                $d~137 = Eq# @~ <Co:5> } in
                              let {
                                $d(%,,%)
                                  :: (RecElem
                                        ARec
                                        ("a8" ::: FieldType "a8" Fields)
                                        ("a8" ::: FieldType "a8" Fields)
                                        Fields
                                        Fields
                                        (RIndex ("a8" ::: FieldType "a8" Fields) Fields),
                                      FieldType "a8" Fields ~ FieldType "a8" Fields,
                                      FieldType "a8" Fields ~ FieldType "a8" Fields)
                                $d(%,,%) = ($dRecElem34 `cast` <Co:4960>, $d~137, $d~136) } in
                              (break<0>(str,$dIsLabel7)
                               rvalf
                                 $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel7 `cast` <Co:4>) str)
                              `cast` <Co:1213>))
                          (let {
                             $d~136 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~136 = Eq# @~ <Co:5> } in
                           let {
                             $d~137 :: FieldType "a9" Fields ~ FieldType "a9" Fields
                             $d~137 = Eq# @~ <Co:5> } in
                           let {
                             $d(%,,%)
                               :: (RecElem
                                     ARec
                                     ("a9" ::: FieldType "a9" Fields)
                                     ("a9" ::: FieldType "a9" Fields)
                                     Fields
                                     Fields
                                     (RIndex ("a9" ::: FieldType "a9" Fields) Fields),
                                   FieldType "a9" Fields ~ FieldType "a9" Fields,
                                   FieldType "a9" Fields ~ FieldType "a9" Fields)
                             $d(%,,%) = ($dRecElem43 `cast` <Co:5289>, $d~137, $d~136) } in
                           (break<0>(str,$dIsLabel6)
                            rvalf
                              $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel6 `cast` <Co:4>) str)
                           `cast` <Co:1293>))
                       (let {
                          $d~136 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~136 = Eq# @~ <Co:5> } in
                        let {
                          $d~137 :: FieldType "a10" Fields ~ FieldType "a10" Fields
                          $d~137 = Eq# @~ <Co:5> } in
                        let {
                          $d(%,,%)
                            :: (RecElem
                                  ARec
                                  ("a10" ::: FieldType "a10" Fields)
                                  ("a10" ::: FieldType "a10" Fields)
                                  Fields
                                  Fields
                                  (RIndex ("a10" ::: FieldType "a10" Fields) Fields),
                                FieldType "a10" Fields ~ FieldType "a10" Fields,
                                FieldType "a10" Fields ~ FieldType "a10" Fields)
                          $d(%,,%) = ($dRecElem53 `cast` <Co:5574>, $d~137, $d~136) } in
                        (break<0>(str,$dIsLabel5)
                         rvalf
                           $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel5 `cast` <Co:4>) str)
                        `cast` <Co:1362>))
                    (let {
                       $d~136 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~136 = Eq# @~ <Co:5> } in
                     let {
                       $d~137 :: FieldType "a11" Fields ~ FieldType "a11" Fields
                       $d~137 = Eq# @~ <Co:5> } in
                     let {
                       $d(%,,%)
                         :: (RecElem
                               ARec
                               ("a11" ::: FieldType "a11" Fields)
                               ("a11" ::: FieldType "a11" Fields)
                               Fields
                               Fields
                               (RIndex ("a11" ::: FieldType "a11" Fields) Fields),
                             FieldType "a11" Fields ~ FieldType "a11" Fields,
                             FieldType "a11" Fields ~ FieldType "a11" Fields)
                       $d(%,,%) = ($dRecElem64 `cast` <Co:5815>, $d~137, $d~136) } in
                     (break<0>(str,$dIsLabel4)
                      rvalf
                        $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel4 `cast` <Co:4>) str)
                     `cast` <Co:1420>))
                 (let {
                    $d~136 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~136 = Eq# @~ <Co:5> } in
                  let {
                    $d~137 :: FieldType "a12" Fields ~ FieldType "a12" Fields
                    $d~137 = Eq# @~ <Co:5> } in
                  let {
                    $d(%,,%)
                      :: (RecElem
                            ARec
                            ("a12" ::: FieldType "a12" Fields)
                            ("a12" ::: FieldType "a12" Fields)
                            Fields
                            Fields
                            (RIndex ("a12" ::: FieldType "a12" Fields) Fields),
                          FieldType "a12" Fields ~ FieldType "a12" Fields,
                          FieldType "a12" Fields ~ FieldType "a12" Fields)
                    $d(%,,%) = ($dRecElem76 `cast` <Co:6012>, $d~137, $d~136) } in
                  (break<0>(str,$dIsLabel3)
                   rvalf
                     $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel3 `cast` <Co:4>) str)
                  `cast` <Co:1467>))
              (let {
                 $d~136 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~136 = Eq# @~ <Co:5> } in
               let {
                 $d~137 :: FieldType "a13" Fields ~ FieldType "a13" Fields
                 $d~137 = Eq# @~ <Co:5> } in
               let {
                 $d(%,,%)
                   :: (RecElem
                         ARec
                         ("a13" ::: FieldType "a13" Fields)
                         ("a13" ::: FieldType "a13" Fields)
                         Fields
                         Fields
                         (RIndex ("a13" ::: FieldType "a13" Fields) Fields),
                       FieldType "a13" Fields ~ FieldType "a13" Fields,
                       FieldType "a13" Fields ~ FieldType "a13" Fields)
                 $d(%,,%) = ($dRecElem89 `cast` <Co:6165>, $d~137, $d~136) } in
               (break<0>(str,$dIsLabel2)
                rvalf
                  $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel2 `cast` <Co:4>) str)
               `cast` <Co:1503>))
           (let {
              $d~136 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~136 = Eq# @~ <Co:5> } in
            let {
              $d~137 :: FieldType "a14" Fields ~ FieldType "a14" Fields
              $d~137 = Eq# @~ <Co:5> } in
            let {
              $d(%,,%)
                :: (RecElem
                      ARec
                      ("a14" ::: FieldType "a14" Fields)
                      ("a14" ::: FieldType "a14" Fields)
                      Fields
                      Fields
                      (RIndex ("a14" ::: FieldType "a14" Fields) Fields),
                    FieldType "a14" Fields ~ FieldType "a14" Fields,
                    FieldType "a14" Fields ~ FieldType "a14" Fields)
              $d(%,,%) = ($dRecElem103 `cast` <Co:6274>, $d~137, $d~136) } in
            (break<0>(str,$dIsLabel1)
             rvalf
               $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel1 `cast` <Co:4>) str)
            `cast` <Co:1528>))
        (let {
           $d~136 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~136 = Eq# @~ <Co:5> } in
         let {
           $d~137 :: FieldType "a15" Fields ~ FieldType "a15" Fields
           $d~137 = Eq# @~ <Co:5> } in
         let {
           $d(%,,%)
             :: (RecElem
                   ARec
                   ("a15" ::: FieldType "a15" Fields)
                   ("a15" ::: FieldType "a15" Fields)
                   Fields
                   Fields
                   (RIndex ("a15" ::: FieldType "a15" Fields) Fields),
                 FieldType "a15" Fields ~ FieldType "a15" Fields,
                 FieldType "a15" Fields ~ FieldType "a15" Fields)
           $d(%,,%) = ($dRecElem118 `cast` <Co:6339>, $d~137, $d~136) } in
         (break<0>(str,$dIsLabel)
          rvalf
            $d(%,,%) (C:(%%) `cast` <Co:7>) ($dIsLabel `cast` <Co:4>) str)
         `cast` <Co:1542>)


