
==================== Tidy Core ====================
2021-05-14 17:30:34.367098235 UTC

Result size of Tidy Core
  = {terms: 1,137, types: 72,736, coercions: 105,334, joins: 0/18}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.Rec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 160,
              types: 6,484,
              coercions: 1,546,
              joins: 0/0}
mkRec :: Int -> Rec ElField Fields
mkRec
  = \ (i :: Int) ->
      break<64>(i)
      case break<33>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
      { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
      case break<63>(i)
           case break<34>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
           { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
           case break<62>(i)
                case break<35>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                case break<61>(i)
                     case break<36>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                     { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                     case break<60>(i)
                          case break<37>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                          { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                          case break<59>(i)
                               case break<38>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                               { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                               case break<58>(i)
                                    case break<39>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                    of dt6
                                    { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                    case break<57>(i)
                                         case break<40>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                         of dt7
                                         { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                         case break<56>(i)
                                              case break<41>(i)
                                                   $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                              of dt8
                                              { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                              case break<55>(i)
                                                   case break<42>(i)
                                                        $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                   of dt9
                                                   { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                   case break<54>(i)
                                                        case break<43>(i)
                                                             $WField
                                                               ($dKnownSymbol5 `cast` <Co:7>) i
                                                        of dt10
                                                        { Field @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                        case break<53>(i)
                                                             case break<44>(i)
                                                                  $WField
                                                                    ($dKnownSymbol4 `cast` <Co:7>) i
                                                             of dt11
                                                             { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                     ipv59 ->
                                                             case break<52>(i)
                                                                  case break<45>(i)
                                                                       $WField
                                                                         ($dKnownSymbol3
                                                                          `cast` <Co:7>)
                                                                         i
                                                                  of dt12
                                                                  { Field @ ipv60 @ ipv61 ipv62
                                                                          ipv63 ipv64 ->
                                                                  case break<51>(i)
                                                                       case break<46>(i)
                                                                            $WField
                                                                              ($dKnownSymbol2
                                                                               `cast` <Co:7>)
                                                                              i
                                                                       of dt13
                                                                       { Field @ ipv65 @ ipv66 ipv67
                                                                               ipv68 ipv69 ->
                                                                       case break<50>(i)
                                                                            case break<47>(i)
                                                                                 $WField
                                                                                   ($dKnownSymbol1
                                                                                    `cast` <Co:7>)
                                                                                   i
                                                                            of dt14
                                                                            { Field @ ipv70 @ ipv71
                                                                                    ipv72 ipv73
                                                                                    ipv74 ->
                                                                            case break<49>()
                                                                                 case break<48>()
                                                                                      Field
                                                                                        @~ <Co:6>
                                                                                        ($dKnownSymbol
                                                                                         `cast` <Co:7>)
                                                                                        (I# 99#)
                                                                                 of dt15
                                                                                 { Field @ ipv75
                                                                                         @ ipv76
                                                                                         ipv77 ipv78
                                                                                         ipv79 ->
                                                                                 :&
                                                                                   @~ <Co:14>
                                                                                   dt15
                                                                                   (RNil @~ <Co:4>)
                                                                                 }
                                                                            of dt15
                                                                            { :& @ ipv75 @ ipv76
                                                                                 ipv77 ipv78
                                                                                 ipv79 ->
                                                                            :& @~ <Co:24> dt14 dt15
                                                                            }
                                                                            }
                                                                       of dt14
                                                                       { :& @ ipv70 @ ipv71 ipv72
                                                                            ipv73 ipv74 ->
                                                                       :& @~ <Co:34> dt13 dt14
                                                                       }
                                                                       }
                                                                  of dt13
                                                                  { :& @ ipv65 @ ipv66 ipv67 ipv68
                                                                       ipv69 ->
                                                                  :& @~ <Co:44> dt12 dt13
                                                                  }
                                                                  }
                                                             of dt12
                                                             { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                  ipv64 ->
                                                             :& @~ <Co:54> dt11 dt12
                                                             }
                                                             }
                                                        of dt11
                                                        { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                        :& @~ <Co:64> dt10 dt11
                                                        }
                                                        }
                                                   of dt10
                                                   { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                   :& @~ <Co:74> dt9 dt10
                                                   }
                                                   }
                                              of dt9
                                              { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                              :& @~ <Co:84> dt8 dt9
                                              }
                                              }
                                         of dt8
                                         { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                         :& @~ <Co:94> dt7 dt8
                                         }
                                         }
                                    of dt7
                                    { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                    :& @~ <Co:104> dt6 dt7
                                    }
                                    }
                               of dt6
                               { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                               :& @~ <Co:114> dt5 dt6
                               }
                               }
                          of dt5
                          { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                          :& @~ <Co:124> dt4 dt5
                          }
                          }
                     of dt4
                     { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                     :& @~ <Co:134> dt3 dt4
                     }
                     }
                of dt3
                { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                :& @~ <Co:144> dt2 dt3
                }
                }
           of dt2
           { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
           :& @~ <Co:154> dt1 dt2
           }
           }
      of dt1
      { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
      :& @~ <Co:164> dt dt1
      }
      }

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 70, coercions: 53, joins: 0/0}
$dRecElem
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaRecrr'::S ($d~ `cast` <Co:53>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 75, coercions: 99, joins: 0/0}
$dRecElem1
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem1 = $fRecElemaRecrr'::S ($d~1 `cast` <Co:99>) $dRecElem

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 98, coercions: 156, joins: 0/0}
$dRecElem2
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem2 = $fRecElemaRecrr'::S ($d~2 `cast` <Co:156>) $dRecElem1

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 121, coercions: 224, joins: 0/0}
$dRecElem3
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem3 = $fRecElemaRecrr'::S ($d~3 `cast` <Co:224>) $dRecElem2

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 144, coercions: 303, joins: 0/0}
$dRecElem4
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem4 = $fRecElemaRecrr'::S ($d~4 `cast` <Co:303>) $dRecElem3

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 167, coercions: 393, joins: 0/0}
$dRecElem5
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem5 = $fRecElemaRecrr'::S ($d~5 `cast` <Co:393>) $dRecElem4

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 190, coercions: 494, joins: 0/0}
$dRecElem6
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem6 = $fRecElemaRecrr'::S ($d~6 `cast` <Co:494>) $dRecElem5

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 213, coercions: 606, joins: 0/0}
$dRecElem7
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem7 = $fRecElemaRecrr'::S ($d~7 `cast` <Co:606>) $dRecElem6

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 236, coercions: 729, joins: 0/0}
$dRecElem8
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem8 = $fRecElemaRecrr'::S ($d~8 `cast` <Co:729>) $dRecElem7

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 259, coercions: 863, joins: 0/0}
$dRecElem9
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem9 = $fRecElemaRecrr'::S ($d~9 `cast` <Co:863>) $dRecElem8

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem10
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem10
  = $fRecElemaRecrr'::S ($d~10 `cast` <Co:1008>) $dRecElem9

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem11
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem11
  = $fRecElemaRecrr'::S ($d~11 `cast` <Co:1164>) $dRecElem10

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem12
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem12
  = $fRecElemaRecrr'::S ($d~12 `cast` <Co:1331>) $dRecElem11

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem13
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem13
  = $fRecElemaRecrr'::S ($d~13 `cast` <Co:1509>) $dRecElem12

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 3, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem14
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem14
  = $fRecElemaRecrr'::S ($d~14 `cast` <Co:1698>) $dRecElem13

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~15 :: 'S 'Z ~ 'S 'Z
$d~15 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 103, coercions: 75, joins: 0/0}
$dRecElem15
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem15
  = $fRecElemaRecrr'::S ($d~15 `cast` <Co:75>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~16 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~16 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 97, coercions: 132, joins: 0/0}
$dRecElem16
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem16
  = $fRecElemaRecrr'::S ($d~16 `cast` <Co:132>) $dRecElem15

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~17 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~17 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 120, coercions: 200, joins: 0/0}
$dRecElem17
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem17
  = $fRecElemaRecrr'::S ($d~17 `cast` <Co:200>) $dRecElem16

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~18 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~18 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 143, coercions: 279, joins: 0/0}
$dRecElem18
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem18
  = $fRecElemaRecrr'::S ($d~18 `cast` <Co:279>) $dRecElem17

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~19 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~19 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 166, coercions: 369, joins: 0/0}
$dRecElem19
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem19
  = $fRecElemaRecrr'::S ($d~19 `cast` <Co:369>) $dRecElem18

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~20
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~20 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 189, coercions: 470, joins: 0/0}
$dRecElem20
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem20
  = $fRecElemaRecrr'::S ($d~20 `cast` <Co:470>) $dRecElem19

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~21 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 212, coercions: 582, joins: 0/0}
$dRecElem21
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem21
  = $fRecElemaRecrr'::S ($d~21 `cast` <Co:582>) $dRecElem20

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~22 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 235, coercions: 705, joins: 0/0}
$dRecElem22
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem22
  = $fRecElemaRecrr'::S ($d~22 `cast` <Co:705>) $dRecElem21

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~23 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 258, coercions: 839, joins: 0/0}
$dRecElem23
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem23
  = $fRecElemaRecrr'::S ($d~23 `cast` <Co:839>) $dRecElem22

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~24 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 281, coercions: 984, joins: 0/0}
$dRecElem24
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem24
  = $fRecElemaRecrr'::S ($d~24 `cast` <Co:984>) $dRecElem23

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~25 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem25
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem25
  = $fRecElemaRecrr'::S ($d~25 `cast` <Co:1140>) $dRecElem24

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~26 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem26
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem26
  = $fRecElemaRecrr'::S ($d~26 `cast` <Co:1307>) $dRecElem25

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~27
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~27 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem27
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem27
  = $fRecElemaRecrr'::S ($d~27 `cast` <Co:1485>) $dRecElem26

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~28 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem28
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem28
  = $fRecElemaRecrr'::S ($d~28 `cast` <Co:1674>) $dRecElem27

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~29 :: 'S 'Z ~ 'S 'Z
$d~29 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 136, coercions: 97, joins: 0/0}
$dRecElem29
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem29
  = $fRecElemaRecrr'::S ($d~29 `cast` <Co:97>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~30 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~30 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 119, coercions: 165, joins: 0/0}
$dRecElem30
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem30
  = $fRecElemaRecrr'::S ($d~30 `cast` <Co:165>) $dRecElem29

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~31 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~31 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 142, coercions: 244, joins: 0/0}
$dRecElem31
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem31
  = $fRecElemaRecrr'::S ($d~31 `cast` <Co:244>) $dRecElem30

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~32 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~32 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 165, coercions: 334, joins: 0/0}
$dRecElem32
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem32
  = $fRecElemaRecrr'::S ($d~32 `cast` <Co:334>) $dRecElem31

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~33 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~33 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 188, coercions: 435, joins: 0/0}
$dRecElem33
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem33
  = $fRecElemaRecrr'::S ($d~33 `cast` <Co:435>) $dRecElem32

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~34
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~34 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 211, coercions: 547, joins: 0/0}
$dRecElem34
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem34
  = $fRecElemaRecrr'::S ($d~34 `cast` <Co:547>) $dRecElem33

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~35
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~35 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 234, coercions: 670, joins: 0/0}
$dRecElem35
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem35
  = $fRecElemaRecrr'::S ($d~35 `cast` <Co:670>) $dRecElem34

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~36 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 257, coercions: 804, joins: 0/0}
$dRecElem36
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem36
  = $fRecElemaRecrr'::S ($d~36 `cast` <Co:804>) $dRecElem35

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~37 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 280, coercions: 949, joins: 0/0}
$dRecElem37
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem37
  = $fRecElemaRecrr'::S ($d~37 `cast` <Co:949>) $dRecElem36

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~38 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem38
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem38
  = $fRecElemaRecrr'::S ($d~38 `cast` <Co:1105>) $dRecElem37

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~39 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem39
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem39
  = $fRecElemaRecrr'::S ($d~39 `cast` <Co:1272>) $dRecElem38

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~40 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem40
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem40
  = $fRecElemaRecrr'::S ($d~40 `cast` <Co:1450>) $dRecElem39

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~41
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~41 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem41
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem41
  = $fRecElemaRecrr'::S ($d~41 `cast` <Co:1639>) $dRecElem40

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~42 :: 'S 'Z ~ 'S 'Z
$d~42 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 169, coercions: 119, joins: 0/0}
$dRecElem42
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem42
  = $fRecElemaRecrr'::S ($d~42 `cast` <Co:119>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~43 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~43 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 141, coercions: 198, joins: 0/0}
$dRecElem43
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem43
  = $fRecElemaRecrr'::S ($d~43 `cast` <Co:198>) $dRecElem42

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~44 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~44 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 164, coercions: 288, joins: 0/0}
$dRecElem44
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem44
  = $fRecElemaRecrr'::S ($d~44 `cast` <Co:288>) $dRecElem43

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~45 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~45 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 187, coercions: 389, joins: 0/0}
$dRecElem45
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem45
  = $fRecElemaRecrr'::S ($d~45 `cast` <Co:389>) $dRecElem44

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~46 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~46 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 210, coercions: 501, joins: 0/0}
$dRecElem46
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem46
  = $fRecElemaRecrr'::S ($d~46 `cast` <Co:501>) $dRecElem45

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~47
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~47 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 233, coercions: 624, joins: 0/0}
$dRecElem47
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem47
  = $fRecElemaRecrr'::S ($d~47 `cast` <Co:624>) $dRecElem46

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~48
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~48 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 256, coercions: 758, joins: 0/0}
$dRecElem48
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem48
  = $fRecElemaRecrr'::S ($d~48 `cast` <Co:758>) $dRecElem47

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~49
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~49 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 279, coercions: 903, joins: 0/0}
$dRecElem49
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem49
  = $fRecElemaRecrr'::S ($d~49 `cast` <Co:903>) $dRecElem48

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~50 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem50
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem50
  = $fRecElemaRecrr'::S ($d~50 `cast` <Co:1059>) $dRecElem49

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~51 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem51
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem51
  = $fRecElemaRecrr'::S ($d~51 `cast` <Co:1226>) $dRecElem50

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~52 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem52
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem52
  = $fRecElemaRecrr'::S ($d~52 `cast` <Co:1404>) $dRecElem51

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~53 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem53
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem53
  = $fRecElemaRecrr'::S ($d~53 `cast` <Co:1593>) $dRecElem52

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~54 :: 'S 'Z ~ 'S 'Z
$d~54 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaRecrr'::S ($d~54 `cast` <Co:141>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~55 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~55 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaRecrr'::S ($d~55 `cast` <Co:231>) $dRecElem54

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~56 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~56 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaRecrr'::S ($d~56 `cast` <Co:332>) $dRecElem55

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~57 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~57 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaRecrr'::S ($d~57 `cast` <Co:444>) $dRecElem56

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~58 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~58 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaRecrr'::S ($d~58 `cast` <Co:567>) $dRecElem57

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~59
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~59 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaRecrr'::S ($d~59 `cast` <Co:701>) $dRecElem58

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~60
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~60 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaRecrr'::S ($d~60 `cast` <Co:846>) $dRecElem59

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~61
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~61 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaRecrr'::S ($d~61 `cast` <Co:1002>) $dRecElem60

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~62
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~62 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaRecrr'::S ($d~62 `cast` <Co:1169>) $dRecElem61

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~63 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaRecrr'::S ($d~63 `cast` <Co:1347>) $dRecElem62

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~64 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaRecrr'::S ($d~64 `cast` <Co:1536>) $dRecElem63

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~65 :: 'S 'Z ~ 'S 'Z
$d~65 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 235, coercions: 163, joins: 0/0}
$dRecElem65
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaRecrr'::S ($d~65 `cast` <Co:163>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~66 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~66 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 185, coercions: 264, joins: 0/0}
$dRecElem66
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaRecrr'::S ($d~66 `cast` <Co:264>) $dRecElem65

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~67 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~67 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 208, coercions: 376, joins: 0/0}
$dRecElem67
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaRecrr'::S ($d~67 `cast` <Co:376>) $dRecElem66

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~68 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~68 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 231, coercions: 499, joins: 0/0}
$dRecElem68
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaRecrr'::S ($d~68 `cast` <Co:499>) $dRecElem67

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~69 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~69 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 254, coercions: 633, joins: 0/0}
$dRecElem69
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaRecrr'::S ($d~69 `cast` <Co:633>) $dRecElem68

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~70
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~70 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 277, coercions: 778, joins: 0/0}
$dRecElem70
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaRecrr'::S ($d~70 `cast` <Co:778>) $dRecElem69

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~71
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~71 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 300, coercions: 934, joins: 0/0}
$dRecElem71
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaRecrr'::S ($d~71 `cast` <Co:934>) $dRecElem70

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~72
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~72 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem72
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaRecrr'::S ($d~72 `cast` <Co:1101>) $dRecElem71

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~73
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~73 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem73
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaRecrr'::S ($d~73 `cast` <Co:1279>) $dRecElem72

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~74
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~74 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem74
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaRecrr'::S ($d~74 `cast` <Co:1468>) $dRecElem73

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~75 :: 'S 'Z ~ 'S 'Z
$d~75 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 268, coercions: 185, joins: 0/0}
$dRecElem75
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem75
  = $fRecElemaRecrr'::S ($d~75 `cast` <Co:185>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~76 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~76 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 207, coercions: 297, joins: 0/0}
$dRecElem76
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem76
  = $fRecElemaRecrr'::S ($d~76 `cast` <Co:297>) $dRecElem75

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~77 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~77 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 230, coercions: 420, joins: 0/0}
$dRecElem77
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem77
  = $fRecElemaRecrr'::S ($d~77 `cast` <Co:420>) $dRecElem76

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~78 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~78 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 253, coercions: 554, joins: 0/0}
$dRecElem78
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem78
  = $fRecElemaRecrr'::S ($d~78 `cast` <Co:554>) $dRecElem77

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~79 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~79 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 276, coercions: 699, joins: 0/0}
$dRecElem79
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem79
  = $fRecElemaRecrr'::S ($d~79 `cast` <Co:699>) $dRecElem78

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~80
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~80 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 299, coercions: 855, joins: 0/0}
$dRecElem80
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem80
  = $fRecElemaRecrr'::S ($d~80 `cast` <Co:855>) $dRecElem79

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~81
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~81 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem81
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem81
  = $fRecElemaRecrr'::S ($d~81 `cast` <Co:1022>) $dRecElem80

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~82
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~82 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem82
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem82
  = $fRecElemaRecrr'::S ($d~82 `cast` <Co:1200>) $dRecElem81

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~83
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~83 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem83
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem83
  = $fRecElemaRecrr'::S ($d~83 `cast` <Co:1389>) $dRecElem82

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~84 :: 'S 'Z ~ 'S 'Z
$d~84 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 301, coercions: 207, joins: 0/0}
$dRecElem84
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem84
  = $fRecElemaRecrr'::S ($d~84 `cast` <Co:207>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~85 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~85 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 229, coercions: 330, joins: 0/0}
$dRecElem85
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem85
  = $fRecElemaRecrr'::S ($d~85 `cast` <Co:330>) $dRecElem84

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~86 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~86 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 252, coercions: 464, joins: 0/0}
$dRecElem86
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem86
  = $fRecElemaRecrr'::S ($d~86 `cast` <Co:464>) $dRecElem85

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~87 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~87 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 275, coercions: 609, joins: 0/0}
$dRecElem87
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem87
  = $fRecElemaRecrr'::S ($d~87 `cast` <Co:609>) $dRecElem86

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~88 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~88 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 298, coercions: 765, joins: 0/0}
$dRecElem88
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem88
  = $fRecElemaRecrr'::S ($d~88 `cast` <Co:765>) $dRecElem87

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~89 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 321, coercions: 932, joins: 0/0}
$dRecElem89
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem89
  = $fRecElemaRecrr'::S ($d~89 `cast` <Co:932>) $dRecElem88

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~90
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~90 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem90
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem90
  = $fRecElemaRecrr'::S ($d~90 `cast` <Co:1110>) $dRecElem89

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~91
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~91 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem91
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem91
  = $fRecElemaRecrr'::S ($d~91 `cast` <Co:1299>) $dRecElem90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~92 :: 'S 'Z ~ 'S 'Z
$d~92 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 334, coercions: 229, joins: 0/0}
$dRecElem92
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem92
  = $fRecElemaRecrr'::S ($d~92 `cast` <Co:229>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~93 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~93 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 251, coercions: 363, joins: 0/0}
$dRecElem93
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem93
  = $fRecElemaRecrr'::S ($d~93 `cast` <Co:363>) $dRecElem92

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~94 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~94 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 274, coercions: 508, joins: 0/0}
$dRecElem94
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem94
  = $fRecElemaRecrr'::S ($d~94 `cast` <Co:508>) $dRecElem93

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~95 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~95 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 297, coercions: 664, joins: 0/0}
$dRecElem95
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem95
  = $fRecElemaRecrr'::S ($d~95 `cast` <Co:664>) $dRecElem94

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~96 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~96 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 320, coercions: 831, joins: 0/0}
$dRecElem96
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem96
  = $fRecElemaRecrr'::S ($d~96 `cast` <Co:831>) $dRecElem95

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~97 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem97
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem97
  = $fRecElemaRecrr'::S ($d~97 `cast` <Co:1009>) $dRecElem96

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~98 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem98
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem98
  = $fRecElemaRecrr'::S ($d~98 `cast` <Co:1198>) $dRecElem97

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~99 :: 'S 'Z ~ 'S 'Z
$d~99 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 367, coercions: 251, joins: 0/0}
$dRecElem99
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem99
  = $fRecElemaRecrr'::S ($d~99 `cast` <Co:251>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~100 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~100 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 273, coercions: 396, joins: 0/0}
$dRecElem100
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem100
  = $fRecElemaRecrr'::S ($d~100 `cast` <Co:396>) $dRecElem99

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~101 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~101 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 296, coercions: 552, joins: 0/0}
$dRecElem101
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem101
  = $fRecElemaRecrr'::S ($d~101 `cast` <Co:552>) $dRecElem100

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~102 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~102 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 319, coercions: 719, joins: 0/0}
$dRecElem102
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem102
  = $fRecElemaRecrr'::S ($d~102 `cast` <Co:719>) $dRecElem101

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~103 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~103 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 342, coercions: 897, joins: 0/0}
$dRecElem103
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem103
  = $fRecElemaRecrr'::S ($d~103 `cast` <Co:897>) $dRecElem102

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~104
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~104 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem104
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem104
  = $fRecElemaRecrr'::S ($d~104 `cast` <Co:1086>) $dRecElem103

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~105 :: 'S 'Z ~ 'S 'Z
$d~105 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 400, coercions: 273, joins: 0/0}
$dRecElem105
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem105
  = $fRecElemaRecrr'::S ($d~105 `cast` <Co:273>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~106 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~106 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 295, coercions: 429, joins: 0/0}
$dRecElem106
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem106
  = $fRecElemaRecrr'::S ($d~106 `cast` <Co:429>) $dRecElem105

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~107 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~107 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 318, coercions: 596, joins: 0/0}
$dRecElem107
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem107
  = $fRecElemaRecrr'::S ($d~107 `cast` <Co:596>) $dRecElem106

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~108 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~108 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 341, coercions: 774, joins: 0/0}
$dRecElem108
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem108
  = $fRecElemaRecrr'::S ($d~108 `cast` <Co:774>) $dRecElem107

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~109 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~109 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 364, coercions: 963, joins: 0/0}
$dRecElem109
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem109
  = $fRecElemaRecrr'::S ($d~109 `cast` <Co:963>) $dRecElem108

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~110 :: 'S 'Z ~ 'S 'Z
$d~110 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 433, coercions: 295, joins: 0/0}
$dRecElem110
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem110
  = $fRecElemaRecrr'::S ($d~110 `cast` <Co:295>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~111 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~111 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 317, coercions: 462, joins: 0/0}
$dRecElem111
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem111
  = $fRecElemaRecrr'::S ($d~111 `cast` <Co:462>) $dRecElem110

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~112 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~112 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 340, coercions: 640, joins: 0/0}
$dRecElem112
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem112
  = $fRecElemaRecrr'::S ($d~112 `cast` <Co:640>) $dRecElem111

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~113 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~113 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 363, coercions: 829, joins: 0/0}
$dRecElem113
  :: RecElem
       Rec '("a4", Int) '("a4", Int) Fields Fields ('S ('S ('S ('S 'Z))))
$dRecElem113
  = $fRecElemaRecrr'::S ($d~113 `cast` <Co:829>) $dRecElem112

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~114 :: 'S 'Z ~ 'S 'Z
$d~114 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 466, coercions: 317, joins: 0/0}
$dRecElem114
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem114
  = $fRecElemaRecrr'::S ($d~114 `cast` <Co:317>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~115 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~115 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 339, coercions: 495, joins: 0/0}
$dRecElem115
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem115
  = $fRecElemaRecrr'::S ($d~115 `cast` <Co:495>) $dRecElem114

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~116 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~116 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 362, coercions: 684, joins: 0/0}
$dRecElem116
  :: RecElem
       Rec '("a3", Int) '("a3", Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem116
  = $fRecElemaRecrr'::S ($d~116 `cast` <Co:684>) $dRecElem115

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~117 :: 'S 'Z ~ 'S 'Z
$d~117 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 499, coercions: 339, joins: 0/0}
$dRecElem117
  :: RecElem
       Rec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem117
  = $fRecElemaRecrr'::S ($d~117 `cast` <Co:339>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~118 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~118 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 361, coercions: 528, joins: 0/0}
$dRecElem118
  :: RecElem Rec '("a2", Int) '("a2", Int) Fields Fields ('S ('S 'Z))
$dRecElem118
  = $fRecElemaRecrr'::S ($d~118 `cast` <Co:528>) $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~119 :: 'S 'Z ~ 'S 'Z
$d~119 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem Rec '("a1", Int) '("a1", Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaRecrr'::S ($d~119 `cast` <Co:361>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 193,
              types: 1,096,
              coercions: 18,508,
              joins: 0/18}
sumRec :: Rec ElField Fields -> Int
sumRec
  = \ (str :: Rec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (s :: Symbol) p (rs :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs)) =>
             Label s -> record ElField rs -> p
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (s :: Symbol))
              (@ p)
              (@ (rs :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs))
              _
              (eta1 :: record ElField rs) ->
              let {
                v :: p
                v = case break<0>(eta1) rget $dRecElem120 irred eta1 of
                    { Field @ s1 @ t co $dKnownSymbol16 ds ->
                    ds `cast` <Co:4>
                    } } in
              break<1>(v) v } in
      break<32>(str,get)
      + $fNumInt
        (break<30>(str,get)
         + $fNumInt
           (break<28>(str,get)
            + $fNumInt
              (break<26>(str,get)
               + $fNumInt
                 (break<24>(str,get)
                  + $fNumInt
                    (break<22>(str,get)
                     + $fNumInt
                       (break<20>(str,get)
                        + $fNumInt
                          (break<18>(str,get)
                           + $fNumInt
                             (break<16>(str,get)
                              + $fNumInt
                                (break<14>(str,get)
                                 + $fNumInt
                                   (break<12>(str,get)
                                    + $fNumInt
                                      (break<10>(str,get)
                                       + $fNumInt
                                         (break<8>(str,get)
                                          + $fNumInt
                                            (break<6>(str,get)
                                             + $fNumInt
                                               (break<4>(str,get)
                                                + $fNumInt
                                                  (break<2>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($fRecElemaRecrr'::Z
                                                                 `cast` <Co:203>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v)
                                                  (break<3>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($dRecElem119 `cast` <Co:380>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v))
                                               (break<5>(str,get)
                                                let {
                                                  v :: Int
                                                  v = case break<0>(str)
                                                           rget
                                                             ($dRecElem118 `cast` <Co:546>)
                                                             (C:(%%) `cast` <Co:7>)
                                                             str
                                                      of
                                                      { Field @ s @ t co $dKnownSymbol16 ds ->
                                                      ds `cast` <Co:4>
                                                      } } in
                                                break<1>(v) v))
                                            (break<7>(str,get)
                                             let {
                                               v :: Int
                                               v = case break<0>(str)
                                                        rget
                                                          ($dRecElem116 `cast` <Co:701>)
                                                          (C:(%%) `cast` <Co:7>)
                                                          str
                                                   of
                                                   { Field @ s @ t co $dKnownSymbol16 ds ->
                                                   ds `cast` <Co:4>
                                                   } } in
                                             break<1>(v) v))
                                         (break<9>(str,get)
                                          let {
                                            v :: Int
                                            v = case break<0>(str)
                                                     rget
                                                       ($dRecElem113 `cast` <Co:845>)
                                                       (C:(%%) `cast` <Co:7>)
                                                       str
                                                of
                                                { Field @ s @ t co $dKnownSymbol16 ds ->
                                                ds `cast` <Co:4>
                                                } } in
                                          break<1>(v) v))
                                      (break<11>(str,get)
                                       let {
                                         v :: Int
                                         v = case break<0>(str)
                                                  rget
                                                    ($dRecElem109 `cast` <Co:978>)
                                                    (C:(%%) `cast` <Co:7>)
                                                    str
                                             of
                                             { Field @ s @ t co $dKnownSymbol16 ds ->
                                             ds `cast` <Co:4>
                                             } } in
                                       break<1>(v) v))
                                   (break<13>(str,get)
                                    let {
                                      v :: Int
                                      v = case break<0>(str)
                                               rget
                                                 ($dRecElem104 `cast` <Co:1100>)
                                                 (C:(%%) `cast` <Co:7>)
                                                 str
                                          of
                                          { Field @ s @ t co $dKnownSymbol16 ds ->
                                          ds `cast` <Co:4>
                                          } } in
                                    break<1>(v) v))
                                (break<15>(str,get)
                                 let {
                                   v :: Int
                                   v = case break<0>(str)
                                            rget
                                              ($dRecElem98 `cast` <Co:1211>)
                                              (C:(%%) `cast` <Co:7>)
                                              str
                                       of
                                       { Field @ s @ t co $dKnownSymbol16 ds ->
                                       ds `cast` <Co:4>
                                       } } in
                                 break<1>(v) v))
                             (break<17>(str,get)
                              let {
                                v :: Int
                                v = case break<0>(str)
                                         rget
                                           ($dRecElem91 `cast` <Co:1311>) (C:(%%) `cast` <Co:7>) str
                                    of
                                    { Field @ s @ t co $dKnownSymbol16 ds ->
                                    ds `cast` <Co:4>
                                    } } in
                              break<1>(v) v))
                          (break<19>(str,get)
                           let {
                             v :: Int
                             v = case break<0>(str)
                                      rget ($dRecElem83 `cast` <Co:1400>) (C:(%%) `cast` <Co:7>) str
                                 of
                                 { Field @ s @ t co $dKnownSymbol16 ds ->
                                 ds `cast` <Co:4>
                                 } } in
                           break<1>(v) v))
                       (break<21>(str,get)
                        let {
                          v :: Int
                          v = case break<0>(str)
                                   rget ($dRecElem74 `cast` <Co:1478>) (C:(%%) `cast` <Co:7>) str
                              of
                              { Field @ s @ t co $dKnownSymbol16 ds ->
                              ds `cast` <Co:4>
                              } } in
                        break<1>(v) v))
                    (break<23>(str,get)
                     let {
                       v :: Int
                       v = case break<0>(str)
                                rget ($dRecElem64 `cast` <Co:1545>) (C:(%%) `cast` <Co:7>) str
                           of
                           { Field @ s @ t co $dKnownSymbol16 ds ->
                           ds `cast` <Co:4>
                           } } in
                     break<1>(v) v))
                 (break<25>(str,get)
                  let {
                    v :: Int
                    v = case break<0>(str)
                             rget ($dRecElem53 `cast` <Co:1601>) (C:(%%) `cast` <Co:7>) str
                        of
                        { Field @ s @ t co $dKnownSymbol16 ds ->
                        ds `cast` <Co:4>
                        } } in
                  break<1>(v) v))
              (break<27>(str,get)
               let {
                 v :: Int
                 v = case break<0>(str)
                          rget ($dRecElem41 `cast` <Co:1646>) (C:(%%) `cast` <Co:7>) str
                     of
                     { Field @ s @ t co $dKnownSymbol16 ds ->
                     ds `cast` <Co:4>
                     } } in
               break<1>(v) v))
           (break<29>(str,get)
            let {
              v :: Int
              v = case break<0>(str)
                       rget ($dRecElem28 `cast` <Co:1680>) (C:(%%) `cast` <Co:7>) str
                  of
                  { Field @ s @ t co $dKnownSymbol16 ds ->
                  ds `cast` <Co:4>
                  } } in
            break<1>(v) v))
        (break<31>(str,get)
         let {
           v :: Int
           v = case break<0>(str)
                    rget ($dRecElem14 `cast` <Co:1703>) (C:(%%) `cast` <Co:7>) str
               of
               { Field @ s @ t co $dKnownSymbol16 ds ->
               ds `cast` <Co:4>
               } } in
         break<1>(v) v)



==================== Tidy Core ====================
2021-05-14 17:30:35.983588427 UTC

Result size of Tidy Core
  = {terms: 1,137, types: 72,736, coercions: 105,334, joins: 0/18}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.Rec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 160,
              types: 6,484,
              coercions: 1,546,
              joins: 0/0}
mkRec :: Int -> Rec ElField Fields
mkRec
  = \ (i :: Int) ->
      break<64>(i)
      case break<33>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
      { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
      case break<63>(i)
           case break<34>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
           { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
           case break<62>(i)
                case break<35>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                case break<61>(i)
                     case break<36>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                     { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                     case break<60>(i)
                          case break<37>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                          { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                          case break<59>(i)
                               case break<38>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                               { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                               case break<58>(i)
                                    case break<39>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                    of dt6
                                    { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                    case break<57>(i)
                                         case break<40>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                         of dt7
                                         { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                         case break<56>(i)
                                              case break<41>(i)
                                                   $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                              of dt8
                                              { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                              case break<55>(i)
                                                   case break<42>(i)
                                                        $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                   of dt9
                                                   { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                   case break<54>(i)
                                                        case break<43>(i)
                                                             $WField
                                                               ($dKnownSymbol5 `cast` <Co:7>) i
                                                        of dt10
                                                        { Field @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                        case break<53>(i)
                                                             case break<44>(i)
                                                                  $WField
                                                                    ($dKnownSymbol4 `cast` <Co:7>) i
                                                             of dt11
                                                             { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                     ipv59 ->
                                                             case break<52>(i)
                                                                  case break<45>(i)
                                                                       $WField
                                                                         ($dKnownSymbol3
                                                                          `cast` <Co:7>)
                                                                         i
                                                                  of dt12
                                                                  { Field @ ipv60 @ ipv61 ipv62
                                                                          ipv63 ipv64 ->
                                                                  case break<51>(i)
                                                                       case break<46>(i)
                                                                            $WField
                                                                              ($dKnownSymbol2
                                                                               `cast` <Co:7>)
                                                                              i
                                                                       of dt13
                                                                       { Field @ ipv65 @ ipv66 ipv67
                                                                               ipv68 ipv69 ->
                                                                       case break<50>(i)
                                                                            case break<47>(i)
                                                                                 $WField
                                                                                   ($dKnownSymbol1
                                                                                    `cast` <Co:7>)
                                                                                   i
                                                                            of dt14
                                                                            { Field @ ipv70 @ ipv71
                                                                                    ipv72 ipv73
                                                                                    ipv74 ->
                                                                            case break<49>()
                                                                                 case break<48>()
                                                                                      Field
                                                                                        @~ <Co:6>
                                                                                        ($dKnownSymbol
                                                                                         `cast` <Co:7>)
                                                                                        (I# 99#)
                                                                                 of dt15
                                                                                 { Field @ ipv75
                                                                                         @ ipv76
                                                                                         ipv77 ipv78
                                                                                         ipv79 ->
                                                                                 :&
                                                                                   @~ <Co:14>
                                                                                   dt15
                                                                                   (RNil @~ <Co:4>)
                                                                                 }
                                                                            of dt15
                                                                            { :& @ ipv75 @ ipv76
                                                                                 ipv77 ipv78
                                                                                 ipv79 ->
                                                                            :& @~ <Co:24> dt14 dt15
                                                                            }
                                                                            }
                                                                       of dt14
                                                                       { :& @ ipv70 @ ipv71 ipv72
                                                                            ipv73 ipv74 ->
                                                                       :& @~ <Co:34> dt13 dt14
                                                                       }
                                                                       }
                                                                  of dt13
                                                                  { :& @ ipv65 @ ipv66 ipv67 ipv68
                                                                       ipv69 ->
                                                                  :& @~ <Co:44> dt12 dt13
                                                                  }
                                                                  }
                                                             of dt12
                                                             { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                  ipv64 ->
                                                             :& @~ <Co:54> dt11 dt12
                                                             }
                                                             }
                                                        of dt11
                                                        { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                        :& @~ <Co:64> dt10 dt11
                                                        }
                                                        }
                                                   of dt10
                                                   { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                   :& @~ <Co:74> dt9 dt10
                                                   }
                                                   }
                                              of dt9
                                              { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                              :& @~ <Co:84> dt8 dt9
                                              }
                                              }
                                         of dt8
                                         { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                         :& @~ <Co:94> dt7 dt8
                                         }
                                         }
                                    of dt7
                                    { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                    :& @~ <Co:104> dt6 dt7
                                    }
                                    }
                               of dt6
                               { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                               :& @~ <Co:114> dt5 dt6
                               }
                               }
                          of dt5
                          { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                          :& @~ <Co:124> dt4 dt5
                          }
                          }
                     of dt4
                     { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                     :& @~ <Co:134> dt3 dt4
                     }
                     }
                of dt3
                { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                :& @~ <Co:144> dt2 dt3
                }
                }
           of dt2
           { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
           :& @~ <Co:154> dt1 dt2
           }
           }
      of dt1
      { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
      :& @~ <Co:164> dt dt1
      }
      }

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 70, coercions: 53, joins: 0/0}
$dRecElem
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaRecrr'::S ($d~ `cast` <Co:53>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 75, coercions: 99, joins: 0/0}
$dRecElem1
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem1 = $fRecElemaRecrr'::S ($d~1 `cast` <Co:99>) $dRecElem

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 98, coercions: 156, joins: 0/0}
$dRecElem2
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem2 = $fRecElemaRecrr'::S ($d~2 `cast` <Co:156>) $dRecElem1

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 121, coercions: 224, joins: 0/0}
$dRecElem3
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem3 = $fRecElemaRecrr'::S ($d~3 `cast` <Co:224>) $dRecElem2

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 144, coercions: 303, joins: 0/0}
$dRecElem4
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem4 = $fRecElemaRecrr'::S ($d~4 `cast` <Co:303>) $dRecElem3

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 167, coercions: 393, joins: 0/0}
$dRecElem5
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem5 = $fRecElemaRecrr'::S ($d~5 `cast` <Co:393>) $dRecElem4

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 190, coercions: 494, joins: 0/0}
$dRecElem6
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem6 = $fRecElemaRecrr'::S ($d~6 `cast` <Co:494>) $dRecElem5

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 213, coercions: 606, joins: 0/0}
$dRecElem7
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem7 = $fRecElemaRecrr'::S ($d~7 `cast` <Co:606>) $dRecElem6

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 236, coercions: 729, joins: 0/0}
$dRecElem8
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem8 = $fRecElemaRecrr'::S ($d~8 `cast` <Co:729>) $dRecElem7

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 259, coercions: 863, joins: 0/0}
$dRecElem9
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem9 = $fRecElemaRecrr'::S ($d~9 `cast` <Co:863>) $dRecElem8

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem10
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem10
  = $fRecElemaRecrr'::S ($d~10 `cast` <Co:1008>) $dRecElem9

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem11
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem11
  = $fRecElemaRecrr'::S ($d~11 `cast` <Co:1164>) $dRecElem10

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem12
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem12
  = $fRecElemaRecrr'::S ($d~12 `cast` <Co:1331>) $dRecElem11

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem13
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem13
  = $fRecElemaRecrr'::S ($d~13 `cast` <Co:1509>) $dRecElem12

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 3, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem14
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem14
  = $fRecElemaRecrr'::S ($d~14 `cast` <Co:1698>) $dRecElem13

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~15 :: 'S 'Z ~ 'S 'Z
$d~15 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 103, coercions: 75, joins: 0/0}
$dRecElem15
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem15
  = $fRecElemaRecrr'::S ($d~15 `cast` <Co:75>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~16 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~16 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 97, coercions: 132, joins: 0/0}
$dRecElem16
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem16
  = $fRecElemaRecrr'::S ($d~16 `cast` <Co:132>) $dRecElem15

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~17 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~17 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 120, coercions: 200, joins: 0/0}
$dRecElem17
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem17
  = $fRecElemaRecrr'::S ($d~17 `cast` <Co:200>) $dRecElem16

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~18 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~18 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 143, coercions: 279, joins: 0/0}
$dRecElem18
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem18
  = $fRecElemaRecrr'::S ($d~18 `cast` <Co:279>) $dRecElem17

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~19 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~19 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 166, coercions: 369, joins: 0/0}
$dRecElem19
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem19
  = $fRecElemaRecrr'::S ($d~19 `cast` <Co:369>) $dRecElem18

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~20
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~20 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 189, coercions: 470, joins: 0/0}
$dRecElem20
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem20
  = $fRecElemaRecrr'::S ($d~20 `cast` <Co:470>) $dRecElem19

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~21 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 212, coercions: 582, joins: 0/0}
$dRecElem21
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem21
  = $fRecElemaRecrr'::S ($d~21 `cast` <Co:582>) $dRecElem20

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~22 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 235, coercions: 705, joins: 0/0}
$dRecElem22
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem22
  = $fRecElemaRecrr'::S ($d~22 `cast` <Co:705>) $dRecElem21

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~23 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 258, coercions: 839, joins: 0/0}
$dRecElem23
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem23
  = $fRecElemaRecrr'::S ($d~23 `cast` <Co:839>) $dRecElem22

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~24 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 281, coercions: 984, joins: 0/0}
$dRecElem24
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem24
  = $fRecElemaRecrr'::S ($d~24 `cast` <Co:984>) $dRecElem23

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~25 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem25
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem25
  = $fRecElemaRecrr'::S ($d~25 `cast` <Co:1140>) $dRecElem24

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~26 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem26
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem26
  = $fRecElemaRecrr'::S ($d~26 `cast` <Co:1307>) $dRecElem25

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~27
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~27 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem27
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem27
  = $fRecElemaRecrr'::S ($d~27 `cast` <Co:1485>) $dRecElem26

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~28 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem28
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem28
  = $fRecElemaRecrr'::S ($d~28 `cast` <Co:1674>) $dRecElem27

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~29 :: 'S 'Z ~ 'S 'Z
$d~29 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 136, coercions: 97, joins: 0/0}
$dRecElem29
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem29
  = $fRecElemaRecrr'::S ($d~29 `cast` <Co:97>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~30 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~30 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 119, coercions: 165, joins: 0/0}
$dRecElem30
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem30
  = $fRecElemaRecrr'::S ($d~30 `cast` <Co:165>) $dRecElem29

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~31 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~31 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 142, coercions: 244, joins: 0/0}
$dRecElem31
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem31
  = $fRecElemaRecrr'::S ($d~31 `cast` <Co:244>) $dRecElem30

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~32 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~32 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 165, coercions: 334, joins: 0/0}
$dRecElem32
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem32
  = $fRecElemaRecrr'::S ($d~32 `cast` <Co:334>) $dRecElem31

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~33 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~33 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 188, coercions: 435, joins: 0/0}
$dRecElem33
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem33
  = $fRecElemaRecrr'::S ($d~33 `cast` <Co:435>) $dRecElem32

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~34
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~34 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 211, coercions: 547, joins: 0/0}
$dRecElem34
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem34
  = $fRecElemaRecrr'::S ($d~34 `cast` <Co:547>) $dRecElem33

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~35
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~35 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 234, coercions: 670, joins: 0/0}
$dRecElem35
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem35
  = $fRecElemaRecrr'::S ($d~35 `cast` <Co:670>) $dRecElem34

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~36 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 257, coercions: 804, joins: 0/0}
$dRecElem36
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem36
  = $fRecElemaRecrr'::S ($d~36 `cast` <Co:804>) $dRecElem35

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~37 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 280, coercions: 949, joins: 0/0}
$dRecElem37
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem37
  = $fRecElemaRecrr'::S ($d~37 `cast` <Co:949>) $dRecElem36

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~38 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem38
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem38
  = $fRecElemaRecrr'::S ($d~38 `cast` <Co:1105>) $dRecElem37

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~39 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem39
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem39
  = $fRecElemaRecrr'::S ($d~39 `cast` <Co:1272>) $dRecElem38

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~40 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem40
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem40
  = $fRecElemaRecrr'::S ($d~40 `cast` <Co:1450>) $dRecElem39

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~41
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~41 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem41
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem41
  = $fRecElemaRecrr'::S ($d~41 `cast` <Co:1639>) $dRecElem40

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~42 :: 'S 'Z ~ 'S 'Z
$d~42 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 169, coercions: 119, joins: 0/0}
$dRecElem42
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem42
  = $fRecElemaRecrr'::S ($d~42 `cast` <Co:119>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~43 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~43 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 141, coercions: 198, joins: 0/0}
$dRecElem43
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem43
  = $fRecElemaRecrr'::S ($d~43 `cast` <Co:198>) $dRecElem42

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~44 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~44 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 164, coercions: 288, joins: 0/0}
$dRecElem44
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem44
  = $fRecElemaRecrr'::S ($d~44 `cast` <Co:288>) $dRecElem43

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~45 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~45 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 187, coercions: 389, joins: 0/0}
$dRecElem45
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem45
  = $fRecElemaRecrr'::S ($d~45 `cast` <Co:389>) $dRecElem44

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~46 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~46 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 210, coercions: 501, joins: 0/0}
$dRecElem46
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem46
  = $fRecElemaRecrr'::S ($d~46 `cast` <Co:501>) $dRecElem45

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~47
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~47 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 233, coercions: 624, joins: 0/0}
$dRecElem47
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem47
  = $fRecElemaRecrr'::S ($d~47 `cast` <Co:624>) $dRecElem46

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~48
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~48 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 256, coercions: 758, joins: 0/0}
$dRecElem48
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem48
  = $fRecElemaRecrr'::S ($d~48 `cast` <Co:758>) $dRecElem47

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~49
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~49 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 279, coercions: 903, joins: 0/0}
$dRecElem49
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem49
  = $fRecElemaRecrr'::S ($d~49 `cast` <Co:903>) $dRecElem48

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~50 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem50
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem50
  = $fRecElemaRecrr'::S ($d~50 `cast` <Co:1059>) $dRecElem49

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~51 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem51
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem51
  = $fRecElemaRecrr'::S ($d~51 `cast` <Co:1226>) $dRecElem50

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~52 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem52
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem52
  = $fRecElemaRecrr'::S ($d~52 `cast` <Co:1404>) $dRecElem51

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~53 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem53
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem53
  = $fRecElemaRecrr'::S ($d~53 `cast` <Co:1593>) $dRecElem52

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~54 :: 'S 'Z ~ 'S 'Z
$d~54 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaRecrr'::S ($d~54 `cast` <Co:141>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~55 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~55 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaRecrr'::S ($d~55 `cast` <Co:231>) $dRecElem54

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~56 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~56 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaRecrr'::S ($d~56 `cast` <Co:332>) $dRecElem55

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~57 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~57 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaRecrr'::S ($d~57 `cast` <Co:444>) $dRecElem56

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~58 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~58 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaRecrr'::S ($d~58 `cast` <Co:567>) $dRecElem57

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~59
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~59 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaRecrr'::S ($d~59 `cast` <Co:701>) $dRecElem58

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~60
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~60 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaRecrr'::S ($d~60 `cast` <Co:846>) $dRecElem59

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~61
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~61 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaRecrr'::S ($d~61 `cast` <Co:1002>) $dRecElem60

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~62
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~62 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaRecrr'::S ($d~62 `cast` <Co:1169>) $dRecElem61

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~63 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaRecrr'::S ($d~63 `cast` <Co:1347>) $dRecElem62

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~64 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaRecrr'::S ($d~64 `cast` <Co:1536>) $dRecElem63

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~65 :: 'S 'Z ~ 'S 'Z
$d~65 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 235, coercions: 163, joins: 0/0}
$dRecElem65
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaRecrr'::S ($d~65 `cast` <Co:163>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~66 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~66 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 185, coercions: 264, joins: 0/0}
$dRecElem66
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaRecrr'::S ($d~66 `cast` <Co:264>) $dRecElem65

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~67 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~67 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 208, coercions: 376, joins: 0/0}
$dRecElem67
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaRecrr'::S ($d~67 `cast` <Co:376>) $dRecElem66

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~68 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~68 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 231, coercions: 499, joins: 0/0}
$dRecElem68
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaRecrr'::S ($d~68 `cast` <Co:499>) $dRecElem67

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~69 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~69 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 254, coercions: 633, joins: 0/0}
$dRecElem69
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaRecrr'::S ($d~69 `cast` <Co:633>) $dRecElem68

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~70
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~70 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 277, coercions: 778, joins: 0/0}
$dRecElem70
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaRecrr'::S ($d~70 `cast` <Co:778>) $dRecElem69

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~71
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~71 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 300, coercions: 934, joins: 0/0}
$dRecElem71
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaRecrr'::S ($d~71 `cast` <Co:934>) $dRecElem70

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~72
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~72 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem72
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaRecrr'::S ($d~72 `cast` <Co:1101>) $dRecElem71

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~73
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~73 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem73
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaRecrr'::S ($d~73 `cast` <Co:1279>) $dRecElem72

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~74
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~74 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem74
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaRecrr'::S ($d~74 `cast` <Co:1468>) $dRecElem73

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~75 :: 'S 'Z ~ 'S 'Z
$d~75 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 268, coercions: 185, joins: 0/0}
$dRecElem75
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem75
  = $fRecElemaRecrr'::S ($d~75 `cast` <Co:185>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~76 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~76 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 207, coercions: 297, joins: 0/0}
$dRecElem76
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem76
  = $fRecElemaRecrr'::S ($d~76 `cast` <Co:297>) $dRecElem75

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~77 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~77 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 230, coercions: 420, joins: 0/0}
$dRecElem77
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem77
  = $fRecElemaRecrr'::S ($d~77 `cast` <Co:420>) $dRecElem76

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~78 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~78 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 253, coercions: 554, joins: 0/0}
$dRecElem78
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem78
  = $fRecElemaRecrr'::S ($d~78 `cast` <Co:554>) $dRecElem77

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~79 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~79 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 276, coercions: 699, joins: 0/0}
$dRecElem79
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem79
  = $fRecElemaRecrr'::S ($d~79 `cast` <Co:699>) $dRecElem78

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~80
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~80 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 299, coercions: 855, joins: 0/0}
$dRecElem80
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem80
  = $fRecElemaRecrr'::S ($d~80 `cast` <Co:855>) $dRecElem79

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~81
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~81 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem81
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem81
  = $fRecElemaRecrr'::S ($d~81 `cast` <Co:1022>) $dRecElem80

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~82
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~82 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem82
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem82
  = $fRecElemaRecrr'::S ($d~82 `cast` <Co:1200>) $dRecElem81

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~83
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~83 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem83
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem83
  = $fRecElemaRecrr'::S ($d~83 `cast` <Co:1389>) $dRecElem82

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~84 :: 'S 'Z ~ 'S 'Z
$d~84 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 301, coercions: 207, joins: 0/0}
$dRecElem84
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem84
  = $fRecElemaRecrr'::S ($d~84 `cast` <Co:207>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~85 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~85 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 229, coercions: 330, joins: 0/0}
$dRecElem85
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem85
  = $fRecElemaRecrr'::S ($d~85 `cast` <Co:330>) $dRecElem84

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~86 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~86 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 252, coercions: 464, joins: 0/0}
$dRecElem86
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem86
  = $fRecElemaRecrr'::S ($d~86 `cast` <Co:464>) $dRecElem85

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~87 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~87 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 275, coercions: 609, joins: 0/0}
$dRecElem87
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem87
  = $fRecElemaRecrr'::S ($d~87 `cast` <Co:609>) $dRecElem86

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~88 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~88 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 298, coercions: 765, joins: 0/0}
$dRecElem88
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem88
  = $fRecElemaRecrr'::S ($d~88 `cast` <Co:765>) $dRecElem87

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~89 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 321, coercions: 932, joins: 0/0}
$dRecElem89
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem89
  = $fRecElemaRecrr'::S ($d~89 `cast` <Co:932>) $dRecElem88

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~90
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~90 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem90
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem90
  = $fRecElemaRecrr'::S ($d~90 `cast` <Co:1110>) $dRecElem89

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~91
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~91 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem91
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem91
  = $fRecElemaRecrr'::S ($d~91 `cast` <Co:1299>) $dRecElem90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~92 :: 'S 'Z ~ 'S 'Z
$d~92 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 334, coercions: 229, joins: 0/0}
$dRecElem92
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem92
  = $fRecElemaRecrr'::S ($d~92 `cast` <Co:229>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~93 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~93 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 251, coercions: 363, joins: 0/0}
$dRecElem93
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem93
  = $fRecElemaRecrr'::S ($d~93 `cast` <Co:363>) $dRecElem92

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~94 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~94 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 274, coercions: 508, joins: 0/0}
$dRecElem94
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem94
  = $fRecElemaRecrr'::S ($d~94 `cast` <Co:508>) $dRecElem93

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~95 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~95 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 297, coercions: 664, joins: 0/0}
$dRecElem95
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem95
  = $fRecElemaRecrr'::S ($d~95 `cast` <Co:664>) $dRecElem94

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~96 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~96 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 320, coercions: 831, joins: 0/0}
$dRecElem96
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem96
  = $fRecElemaRecrr'::S ($d~96 `cast` <Co:831>) $dRecElem95

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~97 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem97
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem97
  = $fRecElemaRecrr'::S ($d~97 `cast` <Co:1009>) $dRecElem96

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~98 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem98
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem98
  = $fRecElemaRecrr'::S ($d~98 `cast` <Co:1198>) $dRecElem97

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~99 :: 'S 'Z ~ 'S 'Z
$d~99 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 367, coercions: 251, joins: 0/0}
$dRecElem99
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem99
  = $fRecElemaRecrr'::S ($d~99 `cast` <Co:251>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~100 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~100 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 273, coercions: 396, joins: 0/0}
$dRecElem100
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem100
  = $fRecElemaRecrr'::S ($d~100 `cast` <Co:396>) $dRecElem99

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~101 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~101 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 296, coercions: 552, joins: 0/0}
$dRecElem101
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem101
  = $fRecElemaRecrr'::S ($d~101 `cast` <Co:552>) $dRecElem100

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~102 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~102 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 319, coercions: 719, joins: 0/0}
$dRecElem102
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem102
  = $fRecElemaRecrr'::S ($d~102 `cast` <Co:719>) $dRecElem101

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~103 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~103 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 342, coercions: 897, joins: 0/0}
$dRecElem103
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem103
  = $fRecElemaRecrr'::S ($d~103 `cast` <Co:897>) $dRecElem102

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~104
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~104 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem104
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem104
  = $fRecElemaRecrr'::S ($d~104 `cast` <Co:1086>) $dRecElem103

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~105 :: 'S 'Z ~ 'S 'Z
$d~105 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 400, coercions: 273, joins: 0/0}
$dRecElem105
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem105
  = $fRecElemaRecrr'::S ($d~105 `cast` <Co:273>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~106 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~106 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 295, coercions: 429, joins: 0/0}
$dRecElem106
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem106
  = $fRecElemaRecrr'::S ($d~106 `cast` <Co:429>) $dRecElem105

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~107 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~107 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 318, coercions: 596, joins: 0/0}
$dRecElem107
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem107
  = $fRecElemaRecrr'::S ($d~107 `cast` <Co:596>) $dRecElem106

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~108 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~108 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 341, coercions: 774, joins: 0/0}
$dRecElem108
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem108
  = $fRecElemaRecrr'::S ($d~108 `cast` <Co:774>) $dRecElem107

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~109 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~109 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 364, coercions: 963, joins: 0/0}
$dRecElem109
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem109
  = $fRecElemaRecrr'::S ($d~109 `cast` <Co:963>) $dRecElem108

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~110 :: 'S 'Z ~ 'S 'Z
$d~110 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 433, coercions: 295, joins: 0/0}
$dRecElem110
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem110
  = $fRecElemaRecrr'::S ($d~110 `cast` <Co:295>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~111 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~111 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 317, coercions: 462, joins: 0/0}
$dRecElem111
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem111
  = $fRecElemaRecrr'::S ($d~111 `cast` <Co:462>) $dRecElem110

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~112 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~112 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 340, coercions: 640, joins: 0/0}
$dRecElem112
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem112
  = $fRecElemaRecrr'::S ($d~112 `cast` <Co:640>) $dRecElem111

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~113 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~113 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 363, coercions: 829, joins: 0/0}
$dRecElem113
  :: RecElem
       Rec '("a4", Int) '("a4", Int) Fields Fields ('S ('S ('S ('S 'Z))))
$dRecElem113
  = $fRecElemaRecrr'::S ($d~113 `cast` <Co:829>) $dRecElem112

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~114 :: 'S 'Z ~ 'S 'Z
$d~114 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 466, coercions: 317, joins: 0/0}
$dRecElem114
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem114
  = $fRecElemaRecrr'::S ($d~114 `cast` <Co:317>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~115 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~115 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 339, coercions: 495, joins: 0/0}
$dRecElem115
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem115
  = $fRecElemaRecrr'::S ($d~115 `cast` <Co:495>) $dRecElem114

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~116 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~116 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 362, coercions: 684, joins: 0/0}
$dRecElem116
  :: RecElem
       Rec '("a3", Int) '("a3", Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem116
  = $fRecElemaRecrr'::S ($d~116 `cast` <Co:684>) $dRecElem115

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~117 :: 'S 'Z ~ 'S 'Z
$d~117 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 499, coercions: 339, joins: 0/0}
$dRecElem117
  :: RecElem
       Rec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem117
  = $fRecElemaRecrr'::S ($d~117 `cast` <Co:339>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~118 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~118 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 361, coercions: 528, joins: 0/0}
$dRecElem118
  :: RecElem Rec '("a2", Int) '("a2", Int) Fields Fields ('S ('S 'Z))
$dRecElem118
  = $fRecElemaRecrr'::S ($d~118 `cast` <Co:528>) $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~119 :: 'S 'Z ~ 'S 'Z
$d~119 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem Rec '("a1", Int) '("a1", Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaRecrr'::S ($d~119 `cast` <Co:361>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 193,
              types: 1,096,
              coercions: 18,508,
              joins: 0/18}
sumRec :: Rec ElField Fields -> Int
sumRec
  = \ (str :: Rec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (s :: Symbol) p (rs :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs)) =>
             Label s -> record ElField rs -> p
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (s :: Symbol))
              (@ p)
              (@ (rs :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs))
              _
              (eta1 :: record ElField rs) ->
              let {
                v :: p
                v = case break<0>(eta1) rget $dRecElem120 irred eta1 of
                    { Field @ s1 @ t co $dKnownSymbol16 ds ->
                    ds `cast` <Co:4>
                    } } in
              break<1>(v) v } in
      break<32>(str,get)
      + $fNumInt
        (break<30>(str,get)
         + $fNumInt
           (break<28>(str,get)
            + $fNumInt
              (break<26>(str,get)
               + $fNumInt
                 (break<24>(str,get)
                  + $fNumInt
                    (break<22>(str,get)
                     + $fNumInt
                       (break<20>(str,get)
                        + $fNumInt
                          (break<18>(str,get)
                           + $fNumInt
                             (break<16>(str,get)
                              + $fNumInt
                                (break<14>(str,get)
                                 + $fNumInt
                                   (break<12>(str,get)
                                    + $fNumInt
                                      (break<10>(str,get)
                                       + $fNumInt
                                         (break<8>(str,get)
                                          + $fNumInt
                                            (break<6>(str,get)
                                             + $fNumInt
                                               (break<4>(str,get)
                                                + $fNumInt
                                                  (break<2>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($fRecElemaRecrr'::Z
                                                                 `cast` <Co:203>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v)
                                                  (break<3>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($dRecElem119 `cast` <Co:380>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v))
                                               (break<5>(str,get)
                                                let {
                                                  v :: Int
                                                  v = case break<0>(str)
                                                           rget
                                                             ($dRecElem118 `cast` <Co:546>)
                                                             (C:(%%) `cast` <Co:7>)
                                                             str
                                                      of
                                                      { Field @ s @ t co $dKnownSymbol16 ds ->
                                                      ds `cast` <Co:4>
                                                      } } in
                                                break<1>(v) v))
                                            (break<7>(str,get)
                                             let {
                                               v :: Int
                                               v = case break<0>(str)
                                                        rget
                                                          ($dRecElem116 `cast` <Co:701>)
                                                          (C:(%%) `cast` <Co:7>)
                                                          str
                                                   of
                                                   { Field @ s @ t co $dKnownSymbol16 ds ->
                                                   ds `cast` <Co:4>
                                                   } } in
                                             break<1>(v) v))
                                         (break<9>(str,get)
                                          let {
                                            v :: Int
                                            v = case break<0>(str)
                                                     rget
                                                       ($dRecElem113 `cast` <Co:845>)
                                                       (C:(%%) `cast` <Co:7>)
                                                       str
                                                of
                                                { Field @ s @ t co $dKnownSymbol16 ds ->
                                                ds `cast` <Co:4>
                                                } } in
                                          break<1>(v) v))
                                      (break<11>(str,get)
                                       let {
                                         v :: Int
                                         v = case break<0>(str)
                                                  rget
                                                    ($dRecElem109 `cast` <Co:978>)
                                                    (C:(%%) `cast` <Co:7>)
                                                    str
                                             of
                                             { Field @ s @ t co $dKnownSymbol16 ds ->
                                             ds `cast` <Co:4>
                                             } } in
                                       break<1>(v) v))
                                   (break<13>(str,get)
                                    let {
                                      v :: Int
                                      v = case break<0>(str)
                                               rget
                                                 ($dRecElem104 `cast` <Co:1100>)
                                                 (C:(%%) `cast` <Co:7>)
                                                 str
                                          of
                                          { Field @ s @ t co $dKnownSymbol16 ds ->
                                          ds `cast` <Co:4>
                                          } } in
                                    break<1>(v) v))
                                (break<15>(str,get)
                                 let {
                                   v :: Int
                                   v = case break<0>(str)
                                            rget
                                              ($dRecElem98 `cast` <Co:1211>)
                                              (C:(%%) `cast` <Co:7>)
                                              str
                                       of
                                       { Field @ s @ t co $dKnownSymbol16 ds ->
                                       ds `cast` <Co:4>
                                       } } in
                                 break<1>(v) v))
                             (break<17>(str,get)
                              let {
                                v :: Int
                                v = case break<0>(str)
                                         rget
                                           ($dRecElem91 `cast` <Co:1311>) (C:(%%) `cast` <Co:7>) str
                                    of
                                    { Field @ s @ t co $dKnownSymbol16 ds ->
                                    ds `cast` <Co:4>
                                    } } in
                              break<1>(v) v))
                          (break<19>(str,get)
                           let {
                             v :: Int
                             v = case break<0>(str)
                                      rget ($dRecElem83 `cast` <Co:1400>) (C:(%%) `cast` <Co:7>) str
                                 of
                                 { Field @ s @ t co $dKnownSymbol16 ds ->
                                 ds `cast` <Co:4>
                                 } } in
                           break<1>(v) v))
                       (break<21>(str,get)
                        let {
                          v :: Int
                          v = case break<0>(str)
                                   rget ($dRecElem74 `cast` <Co:1478>) (C:(%%) `cast` <Co:7>) str
                              of
                              { Field @ s @ t co $dKnownSymbol16 ds ->
                              ds `cast` <Co:4>
                              } } in
                        break<1>(v) v))
                    (break<23>(str,get)
                     let {
                       v :: Int
                       v = case break<0>(str)
                                rget ($dRecElem64 `cast` <Co:1545>) (C:(%%) `cast` <Co:7>) str
                           of
                           { Field @ s @ t co $dKnownSymbol16 ds ->
                           ds `cast` <Co:4>
                           } } in
                     break<1>(v) v))
                 (break<25>(str,get)
                  let {
                    v :: Int
                    v = case break<0>(str)
                             rget ($dRecElem53 `cast` <Co:1601>) (C:(%%) `cast` <Co:7>) str
                        of
                        { Field @ s @ t co $dKnownSymbol16 ds ->
                        ds `cast` <Co:4>
                        } } in
                  break<1>(v) v))
              (break<27>(str,get)
               let {
                 v :: Int
                 v = case break<0>(str)
                          rget ($dRecElem41 `cast` <Co:1646>) (C:(%%) `cast` <Co:7>) str
                     of
                     { Field @ s @ t co $dKnownSymbol16 ds ->
                     ds `cast` <Co:4>
                     } } in
               break<1>(v) v))
           (break<29>(str,get)
            let {
              v :: Int
              v = case break<0>(str)
                       rget ($dRecElem28 `cast` <Co:1680>) (C:(%%) `cast` <Co:7>) str
                  of
                  { Field @ s @ t co $dKnownSymbol16 ds ->
                  ds `cast` <Co:4>
                  } } in
            break<1>(v) v))
        (break<31>(str,get)
         let {
           v :: Int
           v = case break<0>(str)
                    rget ($dRecElem14 `cast` <Co:1703>) (C:(%%) `cast` <Co:7>) str
               of
               { Field @ s @ t co $dKnownSymbol16 ds ->
               ds `cast` <Co:4>
               } } in
         break<1>(v) v)



==================== Tidy Core ====================
2021-05-14 17:30:38.824285001 UTC

Result size of Tidy Core
  = {terms: 1,137, types: 72,736, coercions: 105,334, joins: 0/18}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: Addr#
$trModule1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
$trModule2 = TrNameS $trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3 :: Addr#
$trModule3 = "Bench.Rec"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4 :: TrName
$trModule4 = TrNameS $trModule3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$trModule :: Module
$trModule = Module $trModule2 $trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol :: [Char]
$dKnownSymbol = unpackCString# "a15"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol1 :: [Char]
$dKnownSymbol1 = unpackCString# "a14"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol2 :: [Char]
$dKnownSymbol2 = unpackCString# "a13"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol3 :: [Char]
$dKnownSymbol3 = unpackCString# "a12"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol4 :: [Char]
$dKnownSymbol4 = unpackCString# "a11"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol5 :: [Char]
$dKnownSymbol5 = unpackCString# "a10"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol6 :: [Char]
$dKnownSymbol6 = unpackCString# "a9"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol7 :: [Char]
$dKnownSymbol7 = unpackCString# "a8"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol8 :: [Char]
$dKnownSymbol8 = unpackCString# "a7"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol9 :: [Char]
$dKnownSymbol9 = unpackCString# "a6"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol10 :: [Char]
$dKnownSymbol10 = unpackCString# "a5"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol11 :: [Char]
$dKnownSymbol11 = unpackCString# "a4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol12 :: [Char]
$dKnownSymbol12 = unpackCString# "a3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol13 :: [Char]
$dKnownSymbol13 = unpackCString# "a2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol14 :: [Char]
$dKnownSymbol14 = unpackCString# "a1"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dKnownSymbol15 :: [Char]
$dKnownSymbol15 = unpackCString# "a0"#

-- RHS size: {terms: 160,
              types: 6,484,
              coercions: 1,546,
              joins: 0/0}
mkRec :: Int -> Rec ElField Fields
mkRec
  = \ (i :: Int) ->
      break<64>(i)
      case break<33>(i) $WField ($dKnownSymbol15 `cast` <Co:7>) i of dt
      { Field @ ipv @ ipv1 ipv2 ipv3 ipv4 ->
      case break<63>(i)
           case break<34>(i) $WField ($dKnownSymbol14 `cast` <Co:7>) i of dt1
           { Field @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
           case break<62>(i)
                case break<35>(i) $WField ($dKnownSymbol13 `cast` <Co:7>) i of dt2
                { Field @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
                case break<61>(i)
                     case break<36>(i) $WField ($dKnownSymbol12 `cast` <Co:7>) i of dt3
                     { Field @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                     case break<60>(i)
                          case break<37>(i) $WField ($dKnownSymbol11 `cast` <Co:7>) i of dt4
                          { Field @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                          case break<59>(i)
                               case break<38>(i) $WField ($dKnownSymbol10 `cast` <Co:7>) i of dt5
                               { Field @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                               case break<58>(i)
                                    case break<39>(i) $WField ($dKnownSymbol9 `cast` <Co:7>) i
                                    of dt6
                                    { Field @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                                    case break<57>(i)
                                         case break<40>(i) $WField ($dKnownSymbol8 `cast` <Co:7>) i
                                         of dt7
                                         { Field @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                         case break<56>(i)
                                              case break<41>(i)
                                                   $WField ($dKnownSymbol7 `cast` <Co:7>) i
                                              of dt8
                                              { Field @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                              case break<55>(i)
                                                   case break<42>(i)
                                                        $WField ($dKnownSymbol6 `cast` <Co:7>) i
                                                   of dt9
                                                   { Field @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                                   case break<54>(i)
                                                        case break<43>(i)
                                                             $WField
                                                               ($dKnownSymbol5 `cast` <Co:7>) i
                                                        of dt10
                                                        { Field @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                        case break<53>(i)
                                                             case break<44>(i)
                                                                  $WField
                                                                    ($dKnownSymbol4 `cast` <Co:7>) i
                                                             of dt11
                                                             { Field @ ipv55 @ ipv56 ipv57 ipv58
                                                                     ipv59 ->
                                                             case break<52>(i)
                                                                  case break<45>(i)
                                                                       $WField
                                                                         ($dKnownSymbol3
                                                                          `cast` <Co:7>)
                                                                         i
                                                                  of dt12
                                                                  { Field @ ipv60 @ ipv61 ipv62
                                                                          ipv63 ipv64 ->
                                                                  case break<51>(i)
                                                                       case break<46>(i)
                                                                            $WField
                                                                              ($dKnownSymbol2
                                                                               `cast` <Co:7>)
                                                                              i
                                                                       of dt13
                                                                       { Field @ ipv65 @ ipv66 ipv67
                                                                               ipv68 ipv69 ->
                                                                       case break<50>(i)
                                                                            case break<47>(i)
                                                                                 $WField
                                                                                   ($dKnownSymbol1
                                                                                    `cast` <Co:7>)
                                                                                   i
                                                                            of dt14
                                                                            { Field @ ipv70 @ ipv71
                                                                                    ipv72 ipv73
                                                                                    ipv74 ->
                                                                            case break<49>()
                                                                                 case break<48>()
                                                                                      Field
                                                                                        @~ <Co:6>
                                                                                        ($dKnownSymbol
                                                                                         `cast` <Co:7>)
                                                                                        (I# 99#)
                                                                                 of dt15
                                                                                 { Field @ ipv75
                                                                                         @ ipv76
                                                                                         ipv77 ipv78
                                                                                         ipv79 ->
                                                                                 :&
                                                                                   @~ <Co:14>
                                                                                   dt15
                                                                                   (RNil @~ <Co:4>)
                                                                                 }
                                                                            of dt15
                                                                            { :& @ ipv75 @ ipv76
                                                                                 ipv77 ipv78
                                                                                 ipv79 ->
                                                                            :& @~ <Co:24> dt14 dt15
                                                                            }
                                                                            }
                                                                       of dt14
                                                                       { :& @ ipv70 @ ipv71 ipv72
                                                                            ipv73 ipv74 ->
                                                                       :& @~ <Co:34> dt13 dt14
                                                                       }
                                                                       }
                                                                  of dt13
                                                                  { :& @ ipv65 @ ipv66 ipv67 ipv68
                                                                       ipv69 ->
                                                                  :& @~ <Co:44> dt12 dt13
                                                                  }
                                                                  }
                                                             of dt12
                                                             { :& @ ipv60 @ ipv61 ipv62 ipv63
                                                                  ipv64 ->
                                                             :& @~ <Co:54> dt11 dt12
                                                             }
                                                             }
                                                        of dt11
                                                        { :& @ ipv55 @ ipv56 ipv57 ipv58 ipv59 ->
                                                        :& @~ <Co:64> dt10 dt11
                                                        }
                                                        }
                                                   of dt10
                                                   { :& @ ipv50 @ ipv51 ipv52 ipv53 ipv54 ->
                                                   :& @~ <Co:74> dt9 dt10
                                                   }
                                                   }
                                              of dt9
                                              { :& @ ipv45 @ ipv46 ipv47 ipv48 ipv49 ->
                                              :& @~ <Co:84> dt8 dt9
                                              }
                                              }
                                         of dt8
                                         { :& @ ipv40 @ ipv41 ipv42 ipv43 ipv44 ->
                                         :& @~ <Co:94> dt7 dt8
                                         }
                                         }
                                    of dt7
                                    { :& @ ipv35 @ ipv36 ipv37 ipv38 ipv39 ->
                                    :& @~ <Co:104> dt6 dt7
                                    }
                                    }
                               of dt6
                               { :& @ ipv30 @ ipv31 ipv32 ipv33 ipv34 ->
                               :& @~ <Co:114> dt5 dt6
                               }
                               }
                          of dt5
                          { :& @ ipv25 @ ipv26 ipv27 ipv28 ipv29 ->
                          :& @~ <Co:124> dt4 dt5
                          }
                          }
                     of dt4
                     { :& @ ipv20 @ ipv21 ipv22 ipv23 ipv24 ->
                     :& @~ <Co:134> dt3 dt4
                     }
                     }
                of dt3
                { :& @ ipv15 @ ipv16 ipv17 ipv18 ipv19 ->
                :& @~ <Co:144> dt2 dt3
                }
                }
           of dt2
           { :& @ ipv10 @ ipv11 ipv12 ipv13 ipv14 ->
           :& @~ <Co:154> dt1 dt2
           }
           }
      of dt1
      { :& @ ipv5 @ ipv6 ipv7 ipv8 ipv9 ->
      :& @~ <Co:164> dt dt1
      }
      }

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~ :: 'S 'Z ~ 'S 'Z
$d~ = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 70, coercions: 53, joins: 0/0}
$dRecElem
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a14", Int), '("a15", Int)]
       '[ '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem
  = $fRecElemaRecrr'::S ($d~ `cast` <Co:53>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~1 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~1 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 75, coercions: 99, joins: 0/0}
$dRecElem1
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem1 = $fRecElemaRecrr'::S ($d~1 `cast` <Co:99>) $dRecElem

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~2 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~2 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 98, coercions: 156, joins: 0/0}
$dRecElem2
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem2 = $fRecElemaRecrr'::S ($d~2 `cast` <Co:156>) $dRecElem1

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~3 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~3 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 121, coercions: 224, joins: 0/0}
$dRecElem3
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem3 = $fRecElemaRecrr'::S ($d~3 `cast` <Co:224>) $dRecElem2

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~4 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~4 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 144, coercions: 303, joins: 0/0}
$dRecElem4
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem4 = $fRecElemaRecrr'::S ($d~4 `cast` <Co:303>) $dRecElem3

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~5
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~5 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 167, coercions: 393, joins: 0/0}
$dRecElem5
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem5 = $fRecElemaRecrr'::S ($d~5 `cast` <Co:393>) $dRecElem4

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~6
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~6 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 190, coercions: 494, joins: 0/0}
$dRecElem6
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem6 = $fRecElemaRecrr'::S ($d~6 `cast` <Co:494>) $dRecElem5

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~7
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~7 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 213, coercions: 606, joins: 0/0}
$dRecElem7
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem7 = $fRecElemaRecrr'::S ($d~7 `cast` <Co:606>) $dRecElem6

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~8
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~8 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 236, coercions: 729, joins: 0/0}
$dRecElem8
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem8 = $fRecElemaRecrr'::S ($d~8 `cast` <Co:729>) $dRecElem7

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~9
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~9 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 259, coercions: 863, joins: 0/0}
$dRecElem9
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem9 = $fRecElemaRecrr'::S ($d~9 `cast` <Co:863>) $dRecElem8

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~10
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~10 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 282, coercions: 1,008, joins: 0/0}
$dRecElem10
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem10
  = $fRecElemaRecrr'::S ($d~10 `cast` <Co:1008>) $dRecElem9

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~11
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~11 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 305, coercions: 1,164, joins: 0/0}
$dRecElem11
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem11
  = $fRecElemaRecrr'::S ($d~11 `cast` <Co:1164>) $dRecElem10

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~12
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~12 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 328, coercions: 1,331, joins: 0/0}
$dRecElem12
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem12
  = $fRecElemaRecrr'::S ($d~12 `cast` <Co:1331>) $dRecElem11

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~13
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~13 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 351, coercions: 1,509, joins: 0/0}
$dRecElem13
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem13
  = $fRecElemaRecrr'::S ($d~13 `cast` <Co:1509>) $dRecElem12

-- RHS size: {terms: 1, types: 33, coercions: 16, joins: 0/0}
$d~14
  :: 'S
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
     ~ 'S
         ('S
            ('S
               ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$d~14 = Eq# @~ <Co:16>

-- RHS size: {terms: 3, types: 374, coercions: 1,698, joins: 0/0}
$dRecElem14
  :: RecElem
       Rec
       '("a15", Int)
       '("a15", Int)
       Fields
       Fields
       ('S
          ('S
             ('S
                ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))))
$dRecElem14
  = $fRecElemaRecrr'::S ($d~14 `cast` <Co:1698>) $dRecElem13

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~15 :: 'S 'Z ~ 'S 'Z
$d~15 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 103, coercions: 75, joins: 0/0}
$dRecElem15
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem15
  = $fRecElemaRecrr'::S ($d~15 `cast` <Co:75>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~16 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~16 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 97, coercions: 132, joins: 0/0}
$dRecElem16
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem16
  = $fRecElemaRecrr'::S ($d~16 `cast` <Co:132>) $dRecElem15

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~17 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~17 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 120, coercions: 200, joins: 0/0}
$dRecElem17
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem17
  = $fRecElemaRecrr'::S ($d~17 `cast` <Co:200>) $dRecElem16

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~18 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~18 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 143, coercions: 279, joins: 0/0}
$dRecElem18
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem18
  = $fRecElemaRecrr'::S ($d~18 `cast` <Co:279>) $dRecElem17

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~19 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~19 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 166, coercions: 369, joins: 0/0}
$dRecElem19
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem19
  = $fRecElemaRecrr'::S ($d~19 `cast` <Co:369>) $dRecElem18

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~20
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~20 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 189, coercions: 470, joins: 0/0}
$dRecElem20
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem20
  = $fRecElemaRecrr'::S ($d~20 `cast` <Co:470>) $dRecElem19

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~21
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~21 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 212, coercions: 582, joins: 0/0}
$dRecElem21
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem21
  = $fRecElemaRecrr'::S ($d~21 `cast` <Co:582>) $dRecElem20

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~22
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~22 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 235, coercions: 705, joins: 0/0}
$dRecElem22
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem22
  = $fRecElemaRecrr'::S ($d~22 `cast` <Co:705>) $dRecElem21

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~23
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~23 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 258, coercions: 839, joins: 0/0}
$dRecElem23
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem23
  = $fRecElemaRecrr'::S ($d~23 `cast` <Co:839>) $dRecElem22

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~24
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~24 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 281, coercions: 984, joins: 0/0}
$dRecElem24
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem24
  = $fRecElemaRecrr'::S ($d~24 `cast` <Co:984>) $dRecElem23

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~25
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~25 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 304, coercions: 1,140, joins: 0/0}
$dRecElem25
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem25
  = $fRecElemaRecrr'::S ($d~25 `cast` <Co:1140>) $dRecElem24

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~26
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~26 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 327, coercions: 1,307, joins: 0/0}
$dRecElem26
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem26
  = $fRecElemaRecrr'::S ($d~26 `cast` <Co:1307>) $dRecElem25

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~27
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~27 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 350, coercions: 1,485, joins: 0/0}
$dRecElem27
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem27
  = $fRecElemaRecrr'::S ($d~27 `cast` <Co:1485>) $dRecElem26

-- RHS size: {terms: 1, types: 31, coercions: 15, joins: 0/0}
$d~28
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
     ~ 'S
         ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$d~28 = Eq# @~ <Co:15>

-- RHS size: {terms: 3, types: 373, coercions: 1,674, joins: 0/0}
$dRecElem28
  :: RecElem
       Rec
       '("a14", Int)
       '("a14", Int)
       Fields
       Fields
       ('S
          ('S
             ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))))
$dRecElem28
  = $fRecElemaRecrr'::S ($d~28 `cast` <Co:1674>) $dRecElem27

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~29 :: 'S 'Z ~ 'S 'Z
$d~29 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 136, coercions: 97, joins: 0/0}
$dRecElem29
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem29
  = $fRecElemaRecrr'::S ($d~29 `cast` <Co:97>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~30 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~30 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 119, coercions: 165, joins: 0/0}
$dRecElem30
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem30
  = $fRecElemaRecrr'::S ($d~30 `cast` <Co:165>) $dRecElem29

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~31 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~31 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 142, coercions: 244, joins: 0/0}
$dRecElem31
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem31
  = $fRecElemaRecrr'::S ($d~31 `cast` <Co:244>) $dRecElem30

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~32 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~32 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 165, coercions: 334, joins: 0/0}
$dRecElem32
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem32
  = $fRecElemaRecrr'::S ($d~32 `cast` <Co:334>) $dRecElem31

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~33 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~33 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 188, coercions: 435, joins: 0/0}
$dRecElem33
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem33
  = $fRecElemaRecrr'::S ($d~33 `cast` <Co:435>) $dRecElem32

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~34
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~34 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 211, coercions: 547, joins: 0/0}
$dRecElem34
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem34
  = $fRecElemaRecrr'::S ($d~34 `cast` <Co:547>) $dRecElem33

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~35
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~35 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 234, coercions: 670, joins: 0/0}
$dRecElem35
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem35
  = $fRecElemaRecrr'::S ($d~35 `cast` <Co:670>) $dRecElem34

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~36
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~36 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 257, coercions: 804, joins: 0/0}
$dRecElem36
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem36
  = $fRecElemaRecrr'::S ($d~36 `cast` <Co:804>) $dRecElem35

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~37
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~37 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 280, coercions: 949, joins: 0/0}
$dRecElem37
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem37
  = $fRecElemaRecrr'::S ($d~37 `cast` <Co:949>) $dRecElem36

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~38
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~38 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 303, coercions: 1,105, joins: 0/0}
$dRecElem38
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem38
  = $fRecElemaRecrr'::S ($d~38 `cast` <Co:1105>) $dRecElem37

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~39
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~39 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 326, coercions: 1,272, joins: 0/0}
$dRecElem39
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem39
  = $fRecElemaRecrr'::S ($d~39 `cast` <Co:1272>) $dRecElem38

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~40
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~40 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 349, coercions: 1,450, joins: 0/0}
$dRecElem40
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem40
  = $fRecElemaRecrr'::S ($d~40 `cast` <Co:1450>) $dRecElem39

-- RHS size: {terms: 1, types: 29, coercions: 14, joins: 0/0}
$d~41
  :: 'S
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$d~41 = Eq# @~ <Co:14>

-- RHS size: {terms: 3, types: 372, coercions: 1,639, joins: 0/0}
$dRecElem41
  :: RecElem
       Rec
       '("a13", Int)
       '("a13", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))))
$dRecElem41
  = $fRecElemaRecrr'::S ($d~41 `cast` <Co:1639>) $dRecElem40

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~42 :: 'S 'Z ~ 'S 'Z
$d~42 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 169, coercions: 119, joins: 0/0}
$dRecElem42
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem42
  = $fRecElemaRecrr'::S ($d~42 `cast` <Co:119>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~43 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~43 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 141, coercions: 198, joins: 0/0}
$dRecElem43
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem43
  = $fRecElemaRecrr'::S ($d~43 `cast` <Co:198>) $dRecElem42

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~44 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~44 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 164, coercions: 288, joins: 0/0}
$dRecElem44
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem44
  = $fRecElemaRecrr'::S ($d~44 `cast` <Co:288>) $dRecElem43

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~45 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~45 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 187, coercions: 389, joins: 0/0}
$dRecElem45
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem45
  = $fRecElemaRecrr'::S ($d~45 `cast` <Co:389>) $dRecElem44

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~46 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~46 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 210, coercions: 501, joins: 0/0}
$dRecElem46
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem46
  = $fRecElemaRecrr'::S ($d~46 `cast` <Co:501>) $dRecElem45

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~47
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~47 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 233, coercions: 624, joins: 0/0}
$dRecElem47
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem47
  = $fRecElemaRecrr'::S ($d~47 `cast` <Co:624>) $dRecElem46

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~48
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~48 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 256, coercions: 758, joins: 0/0}
$dRecElem48
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem48
  = $fRecElemaRecrr'::S ($d~48 `cast` <Co:758>) $dRecElem47

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~49
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~49 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 279, coercions: 903, joins: 0/0}
$dRecElem49
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem49
  = $fRecElemaRecrr'::S ($d~49 `cast` <Co:903>) $dRecElem48

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~50
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~50 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 302, coercions: 1,059, joins: 0/0}
$dRecElem50
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem50
  = $fRecElemaRecrr'::S ($d~50 `cast` <Co:1059>) $dRecElem49

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~51
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~51 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 325, coercions: 1,226, joins: 0/0}
$dRecElem51
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem51
  = $fRecElemaRecrr'::S ($d~51 `cast` <Co:1226>) $dRecElem50

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~52
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~52 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 348, coercions: 1,404, joins: 0/0}
$dRecElem52
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem52
  = $fRecElemaRecrr'::S ($d~52 `cast` <Co:1404>) $dRecElem51

-- RHS size: {terms: 1, types: 27, coercions: 13, joins: 0/0}
$d~53
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$d~53 = Eq# @~ <Co:13>

-- RHS size: {terms: 3, types: 371, coercions: 1,593, joins: 0/0}
$dRecElem53
  :: RecElem
       Rec
       '("a12", Int)
       '("a12", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))))
$dRecElem53
  = $fRecElemaRecrr'::S ($d~53 `cast` <Co:1593>) $dRecElem52

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~54 :: 'S 'Z ~ 'S 'Z
$d~54 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 202, coercions: 141, joins: 0/0}
$dRecElem54
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem54
  = $fRecElemaRecrr'::S ($d~54 `cast` <Co:141>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~55 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~55 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 163, coercions: 231, joins: 0/0}
$dRecElem55
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem55
  = $fRecElemaRecrr'::S ($d~55 `cast` <Co:231>) $dRecElem54

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~56 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~56 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 186, coercions: 332, joins: 0/0}
$dRecElem56
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem56
  = $fRecElemaRecrr'::S ($d~56 `cast` <Co:332>) $dRecElem55

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~57 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~57 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 209, coercions: 444, joins: 0/0}
$dRecElem57
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem57
  = $fRecElemaRecrr'::S ($d~57 `cast` <Co:444>) $dRecElem56

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~58 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~58 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 232, coercions: 567, joins: 0/0}
$dRecElem58
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem58
  = $fRecElemaRecrr'::S ($d~58 `cast` <Co:567>) $dRecElem57

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~59
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~59 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 255, coercions: 701, joins: 0/0}
$dRecElem59
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem59
  = $fRecElemaRecrr'::S ($d~59 `cast` <Co:701>) $dRecElem58

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~60
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~60 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 278, coercions: 846, joins: 0/0}
$dRecElem60
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem60
  = $fRecElemaRecrr'::S ($d~60 `cast` <Co:846>) $dRecElem59

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~61
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~61 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 301, coercions: 1,002, joins: 0/0}
$dRecElem61
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem61
  = $fRecElemaRecrr'::S ($d~61 `cast` <Co:1002>) $dRecElem60

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~62
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~62 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 324, coercions: 1,169, joins: 0/0}
$dRecElem62
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem62
  = $fRecElemaRecrr'::S ($d~62 `cast` <Co:1169>) $dRecElem61

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~63
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~63 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 347, coercions: 1,347, joins: 0/0}
$dRecElem63
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem63
  = $fRecElemaRecrr'::S ($d~63 `cast` <Co:1347>) $dRecElem62

-- RHS size: {terms: 1, types: 25, coercions: 12, joins: 0/0}
$d~64
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$d~64 = Eq# @~ <Co:12>

-- RHS size: {terms: 3, types: 370, coercions: 1,536, joins: 0/0}
$dRecElem64
  :: RecElem
       Rec
       '("a11", Int)
       '("a11", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))))
$dRecElem64
  = $fRecElemaRecrr'::S ($d~64 `cast` <Co:1536>) $dRecElem63

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~65 :: 'S 'Z ~ 'S 'Z
$d~65 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 235, coercions: 163, joins: 0/0}
$dRecElem65
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem65
  = $fRecElemaRecrr'::S ($d~65 `cast` <Co:163>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~66 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~66 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 185, coercions: 264, joins: 0/0}
$dRecElem66
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem66
  = $fRecElemaRecrr'::S ($d~66 `cast` <Co:264>) $dRecElem65

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~67 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~67 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 208, coercions: 376, joins: 0/0}
$dRecElem67
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem67
  = $fRecElemaRecrr'::S ($d~67 `cast` <Co:376>) $dRecElem66

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~68 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~68 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 231, coercions: 499, joins: 0/0}
$dRecElem68
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem68
  = $fRecElemaRecrr'::S ($d~68 `cast` <Co:499>) $dRecElem67

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~69 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~69 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 254, coercions: 633, joins: 0/0}
$dRecElem69
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem69
  = $fRecElemaRecrr'::S ($d~69 `cast` <Co:633>) $dRecElem68

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~70
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~70 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 277, coercions: 778, joins: 0/0}
$dRecElem70
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem70
  = $fRecElemaRecrr'::S ($d~70 `cast` <Co:778>) $dRecElem69

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~71
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~71 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 300, coercions: 934, joins: 0/0}
$dRecElem71
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem71
  = $fRecElemaRecrr'::S ($d~71 `cast` <Co:934>) $dRecElem70

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~72
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~72 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 323, coercions: 1,101, joins: 0/0}
$dRecElem72
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem72
  = $fRecElemaRecrr'::S ($d~72 `cast` <Co:1101>) $dRecElem71

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~73
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~73 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 346, coercions: 1,279, joins: 0/0}
$dRecElem73
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem73
  = $fRecElemaRecrr'::S ($d~73 `cast` <Co:1279>) $dRecElem72

-- RHS size: {terms: 1, types: 23, coercions: 11, joins: 0/0}
$d~74
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$d~74 = Eq# @~ <Co:11>

-- RHS size: {terms: 3, types: 369, coercions: 1,468, joins: 0/0}
$dRecElem74
  :: RecElem
       Rec
       '("a10", Int)
       '("a10", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))))
$dRecElem74
  = $fRecElemaRecrr'::S ($d~74 `cast` <Co:1468>) $dRecElem73

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~75 :: 'S 'Z ~ 'S 'Z
$d~75 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 268, coercions: 185, joins: 0/0}
$dRecElem75
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem75
  = $fRecElemaRecrr'::S ($d~75 `cast` <Co:185>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~76 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~76 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 207, coercions: 297, joins: 0/0}
$dRecElem76
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem76
  = $fRecElemaRecrr'::S ($d~76 `cast` <Co:297>) $dRecElem75

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~77 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~77 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 230, coercions: 420, joins: 0/0}
$dRecElem77
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem77
  = $fRecElemaRecrr'::S ($d~77 `cast` <Co:420>) $dRecElem76

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~78 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~78 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 253, coercions: 554, joins: 0/0}
$dRecElem78
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem78
  = $fRecElemaRecrr'::S ($d~78 `cast` <Co:554>) $dRecElem77

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~79 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~79 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 276, coercions: 699, joins: 0/0}
$dRecElem79
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem79
  = $fRecElemaRecrr'::S ($d~79 `cast` <Co:699>) $dRecElem78

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~80
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~80 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 299, coercions: 855, joins: 0/0}
$dRecElem80
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem80
  = $fRecElemaRecrr'::S ($d~80 `cast` <Co:855>) $dRecElem79

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~81
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~81 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 322, coercions: 1,022, joins: 0/0}
$dRecElem81
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem81
  = $fRecElemaRecrr'::S ($d~81 `cast` <Co:1022>) $dRecElem80

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~82
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~82 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 345, coercions: 1,200, joins: 0/0}
$dRecElem82
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem82
  = $fRecElemaRecrr'::S ($d~82 `cast` <Co:1200>) $dRecElem81

-- RHS size: {terms: 1, types: 21, coercions: 10, joins: 0/0}
$d~83
  :: 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$d~83 = Eq# @~ <Co:10>

-- RHS size: {terms: 3, types: 368, coercions: 1,389, joins: 0/0}
$dRecElem83
  :: RecElem
       Rec
       '("a9", Int)
       '("a9", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))))
$dRecElem83
  = $fRecElemaRecrr'::S ($d~83 `cast` <Co:1389>) $dRecElem82

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~84 :: 'S 'Z ~ 'S 'Z
$d~84 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 301, coercions: 207, joins: 0/0}
$dRecElem84
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem84
  = $fRecElemaRecrr'::S ($d~84 `cast` <Co:207>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~85 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~85 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 229, coercions: 330, joins: 0/0}
$dRecElem85
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem85
  = $fRecElemaRecrr'::S ($d~85 `cast` <Co:330>) $dRecElem84

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~86 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~86 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 252, coercions: 464, joins: 0/0}
$dRecElem86
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem86
  = $fRecElemaRecrr'::S ($d~86 `cast` <Co:464>) $dRecElem85

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~87 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~87 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 275, coercions: 609, joins: 0/0}
$dRecElem87
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem87
  = $fRecElemaRecrr'::S ($d~87 `cast` <Co:609>) $dRecElem86

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~88 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~88 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 298, coercions: 765, joins: 0/0}
$dRecElem88
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem88
  = $fRecElemaRecrr'::S ($d~88 `cast` <Co:765>) $dRecElem87

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~89
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~89 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 321, coercions: 932, joins: 0/0}
$dRecElem89
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem89
  = $fRecElemaRecrr'::S ($d~89 `cast` <Co:932>) $dRecElem88

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~90
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~90 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 344, coercions: 1,110, joins: 0/0}
$dRecElem90
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem90
  = $fRecElemaRecrr'::S ($d~90 `cast` <Co:1110>) $dRecElem89

-- RHS size: {terms: 1, types: 19, coercions: 9, joins: 0/0}
$d~91
  :: 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
     ~ 'S ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$d~91 = Eq# @~ <Co:9>

-- RHS size: {terms: 3, types: 367, coercions: 1,299, joins: 0/0}
$dRecElem91
  :: RecElem
       Rec
       '("a8", Int)
       '("a8", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S ('S 'Z))))))))
$dRecElem91
  = $fRecElemaRecrr'::S ($d~91 `cast` <Co:1299>) $dRecElem90

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~92 :: 'S 'Z ~ 'S 'Z
$d~92 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 334, coercions: 229, joins: 0/0}
$dRecElem92
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem92
  = $fRecElemaRecrr'::S ($d~92 `cast` <Co:229>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~93 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~93 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 251, coercions: 363, joins: 0/0}
$dRecElem93
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem93
  = $fRecElemaRecrr'::S ($d~93 `cast` <Co:363>) $dRecElem92

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~94 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~94 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 274, coercions: 508, joins: 0/0}
$dRecElem94
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem94
  = $fRecElemaRecrr'::S ($d~94 `cast` <Co:508>) $dRecElem93

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~95 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~95 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 297, coercions: 664, joins: 0/0}
$dRecElem95
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem95
  = $fRecElemaRecrr'::S ($d~95 `cast` <Co:664>) $dRecElem94

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~96 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~96 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 320, coercions: 831, joins: 0/0}
$dRecElem96
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem96
  = $fRecElemaRecrr'::S ($d~96 `cast` <Co:831>) $dRecElem95

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~97
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~97 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 343, coercions: 1,009, joins: 0/0}
$dRecElem97
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem97
  = $fRecElemaRecrr'::S ($d~97 `cast` <Co:1009>) $dRecElem96

-- RHS size: {terms: 1, types: 17, coercions: 8, joins: 0/0}
$d~98
  :: 'S ('S ('S ('S ('S ('S ('S 'Z))))))
     ~ 'S ('S ('S ('S ('S ('S ('S 'Z))))))
$d~98 = Eq# @~ <Co:8>

-- RHS size: {terms: 3, types: 366, coercions: 1,198, joins: 0/0}
$dRecElem98
  :: RecElem
       Rec
       '("a7", Int)
       '("a7", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S ('S 'Z)))))))
$dRecElem98
  = $fRecElemaRecrr'::S ($d~98 `cast` <Co:1198>) $dRecElem97

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~99 :: 'S 'Z ~ 'S 'Z
$d~99 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 367, coercions: 251, joins: 0/0}
$dRecElem99
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem99
  = $fRecElemaRecrr'::S ($d~99 `cast` <Co:251>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~100 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~100 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 273, coercions: 396, joins: 0/0}
$dRecElem100
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem100
  = $fRecElemaRecrr'::S ($d~100 `cast` <Co:396>) $dRecElem99

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~101 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~101 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 296, coercions: 552, joins: 0/0}
$dRecElem101
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem101
  = $fRecElemaRecrr'::S ($d~101 `cast` <Co:552>) $dRecElem100

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~102 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~102 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 319, coercions: 719, joins: 0/0}
$dRecElem102
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem102
  = $fRecElemaRecrr'::S ($d~102 `cast` <Co:719>) $dRecElem101

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~103 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~103 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 342, coercions: 897, joins: 0/0}
$dRecElem103
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem103
  = $fRecElemaRecrr'::S ($d~103 `cast` <Co:897>) $dRecElem102

-- RHS size: {terms: 1, types: 15, coercions: 7, joins: 0/0}
$d~104
  :: 'S ('S ('S ('S ('S ('S 'Z))))) ~ 'S ('S ('S ('S ('S ('S 'Z)))))
$d~104 = Eq# @~ <Co:7>

-- RHS size: {terms: 3, types: 365, coercions: 1,086, joins: 0/0}
$dRecElem104
  :: RecElem
       Rec
       '("a6", Int)
       '("a6", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S ('S 'Z))))))
$dRecElem104
  = $fRecElemaRecrr'::S ($d~104 `cast` <Co:1086>) $dRecElem103

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~105 :: 'S 'Z ~ 'S 'Z
$d~105 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 400, coercions: 273, joins: 0/0}
$dRecElem105
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a4", Int), '("a5", Int), '("a6", Int), '("a7", Int),
          '("a8", Int), '("a9", Int), '("a10", Int), '("a11", Int),
          '("a12", Int), '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem105
  = $fRecElemaRecrr'::S ($d~105 `cast` <Co:273>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~106 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~106 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 295, coercions: 429, joins: 0/0}
$dRecElem106
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S ('S 'Z))
$dRecElem106
  = $fRecElemaRecrr'::S ($d~106 `cast` <Co:429>) $dRecElem105

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~107 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~107 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 318, coercions: 596, joins: 0/0}
$dRecElem107
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem107
  = $fRecElemaRecrr'::S ($d~107 `cast` <Co:596>) $dRecElem106

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~108 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~108 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 341, coercions: 774, joins: 0/0}
$dRecElem108
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S ('S 'Z))))
$dRecElem108
  = $fRecElemaRecrr'::S ($d~108 `cast` <Co:774>) $dRecElem107

-- RHS size: {terms: 1, types: 13, coercions: 6, joins: 0/0}
$d~109 :: 'S ('S ('S ('S ('S 'Z)))) ~ 'S ('S ('S ('S ('S 'Z))))
$d~109 = Eq# @~ <Co:6>

-- RHS size: {terms: 3, types: 364, coercions: 963, joins: 0/0}
$dRecElem109
  :: RecElem
       Rec
       '("a5", Int)
       '("a5", Int)
       Fields
       Fields
       ('S ('S ('S ('S ('S 'Z)))))
$dRecElem109
  = $fRecElemaRecrr'::S ($d~109 `cast` <Co:963>) $dRecElem108

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~110 :: 'S 'Z ~ 'S 'Z
$d~110 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 433, coercions: 295, joins: 0/0}
$dRecElem110
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       '[ '("a3", Int), '("a4", Int), '("a5", Int), '("a6", Int),
          '("a7", Int), '("a8", Int), '("a9", Int), '("a10", Int),
          '("a11", Int), '("a12", Int), '("a13", Int), '("a14", Int),
          '("a15", Int)]
       ('S 'Z)
$dRecElem110
  = $fRecElemaRecrr'::S ($d~110 `cast` <Co:295>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~111 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~111 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 317, coercions: 462, joins: 0/0}
$dRecElem111
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem111
  = $fRecElemaRecrr'::S ($d~111 `cast` <Co:462>) $dRecElem110

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~112 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~112 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 340, coercions: 640, joins: 0/0}
$dRecElem112
  :: RecElem
       Rec
       '("a4", Int)
       '("a4", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S ('S 'Z)))
$dRecElem112
  = $fRecElemaRecrr'::S ($d~112 `cast` <Co:640>) $dRecElem111

-- RHS size: {terms: 1, types: 11, coercions: 5, joins: 0/0}
$d~113 :: 'S ('S ('S ('S 'Z))) ~ 'S ('S ('S ('S 'Z)))
$d~113 = Eq# @~ <Co:5>

-- RHS size: {terms: 3, types: 363, coercions: 829, joins: 0/0}
$dRecElem113
  :: RecElem
       Rec '("a4", Int) '("a4", Int) Fields Fields ('S ('S ('S ('S 'Z))))
$dRecElem113
  = $fRecElemaRecrr'::S ($d~113 `cast` <Co:829>) $dRecElem112

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~114 :: 'S 'Z ~ 'S 'Z
$d~114 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 466, coercions: 317, joins: 0/0}
$dRecElem114
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       '[ '("a2", Int), '("a3", Int), '("a4", Int), '("a5", Int),
          '("a6", Int), '("a7", Int), '("a8", Int), '("a9", Int),
          '("a10", Int), '("a11", Int), '("a12", Int), '("a13", Int),
          '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem114
  = $fRecElemaRecrr'::S ($d~114 `cast` <Co:317>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~115 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~115 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 339, coercions: 495, joins: 0/0}
$dRecElem115
  :: RecElem
       Rec
       '("a3", Int)
       '("a3", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S ('S 'Z))
$dRecElem115
  = $fRecElemaRecrr'::S ($d~115 `cast` <Co:495>) $dRecElem114

-- RHS size: {terms: 1, types: 9, coercions: 4, joins: 0/0}
$d~116 :: 'S ('S ('S 'Z)) ~ 'S ('S ('S 'Z))
$d~116 = Eq# @~ <Co:4>

-- RHS size: {terms: 3, types: 362, coercions: 684, joins: 0/0}
$dRecElem116
  :: RecElem
       Rec '("a3", Int) '("a3", Int) Fields Fields ('S ('S ('S 'Z)))
$dRecElem116
  = $fRecElemaRecrr'::S ($d~116 `cast` <Co:684>) $dRecElem115

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~117 :: 'S 'Z ~ 'S 'Z
$d~117 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 499, coercions: 339, joins: 0/0}
$dRecElem117
  :: RecElem
       Rec
       '("a2", Int)
       '("a2", Int)
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       '[ '("a1", Int), '("a2", Int), '("a3", Int), '("a4", Int),
          '("a5", Int), '("a6", Int), '("a7", Int), '("a8", Int),
          '("a9", Int), '("a10", Int), '("a11", Int), '("a12", Int),
          '("a13", Int), '("a14", Int), '("a15", Int)]
       ('S 'Z)
$dRecElem117
  = $fRecElemaRecrr'::S ($d~117 `cast` <Co:339>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 1, types: 7, coercions: 3, joins: 0/0}
$d~118 :: 'S ('S 'Z) ~ 'S ('S 'Z)
$d~118 = Eq# @~ <Co:3>

-- RHS size: {terms: 3, types: 361, coercions: 528, joins: 0/0}
$dRecElem118
  :: RecElem Rec '("a2", Int) '("a2", Int) Fields Fields ('S ('S 'Z))
$dRecElem118
  = $fRecElemaRecrr'::S ($d~118 `cast` <Co:528>) $dRecElem117

-- RHS size: {terms: 1, types: 5, coercions: 2, joins: 0/0}
$d~119 :: 'S 'Z ~ 'S 'Z
$d~119 = Eq# @~ <Co:2>

-- RHS size: {terms: 3, types: 532, coercions: 361, joins: 0/0}
$dRecElem119
  :: RecElem Rec '("a1", Int) '("a1", Int) Fields Fields ('S 'Z)
$dRecElem119
  = $fRecElemaRecrr'::S ($d~119 `cast` <Co:361>) $fRecElemaRecrr'::Z

-- RHS size: {terms: 193,
              types: 1,096,
              coercions: 18,508,
              joins: 0/18}
sumRec :: Rec ElField Fields -> Int
sumRec
  = \ (str :: Rec ElField Fields) ->
      let {
        get
          :: forall (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *)
                    (s :: Symbol) p (rs :: [(Symbol, *)]).
             (RecElemFCtx record ElField,
              RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs)) =>
             Label s -> record ElField rs -> p
        get
          = \ (@ (record :: ((Symbol, *) -> *) -> [(Symbol, *)] -> *))
              (@ (s :: Symbol))
              (@ p)
              (@ (rs :: [(Symbol, *)]))
              (irred :: RecElemFCtx record ElField)
              ($dRecElem120
                 :: RecElem record '(s, p) '(s, p) rs rs (RIndex '(s, p) rs))
              _
              (eta1 :: record ElField rs) ->
              let {
                v :: p
                v = case break<0>(eta1) rget $dRecElem120 irred eta1 of
                    { Field @ s1 @ t co $dKnownSymbol16 ds ->
                    ds `cast` <Co:4>
                    } } in
              break<1>(v) v } in
      break<32>(str,get)
      + $fNumInt
        (break<30>(str,get)
         + $fNumInt
           (break<28>(str,get)
            + $fNumInt
              (break<26>(str,get)
               + $fNumInt
                 (break<24>(str,get)
                  + $fNumInt
                    (break<22>(str,get)
                     + $fNumInt
                       (break<20>(str,get)
                        + $fNumInt
                          (break<18>(str,get)
                           + $fNumInt
                             (break<16>(str,get)
                              + $fNumInt
                                (break<14>(str,get)
                                 + $fNumInt
                                   (break<12>(str,get)
                                    + $fNumInt
                                      (break<10>(str,get)
                                       + $fNumInt
                                         (break<8>(str,get)
                                          + $fNumInt
                                            (break<6>(str,get)
                                             + $fNumInt
                                               (break<4>(str,get)
                                                + $fNumInt
                                                  (break<2>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($fRecElemaRecrr'::Z
                                                                 `cast` <Co:203>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v)
                                                  (break<3>(str,get)
                                                   let {
                                                     v :: Int
                                                     v = case break<0>(str)
                                                              rget
                                                                ($dRecElem119 `cast` <Co:380>)
                                                                (C:(%%) `cast` <Co:7>)
                                                                str
                                                         of
                                                         { Field @ s @ t co $dKnownSymbol16 ds ->
                                                         ds `cast` <Co:4>
                                                         } } in
                                                   break<1>(v) v))
                                               (break<5>(str,get)
                                                let {
                                                  v :: Int
                                                  v = case break<0>(str)
                                                           rget
                                                             ($dRecElem118 `cast` <Co:546>)
                                                             (C:(%%) `cast` <Co:7>)
                                                             str
                                                      of
                                                      { Field @ s @ t co $dKnownSymbol16 ds ->
                                                      ds `cast` <Co:4>
                                                      } } in
                                                break<1>(v) v))
                                            (break<7>(str,get)
                                             let {
                                               v :: Int
                                               v = case break<0>(str)
                                                        rget
                                                          ($dRecElem116 `cast` <Co:701>)
                                                          (C:(%%) `cast` <Co:7>)
                                                          str
                                                   of
                                                   { Field @ s @ t co $dKnownSymbol16 ds ->
                                                   ds `cast` <Co:4>
                                                   } } in
                                             break<1>(v) v))
                                         (break<9>(str,get)
                                          let {
                                            v :: Int
                                            v = case break<0>(str)
                                                     rget
                                                       ($dRecElem113 `cast` <Co:845>)
                                                       (C:(%%) `cast` <Co:7>)
                                                       str
                                                of
                                                { Field @ s @ t co $dKnownSymbol16 ds ->
                                                ds `cast` <Co:4>
                                                } } in
                                          break<1>(v) v))
                                      (break<11>(str,get)
                                       let {
                                         v :: Int
                                         v = case break<0>(str)
                                                  rget
                                                    ($dRecElem109 `cast` <Co:978>)
                                                    (C:(%%) `cast` <Co:7>)
                                                    str
                                             of
                                             { Field @ s @ t co $dKnownSymbol16 ds ->
                                             ds `cast` <Co:4>
                                             } } in
                                       break<1>(v) v))
                                   (break<13>(str,get)
                                    let {
                                      v :: Int
                                      v = case break<0>(str)
                                               rget
                                                 ($dRecElem104 `cast` <Co:1100>)
                                                 (C:(%%) `cast` <Co:7>)
                                                 str
                                          of
                                          { Field @ s @ t co $dKnownSymbol16 ds ->
                                          ds `cast` <Co:4>
                                          } } in
                                    break<1>(v) v))
                                (break<15>(str,get)
                                 let {
                                   v :: Int
                                   v = case break<0>(str)
                                            rget
                                              ($dRecElem98 `cast` <Co:1211>)
                                              (C:(%%) `cast` <Co:7>)
                                              str
                                       of
                                       { Field @ s @ t co $dKnownSymbol16 ds ->
                                       ds `cast` <Co:4>
                                       } } in
                                 break<1>(v) v))
                             (break<17>(str,get)
                              let {
                                v :: Int
                                v = case break<0>(str)
                                         rget
                                           ($dRecElem91 `cast` <Co:1311>) (C:(%%) `cast` <Co:7>) str
                                    of
                                    { Field @ s @ t co $dKnownSymbol16 ds ->
                                    ds `cast` <Co:4>
                                    } } in
                              break<1>(v) v))
                          (break<19>(str,get)
                           let {
                             v :: Int
                             v = case break<0>(str)
                                      rget ($dRecElem83 `cast` <Co:1400>) (C:(%%) `cast` <Co:7>) str
                                 of
                                 { Field @ s @ t co $dKnownSymbol16 ds ->
                                 ds `cast` <Co:4>
                                 } } in
                           break<1>(v) v))
                       (break<21>(str,get)
                        let {
                          v :: Int
                          v = case break<0>(str)
                                   rget ($dRecElem74 `cast` <Co:1478>) (C:(%%) `cast` <Co:7>) str
                              of
                              { Field @ s @ t co $dKnownSymbol16 ds ->
                              ds `cast` <Co:4>
                              } } in
                        break<1>(v) v))
                    (break<23>(str,get)
                     let {
                       v :: Int
                       v = case break<0>(str)
                                rget ($dRecElem64 `cast` <Co:1545>) (C:(%%) `cast` <Co:7>) str
                           of
                           { Field @ s @ t co $dKnownSymbol16 ds ->
                           ds `cast` <Co:4>
                           } } in
                     break<1>(v) v))
                 (break<25>(str,get)
                  let {
                    v :: Int
                    v = case break<0>(str)
                             rget ($dRecElem53 `cast` <Co:1601>) (C:(%%) `cast` <Co:7>) str
                        of
                        { Field @ s @ t co $dKnownSymbol16 ds ->
                        ds `cast` <Co:4>
                        } } in
                  break<1>(v) v))
              (break<27>(str,get)
               let {
                 v :: Int
                 v = case break<0>(str)
                          rget ($dRecElem41 `cast` <Co:1646>) (C:(%%) `cast` <Co:7>) str
                     of
                     { Field @ s @ t co $dKnownSymbol16 ds ->
                     ds `cast` <Co:4>
                     } } in
               break<1>(v) v))
           (break<29>(str,get)
            let {
              v :: Int
              v = case break<0>(str)
                       rget ($dRecElem28 `cast` <Co:1680>) (C:(%%) `cast` <Co:7>) str
                  of
                  { Field @ s @ t co $dKnownSymbol16 ds ->
                  ds `cast` <Co:4>
                  } } in
            break<1>(v) v))
        (break<31>(str,get)
         let {
           v :: Int
           v = case break<0>(str)
                    rget ($dRecElem14 `cast` <Co:1703>) (C:(%%) `cast` <Co:7>) str
               of
               { Field @ s @ t co $dKnownSymbol16 ds ->
               ds `cast` <Co:4>
               } } in
         break<1>(v) v)


